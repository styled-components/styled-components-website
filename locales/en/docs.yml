title: Documentation
description: Learn how to use styled-components and to style your apps without stress
about: Utilising tagged template literals (a recent addition to JavaScript) and the power of CSS, styled-components allows you to write actual CSS code to style your components. It also removes the mapping between components and styles – using components as a low-level styling construct could not be easier!
basics: Basics
basicsDescription: Get Started with styled-components basics.
motivation: |
  ## Motivation

  This talk by Max Stoiber is a really thorough introduction to styled-components
  and goes through what the motivations behind its creation were, along with some
  other information to get started with.
advanced: Advanced
installation: |
  ## Installation

  Install styled-components from npm:

  ```
  npm install --save styled-components
  ```
gettingStarted: |
  ## Getting Started

  styled-components utilises tagged template literals to style your components.

  It removes the mapping between components and styles. This means that when you're defining your styles,
  you're actually creating a normal React component, that has your styles attached to it.

  This example creates two simple components, a wrapper and a title, with some styles attached to it.
  You can edit the code and get a feel for how you'd work with styled-components.

  ```react
  // Create a Title component that'll render an <h1> tag with some styles
  const Title = styled.h1`
    font-size: 1.5em;
    text-align: center;
    color: palevioletred;
  `;

  // Create a Wrapper component that'll render a <section> tag with some styles
  const Wrapper = styled.section`
    padding: 4em;
    background: papayawhip;
  `;

  // Use Title and Wrapper like any other React component – except they're styled!
  render(
    <Wrapper>
      <Title>
        Hello World, this is my first styled component!
      </Title>
    </Wrapper>
  );
  ```

  > The CSS rules are automatically vendor prefixed, so you don't have to think about it.
