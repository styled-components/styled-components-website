// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DocsLayout renders correctly 1`] = `
.c27 {
  display: inline-block;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
  cursor: pointer;
  padding: 0.1111111111111111rem 0.4444444444444444rem;
  margin: -0.1111111111111111rem -0.4444444444444444rem;
}

.c8 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 0.2777777777777778rem;
  height: 0.2777777777777778rem;
  margin: 0 0.8333333333333334rem;
  border-radius: 50%;
  background: currentColor;
  opacity: 0.35;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c7 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  display: inline-block;
  line-height: 2.7777777777777777rem;
  -webkit-transition: opacity 0.2s,-webkit-transform 0.2s;
  -webkit-transition: opacity 0.2s,transform 0.2s;
  transition: opacity 0.2s,transform 0.2s;
  cursor: pointer;
  -webkit-letter-spacing: 0.022222222222222223rem;
  -moz-letter-spacing: 0.022222222222222223rem;
  -ms-letter-spacing: 0.022222222222222223rem;
  letter-spacing: 0.022222222222222223rem;
  color: currentColor;
}

.c7:hover,
.c7:focus {
  opacity: 0.8;
}

.c7:active {
  -webkit-transform: scale(0.95);
  -ms-transform: scale(0.95);
  transform: scale(0.95);
  opacity: 0.6;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c11 {
  display: inline-block;
  margin-right: 1.1111111111111112rem;
  line-height: 2.7777777777777777rem;
  -webkit-transition: opacity 0.2s,-webkit-transform 0.2s;
  -webkit-transition: opacity 0.2s,transform 0.2s;
  transition: opacity 0.2s,transform 0.2s;
  cursor: pointer;
}

.c11:last-child {
  margin-right: 0;
}

.c11:hover,
.c11:focus {
  opacity: 0.8;
}

.c11:active {
  -webkit-transform: scale(0.95);
  -ms-transform: scale(0.95);
  transform: scale(0.95);
  opacity: 0.6;
}

.c11 svg path {
  fill: currentColor;
}

.c12 {
  width: 0.7777777777777778rem;
  height: 0.7777777777777778rem;
}

.c13 {
  width: 0.9444444444444444rem;
  height: 0.9444444444444444rem;
}

.c14 {
  width: 0.9444444444444444rem;
  height: 0.7777777777777778rem;
}

.c5 {
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;
  background-position: center;
  background-size: contain;
  background-image: url(/static/nav-logo.png);
  width: 9.11111111111111rem;
  height: 2.2222222222222223rem;
}

.c19 {
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;
  background-position: center;
  background-size: contain;
  background-image: url(/static/icon.png);
  width: 5.555555555555555rem;
  height: 1.6666666666666667rem;
}

.c17 svg {
  display: inline-block;
}

.c17 svg path {
  fill: currentColor;
}

.c16 {
  background: none;
  outline: none;
  border: none;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  min-width: 2.7777777777777777rem;
  height: 2.7777777777777777rem;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
}

.c16:focus {
  border: 0.1111111111111111rem solid currentColor;
  border-radius: 0.1111111111111111rem;
}

.c15 {
  display: none;
}

.c21 {
  position: absolute;
  top: 2.7777777777777777rem;
  left: 0;
  right: 0;
  height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0 1.1111111111111112rem;
  -webkit-transition: height 0.1s;
  transition: height 0.1s;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-overflow-scrolling: touch;
  overflow-x: scroll;
  overflow-y: hidden;
  background: #efefef;
  color: #868686;
}

.c18 {
  display: inline-block;
  vertical-align: center;
}

.c20 {
  -webkit-transition: -webkit-transform 0.1s;
  -webkit-transition: transform 0.1s;
  transition: transform 0.1s;
}

.c22 {
  padding-right: 1.1111111111111112rem;
}

.c1 {
  position: fixed;
  left: 0;
  box-sizing: border-box;
  z-index: 3;
  width: 100%;
  height: 2.7777777777777777rem;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.8333333333333334rem;
  font-weight: 500;
  background: rgb(219,112,147);
  -webkit-transition: background 300ms ease-out;
  transition: background 300ms ease-out;
  color: white;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0 1.1111111111111112rem;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c4 {
  display: inline-block;
  vertical-align: center;
  margin-right: 1.9444444444444444rem;
}

.c23 {
  position: fixed;
  -webkit-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);
  display: block;
  z-index: 1;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  left: 0;
  top: 2.7777777777777777rem;
  bottom: 0;
  right: auto;
  width: 16.666666666666668rem;
  background: #efefef;
  box-sizing: border-box;
  color: inherit;
  overflow-y: auto;
  -webkit-transition: -webkit-transform 150ms ease-out;
  -webkit-transition: transform 150ms ease-out;
  transition: transform 150ms ease-out;
}

.c24 {
  display: block;
  box-sizing: border-box;
  height: 100%;
  padding-top: 1.3888888888888888rem;
}

.c25 {
  margin-bottom: 1.1111111111111112rem;
}

.c26 {
  display: block;
  margin: 0.5555555555555556rem 2.2222222222222223rem;
  font-weight: normal;
}

.c0 {
  padding-left: 16.666666666666668rem;
}

.c28 {
  width: 56.888888888888886rem;
  max-width: 100%;
  margin: 0 auto;
  padding: 5rem 2.2222222222222223rem 1.6666666666666667rem 2.2222222222222223rem;
  box-sizing: border-box;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  -webkit-transition: -webkit-transform 150ms ease-out;
  -webkit-transition: transform 150ms ease-out;
  transition: transform 150ms ease-out;
}

.c29 {
  display: block;
  text-align: left;
  width: 100%;
  color: rgb(243,182,97);
  font-size: 2.3333333333333335rem;
  font-weight: bold;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
}

@media (min-width:62.5em) {
  .c27 {
    border-radius: 0.16666666666666666rem;
  }

  .c27:hover {
    background: rgba(20,20,20,0.1);
  }
}

@media (max-width:62.5em) {
  .c15 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    height: 2.7777777777777777rem;
  }
}

@media (max-width:62.5em) {
  .c2 {
    display: none;
  }
}

@media (max-width:62.5em) {
  .c23 {
    -webkit-transform: translateX(-16.666666666666668rem);
    -ms-transform: translateX(-16.666666666666668rem);
    transform: translateX(-16.666666666666668rem);
  }
}

@media (max-width:62.5em) {
  .c0 {
    padding-left: 0;
  }
}

@media (max-width:62.5em) {
  .c28 {
    padding: 3.888888888888889rem 1.1111111111111112rem 1.6666666666666667rem 1.1111111111111112rem;
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0);
  }
}

<DocsLayout
  description=""
  title=""
>
  <ForwardRef>
    <StyledComponent
      forwardedClass={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-hMqMXs",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  padding-left: ",
              "16.666666666666668rem",
              ";

  ",
              "
  @media (max-width: ",
              "62.5",
              "em) {
    ",
              "
    padding-left: 0;
  ",
              ";
  }
",
              ";
",
            ],
          },
          "displayName": "styled.div",
          "render": [Function],
          "styledComponentId": "sc-hMqMXs",
          "target": "div",
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <SeoHead
          description=""
          title="styled-components"
        >
          <SideEffect(Head)>
            <Head />
          </SideEffect(Head)>
        </SeoHead>
        <Nav
          isMobileNavFolded={true}
          isSideFolded={true}
          onMobileNavToggle={[Function]}
          onRouteChange={[Function]}
          onSideToggle={[Function]}
          useDocsSidebarMenu={true}
        >
          <div>
            <Navbar
              isMobileNavFolded={true}
              isSideFolded={true}
              onMobileNavToggle={[Function]}
              onSideToggle={[Function]}
            >
              <ForwardRef>
                <StyledComponent
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jzJRlG",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "
  position: fixed;
  left: 0;
  box-sizing: border-box;
  z-index: 3;

  width: 100%;
  height: ",
                          "2.7777777777777777rem",
                          ";

  font-family: ",
                          "\\"Avenir Next\\", -apple-system, BlinkMacSystemFont, \\"Segoe UI\\", Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
                          ";
  font-size: ",
                          "0.8333333333333334rem",
                          ";
  font-weight: 500;
  background: ",
                          [Function],
                          ";
  transition: background 300ms ease-out;
  color: white;
",
                        ],
                      },
                      "displayName": "styled.nav",
                      "render": [Function],
                      "styledComponentId": "sc-jzJRlG",
                      "target": "nav",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <nav
                    className="c1"
                  >
                    <ForwardRef>
                      <StyledComponent
                        forwardedClass={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": undefined,
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cSHVUG",
                              "isStatic": true,
                              "lastClassName": "c2",
                              "rules": Array [
                                "
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 ",
                                "1.1111111111111112rem",
                                ";

  ",
                                "
  @media (max-width: ",
                                "62.5",
                                "em) {
    ",
                                "
    display: none;
  ",
                                ";
  }
",
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "render": [Function],
                            "styledComponentId": "sc-cSHVUG",
                            "target": "div",
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c2"
                        >
                          <ForwardRef>
                            <StyledComponent
                              forwardedClass={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": undefined,
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-kAzzGY",
                                    "isStatic": true,
                                    "lastClassName": "c3",
                                    "rules": Array [
                                      "
  display: flex;
  align-items: center;
  justify-content: flex-start;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "render": [Function],
                                  "styledComponentId": "sc-kAzzGY",
                                  "target": "div",
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c3"
                              >
                                <ForwardRef>
                                  <StyledComponent
                                    forwardedClass={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Object {
                                          "href": "/",
                                          "unstyled": true,
                                        },
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-kgoBCf",
                                          "isStatic": true,
                                          "lastClassName": "c4",
                                          "rules": Array [
                                            "
  display: inline-block;
  vertical-align: center;
  margin-right: ",
                                            "1.9444444444444444rem",
                                            ";
",
                                          ],
                                        },
                                        "displayName": "Styled(Link)",
                                        "render": [Function],
                                        "styledComponentId": "sc-kgoBCf",
                                        "target": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                        Symbol(Symbol.hasInstance): [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <Link
                                      className="c4"
                                      href="/"
                                      unstyled={true}
                                    >
                                      <Link
                                        href="/"
                                      >
                                        <a
                                          className="c4"
                                          href="/"
                                          onClick={[Function]}
                                        >
                                          <ForwardRef>
                                            <StyledComponent
                                              forwardedClass={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": undefined,
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-htoDjs",
                                                    "isStatic": false,
                                                    "lastClassName": "c19",
                                                    "rules": Array [
                                                      "
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;

  background-position: center;
  background-size: contain;

  ",
                                                      [Function],
                                                      ";
",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "render": [Function],
                                                  "styledComponentId": "sc-htoDjs",
                                                  "target": "div",
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="c5"
                                              />
                                            </StyledComponent>
                                          </ForwardRef>
                                        </a>
                                      </Link>
                                    </Link>
                                  </StyledComponent>
                                </ForwardRef>
                                <NavLinks>
                                  <ForwardRef>
                                    <StyledComponent
                                      forwardedClass={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": undefined,
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-bxivhb",
                                            "isStatic": true,
                                            "lastClassName": "c6",
                                            "rules": Array [
                                              "
  display: flex;
  align-items: center;
  flex: 0 0 auto;
",
                                            ],
                                          },
                                          "displayName": "styled.nav",
                                          "render": [Function],
                                          "styledComponentId": "sc-bxivhb",
                                          "target": "nav",
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <nav
                                        className="c6"
                                      >
                                        <ForwardRef
                                          href="/docs"
                                        >
                                          <StyledComponent
                                            forwardedClass={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Object {
                                                  "unstyled": true,
                                                },
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-ifAKCX",
                                                  "isStatic": true,
                                                  "lastClassName": "c7",
                                                  "rules": Array [
                                                    "
  flex: 0 0 auto;
  display: inline-block;
  line-height: ",
                                                    "2.7777777777777777rem",
                                                    ";
  transition: opacity 0.2s, transform 0.2s;
  cursor: pointer;

  letter-spacing: ",
                                                    "0.022222222222222223rem",
                                                    ";
  color: currentColor;

  &:hover,
  &:focus {
    opacity: 0.8;
  }

  &:active {
    transform: scale(0.95);
    opacity: 0.6;
  }
",
                                                  ],
                                                },
                                                "displayName": "Styled(Link)",
                                                "render": [Function],
                                                "styledComponentId": "sc-ifAKCX",
                                                "target": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                                Symbol(Symbol.hasInstance): [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            href="/docs"
                                          >
                                            <Link
                                              className="c7"
                                              href="/docs"
                                              unstyled={true}
                                            >
                                              <Link
                                                href="/docs"
                                              >
                                                <a
                                                  className="c7"
                                                  href="/docs"
                                                  onClick={[Function]}
                                                >
                                                  Documentation
                                                </a>
                                              </Link>
                                            </Link>
                                          </StyledComponent>
                                        </ForwardRef>
                                        <ForwardRef>
                                          <StyledComponent
                                            forwardedClass={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": undefined,
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-htpNat",
                                                  "isStatic": true,
                                                  "lastClassName": "c8",
                                                  "rules": Array [
                                                    "
  flex: 0 0 auto;
  width: ",
                                                    "0.2777777777777778rem",
                                                    ";
  height: ",
                                                    "0.2777777777777778rem",
                                                    ";
  margin: 0 ",
                                                    "0.8333333333333334rem",
                                                    ";

  border-radius: 50%;
  background: currentColor;
  opacity: 0.35;
",
                                                  ],
                                                },
                                                "displayName": "styled.span",
                                                "render": [Function],
                                                "styledComponentId": "sc-htpNat",
                                                "target": "span",
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <span
                                              className="c8"
                                            />
                                          </StyledComponent>
                                        </ForwardRef>
                                        <ForwardRef
                                          href="/ecosystem"
                                        >
                                          <StyledComponent
                                            forwardedClass={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Object {
                                                  "unstyled": true,
                                                },
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-ifAKCX",
                                                  "isStatic": true,
                                                  "lastClassName": "c7",
                                                  "rules": Array [
                                                    "
  flex: 0 0 auto;
  display: inline-block;
  line-height: ",
                                                    "2.7777777777777777rem",
                                                    ";
  transition: opacity 0.2s, transform 0.2s;
  cursor: pointer;

  letter-spacing: ",
                                                    "0.022222222222222223rem",
                                                    ";
  color: currentColor;

  &:hover,
  &:focus {
    opacity: 0.8;
  }

  &:active {
    transform: scale(0.95);
    opacity: 0.6;
  }
",
                                                  ],
                                                },
                                                "displayName": "Styled(Link)",
                                                "render": [Function],
                                                "styledComponentId": "sc-ifAKCX",
                                                "target": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                                Symbol(Symbol.hasInstance): [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            href="/ecosystem"
                                          >
                                            <Link
                                              className="c7"
                                              href="/ecosystem"
                                              unstyled={true}
                                            >
                                              <Link
                                                href="/ecosystem"
                                              >
                                                <a
                                                  className="c7"
                                                  href="/ecosystem"
                                                  onClick={[Function]}
                                                >
                                                  Ecosystem
                                                </a>
                                              </Link>
                                            </Link>
                                          </StyledComponent>
                                        </ForwardRef>
                                        <ForwardRef>
                                          <StyledComponent
                                            forwardedClass={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": undefined,
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-htpNat",
                                                  "isStatic": true,
                                                  "lastClassName": "c8",
                                                  "rules": Array [
                                                    "
  flex: 0 0 auto;
  width: ",
                                                    "0.2777777777777778rem",
                                                    ";
  height: ",
                                                    "0.2777777777777778rem",
                                                    ";
  margin: 0 ",
                                                    "0.8333333333333334rem",
                                                    ";

  border-radius: 50%;
  background: currentColor;
  opacity: 0.35;
",
                                                  ],
                                                },
                                                "displayName": "styled.span",
                                                "render": [Function],
                                                "styledComponentId": "sc-htpNat",
                                                "target": "span",
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <span
                                              className="c8"
                                            />
                                          </StyledComponent>
                                        </ForwardRef>
                                        <ForwardRef
                                          href="/releases"
                                        >
                                          <StyledComponent
                                            forwardedClass={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Object {
                                                  "unstyled": true,
                                                },
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-ifAKCX",
                                                  "isStatic": true,
                                                  "lastClassName": "c7",
                                                  "rules": Array [
                                                    "
  flex: 0 0 auto;
  display: inline-block;
  line-height: ",
                                                    "2.7777777777777777rem",
                                                    ";
  transition: opacity 0.2s, transform 0.2s;
  cursor: pointer;

  letter-spacing: ",
                                                    "0.022222222222222223rem",
                                                    ";
  color: currentColor;

  &:hover,
  &:focus {
    opacity: 0.8;
  }

  &:active {
    transform: scale(0.95);
    opacity: 0.6;
  }
",
                                                  ],
                                                },
                                                "displayName": "Styled(Link)",
                                                "render": [Function],
                                                "styledComponentId": "sc-ifAKCX",
                                                "target": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                                Symbol(Symbol.hasInstance): [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            href="/releases"
                                          >
                                            <Link
                                              className="c7"
                                              href="/releases"
                                              unstyled={true}
                                            >
                                              <Link
                                                href="/releases"
                                              >
                                                <a
                                                  className="c7"
                                                  href="/releases"
                                                  onClick={[Function]}
                                                >
                                                  Releases
                                                </a>
                                              </Link>
                                            </Link>
                                          </StyledComponent>
                                        </ForwardRef>
                                      </nav>
                                    </StyledComponent>
                                  </ForwardRef>
                                </NavLinks>
                              </div>
                            </StyledComponent>
                          </ForwardRef>
                          <ForwardRef>
                            <StyledComponent
                              forwardedClass={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": undefined,
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-chPdSV",
                                    "isStatic": true,
                                    "lastClassName": "c9",
                                    "rules": Array [
                                      "
  display: flex;
  align-items: center;
  justify-content: flex-end;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "render": [Function],
                                  "styledComponentId": "sc-chPdSV",
                                  "target": "div",
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c9"
                              >
                                <Social>
                                  <ForwardRef>
                                    <StyledComponent
                                      forwardedClass={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": undefined,
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-EHOje",
                                            "isStatic": true,
                                            "lastClassName": "c10",
                                            "rules": Array [
                                              "
  display: flex;
  align-items: center;
  flex: 1 1 auto;
",
                                            ],
                                          },
                                          "displayName": "styled.nav",
                                          "render": [Function],
                                          "styledComponentId": "sc-EHOje",
                                          "target": "nav",
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <nav
                                        className="c10"
                                      >
                                        <ForwardRef
                                          href="https://spectrum.chat/styled-components/"
                                        >
                                          <StyledComponent
                                            forwardedClass={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Object {
                                                  "unstyled": true,
                                                },
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bZQynM",
                                                  "isStatic": true,
                                                  "lastClassName": "c11",
                                                  "rules": Array [
                                                    "
  display: inline-block;
  margin-right: ",
                                                    "1.1111111111111112rem",
                                                    ";
  line-height: ",
                                                    "2.7777777777777777rem",
                                                    ";
  transition: opacity 0.2s, transform 0.2s;
  cursor: pointer;

  &:last-child {
    margin-right: 0;
  }

  &:hover,
  &:focus {
    opacity: 0.8;
  }

  &:active {
    transform: scale(0.95);
    opacity: 0.6;
  }

  svg {
    path {
      fill: currentColor;
    }
  }
",
                                                  ],
                                                },
                                                "displayName": "Styled(Link)",
                                                "render": [Function],
                                                "styledComponentId": "sc-bZQynM",
                                                "target": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                                Symbol(Symbol.hasInstance): [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            href="https://spectrum.chat/styled-components/"
                                          >
                                            <Link
                                              className="c11"
                                              href="https://spectrum.chat/styled-components/"
                                              unstyled={true}
                                            >
                                              <Link
                                                href="https://spectrum.chat/styled-components/"
                                              >
                                                <a
                                                  className="c11"
                                                  href="https://spectrum.chat/styled-components/"
                                                  onClick={[Function]}
                                                >
                                                  <Spectrum>
                                                    <ForwardRef
                                                      height="14"
                                                      viewBox="0 0 15 15"
                                                      width="14"
                                                    >
                                                      <StyledComponent
                                                        forwardedClass={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": undefined,
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-gzVnrw",
                                                              "isStatic": false,
                                                              "lastClassName": "c14",
                                                              "rules": Array [
                                                                "
  width: ",
                                                                [Function],
                                                                ";
  height: ",
                                                                [Function],
                                                                ";
",
                                                              ],
                                                            },
                                                            "displayName": "styled.svg",
                                                            "render": [Function],
                                                            "styledComponentId": "sc-gzVnrw",
                                                            "target": "svg",
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        height="14"
                                                        viewBox="0 0 15 15"
                                                        width="14"
                                                      >
                                                        <svg
                                                          className="c12"
                                                          height="14"
                                                          viewBox="0 0 15 15"
                                                          width="14"
                                                        >
                                                          <title>
                                                            spectrum
                                                          </title>
                                                          <path
                                                            d="M0 6.5V1c0-.6.4-1 1-1 9 .3 13.7 5 14 14 0 .6-.4 1-1 1H8.5c-.6 0-1-.4-1-1-.3-4.4-2-6.2-6.5-6.5-.6 0-1-.4-1-1z"
                                                            fill="#FFF"
                                                          />
                                                        </svg>
                                                      </StyledComponent>
                                                    </ForwardRef>
                                                  </Spectrum>
                                                </a>
                                              </Link>
                                            </Link>
                                          </StyledComponent>
                                        </ForwardRef>
                                        <ForwardRef
                                          href="https://github.com/styled-components"
                                        >
                                          <StyledComponent
                                            forwardedClass={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Object {
                                                  "unstyled": true,
                                                },
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bZQynM",
                                                  "isStatic": true,
                                                  "lastClassName": "c11",
                                                  "rules": Array [
                                                    "
  display: inline-block;
  margin-right: ",
                                                    "1.1111111111111112rem",
                                                    ";
  line-height: ",
                                                    "2.7777777777777777rem",
                                                    ";
  transition: opacity 0.2s, transform 0.2s;
  cursor: pointer;

  &:last-child {
    margin-right: 0;
  }

  &:hover,
  &:focus {
    opacity: 0.8;
  }

  &:active {
    transform: scale(0.95);
    opacity: 0.6;
  }

  svg {
    path {
      fill: currentColor;
    }
  }
",
                                                  ],
                                                },
                                                "displayName": "Styled(Link)",
                                                "render": [Function],
                                                "styledComponentId": "sc-bZQynM",
                                                "target": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                                Symbol(Symbol.hasInstance): [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            href="https://github.com/styled-components"
                                          >
                                            <Link
                                              className="c11"
                                              href="https://github.com/styled-components"
                                              unstyled={true}
                                            >
                                              <Link
                                                href="https://github.com/styled-components"
                                              >
                                                <a
                                                  className="c11"
                                                  href="https://github.com/styled-components"
                                                  onClick={[Function]}
                                                >
                                                  <Github>
                                                    <ForwardRef
                                                      height="17"
                                                      viewBox="0 0 17 17"
                                                      width="17"
                                                    >
                                                      <StyledComponent
                                                        forwardedClass={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": undefined,
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-gzVnrw",
                                                              "isStatic": false,
                                                              "lastClassName": "c14",
                                                              "rules": Array [
                                                                "
  width: ",
                                                                [Function],
                                                                ";
  height: ",
                                                                [Function],
                                                                ";
",
                                                              ],
                                                            },
                                                            "displayName": "styled.svg",
                                                            "render": [Function],
                                                            "styledComponentId": "sc-gzVnrw",
                                                            "target": "svg",
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        height="17"
                                                        viewBox="0 0 17 17"
                                                        width="17"
                                                      >
                                                        <svg
                                                          className="c13"
                                                          height="17"
                                                          viewBox="0 0 17 17"
                                                          width="17"
                                                        >
                                                          <title>
                                                            github
                                                          </title>
                                                          <path
                                                            d="M15.86 4.34c-.76-1.335-1.79-2.392-3.093-3.17C11.463.39 10.042 0 8.5 0 6.958 0 5.536.39 4.233 1.17 2.93 1.947 1.9 3.004 1.14 4.34.38 5.674 0 7.132 0 8.713c0 1.898.54 3.606 1.62 5.122 1.082 1.517 2.48 2.566 4.19 3.148.2.038.347.01.443-.08.096-.09.144-.203.144-.34l-.006-.612v-1l-.25.05c-.16.03-.36.05-.61.04-.24 0-.5-.03-.77-.08-.26-.05-.51-.16-.74-.34-.23-.18-.39-.41-.49-.7l-.11-.26c-.07-.17-.19-.36-.35-.58-.16-.21-.32-.35-.48-.43l-.08-.05c-.05-.04-.09-.08-.14-.132-.04-.053-.08-.106-.1-.16-.02-.053 0-.097.06-.13.06-.035.17-.052.32-.052l.22.036c.15.03.33.12.55.27.22.154.4.35.54.59.17.31.375.55.615.71.24.164.484.245.727.245s.456-.02.63-.056c.18-.037.346-.094.5-.17.067-.507.248-.896.54-1.17-.42-.043-.795-.112-1.13-.203-.34-.09-.685-.24-1.04-.44-.36-.2-.657-.455-.894-.76-.234-.3-.43-.7-.58-1.19-.15-.49-.225-1.06-.225-1.7 0-.917.29-1.695.875-2.34-.27-.69-.244-1.46.08-2.313.214-.07.53-.015.95.155.42.17.73.314.926.435.195.12.35.225.47.308.684-.2 1.394-.3 2.124-.3s1.44.1 2.124.297l.42-.27c.288-.184.628-.35 1.02-.5.39-.15.69-.195.895-.126.334.857.364 1.63.09 2.317.584.645.875 1.42.875 2.34 0 .64-.072 1.21-.223 1.707-.15.5-.343.897-.583 1.196-.24.298-.54.55-.896.754-.355.202-.702.35-1.04.44-.334.09-.712.16-1.132.205.38.34.57.875.57 1.61v2.39c0 .136.045.25.137.34.096.09.24.118.44.08 1.71-.582 3.11-1.632 4.19-3.15 1.06-1.525 1.6-3.235 1.6-5.13 0-1.58-.38-3.04-1.14-4.37z"
                                                            fill="#FFF"
                                                          />
                                                        </svg>
                                                      </StyledComponent>
                                                    </ForwardRef>
                                                  </Github>
                                                </a>
                                              </Link>
                                            </Link>
                                          </StyledComponent>
                                        </ForwardRef>
                                        <ForwardRef
                                          href="https://medium.com/styled-components"
                                        >
                                          <StyledComponent
                                            forwardedClass={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Object {
                                                  "unstyled": true,
                                                },
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bZQynM",
                                                  "isStatic": true,
                                                  "lastClassName": "c11",
                                                  "rules": Array [
                                                    "
  display: inline-block;
  margin-right: ",
                                                    "1.1111111111111112rem",
                                                    ";
  line-height: ",
                                                    "2.7777777777777777rem",
                                                    ";
  transition: opacity 0.2s, transform 0.2s;
  cursor: pointer;

  &:last-child {
    margin-right: 0;
  }

  &:hover,
  &:focus {
    opacity: 0.8;
  }

  &:active {
    transform: scale(0.95);
    opacity: 0.6;
  }

  svg {
    path {
      fill: currentColor;
    }
  }
",
                                                  ],
                                                },
                                                "displayName": "Styled(Link)",
                                                "render": [Function],
                                                "styledComponentId": "sc-bZQynM",
                                                "target": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                                Symbol(Symbol.hasInstance): [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            href="https://medium.com/styled-components"
                                          >
                                            <Link
                                              className="c11"
                                              href="https://medium.com/styled-components"
                                              unstyled={true}
                                            >
                                              <Link
                                                href="https://medium.com/styled-components"
                                              >
                                                <a
                                                  className="c11"
                                                  href="https://medium.com/styled-components"
                                                  onClick={[Function]}
                                                >
                                                  <Medium>
                                                    <ForwardRef
                                                      height="14"
                                                      viewBox="0 0 17 14"
                                                      width="17"
                                                    >
                                                      <StyledComponent
                                                        forwardedClass={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": undefined,
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-gzVnrw",
                                                              "isStatic": false,
                                                              "lastClassName": "c14",
                                                              "rules": Array [
                                                                "
  width: ",
                                                                [Function],
                                                                ";
  height: ",
                                                                [Function],
                                                                ";
",
                                                              ],
                                                            },
                                                            "displayName": "styled.svg",
                                                            "render": [Function],
                                                            "styledComponentId": "sc-gzVnrw",
                                                            "target": "svg",
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        height="14"
                                                        viewBox="0 0 17 14"
                                                        width="17"
                                                      >
                                                        <svg
                                                          className="c14"
                                                          height="14"
                                                          viewBox="0 0 17 14"
                                                          width="17"
                                                        >
                                                          <title>
                                                            medium
                                                          </title>
                                                          <path
                                                            d="M5.3 0H.5l1.8 2.4v9L0 13.7h5.3l-2-2.3V3.7L7.8 14 12 3.7v8.7l-1.3 1.3H17l-1.5-1.3v-11L17 0h-4.5L9 8.2 5.2 0z"
                                                            fill="#fff"
                                                          />
                                                        </svg>
                                                      </StyledComponent>
                                                    </ForwardRef>
                                                  </Medium>
                                                </a>
                                              </Link>
                                            </Link>
                                          </StyledComponent>
                                        </ForwardRef>
                                      </nav>
                                    </StyledComponent>
                                  </ForwardRef>
                                </Social>
                              </div>
                            </StyledComponent>
                          </ForwardRef>
                        </div>
                      </StyledComponent>
                    </ForwardRef>
                    <MobileNavbar
                      isMobileNavFolded={true}
                      isSideFolded={true}
                      onMobileNavToggle={[Function]}
                      onSideToggle={[Function]}
                    >
                      <ForwardRef>
                        <StyledComponent
                          forwardedClass={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": undefined,
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-gZMcBi",
                                "isStatic": true,
                                "lastClassName": "c15",
                                "rules": Array [
                                  "
  display: none;

  ",
                                  "
  @media (max-width: ",
                                  "62.5",
                                  "em) {
    ",
                                  "
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: ",
                                  "2.7777777777777777rem",
                                  ";
  ",
                                  ";
  }
",
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "render": [Function],
                              "styledComponentId": "sc-gZMcBi",
                              "target": "div",
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c15"
                          >
                            <ForwardRef
                              active={false}
                              onClick={[Function]}
                            >
                              <StyledComponent
                                active={false}
                                forwardedClass={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": undefined,
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-iwsKbI",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  ",
                                        "
  background: none;
  outline: none;
  border: none;
",
                                        ";
  flex: 0 0 auto;
  min-width: ",
                                        "2.7777777777777777rem",
                                        ";
  height: ",
                                        "2.7777777777777777rem",
                                        ";
  text-align: center;
  vertical-align: middle;
  cursor: pointer;

  ",
                                        [Function],
                                        ";
  &:focus {
    border: ",
                                        "0.1111111111111111rem",
                                        " solid currentColor;
    border-radius: ",
                                        "0.1111111111111111rem",
                                        ";
  }
",
                                      ],
                                    },
                                    "displayName": "styled.button",
                                    "render": [Function],
                                    "styledComponentId": "sc-iwsKbI",
                                    "target": "button",
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                onClick={[Function]}
                              >
                                <button
                                  className="c16"
                                  onClick={[Function]}
                                >
                                  <FoldIcon>
                                    <ForwardRef
                                      height="14"
                                      width="17"
                                      xmlns="http://www.w3.org/2000/svg"
                                      xmlnsXlink="http://www.w3.org/1999/xlink"
                                    >
                                      <StyledComponent
                                        forwardedClass={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": undefined,
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-dnqmqq",
                                              "isStatic": true,
                                              "lastClassName": "c17",
                                              "rules": Array [
                                                "
  svg {
    display: inline-block;

    path {
      fill: currentColor;
    }
  }
",
                                              ],
                                            },
                                            "displayName": "styled.svg",
                                            "render": [Function],
                                            "styledComponentId": "sc-dnqmqq",
                                            "target": "svg",
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        height="14"
                                        width="17"
                                        xmlns="http://www.w3.org/2000/svg"
                                        xmlnsXlink="http://www.w3.org/1999/xlink"
                                      >
                                        <svg
                                          className="c17"
                                          height="14"
                                          width="17"
                                          xmlns="http://www.w3.org/2000/svg"
                                          xmlnsXlink="http://www.w3.org/1999/xlink"
                                        >
                                          <title>
                                            fold
                                          </title>
                                          <use
                                            fill="#FFF"
                                            transform="translate(0 1)"
                                            xlinkHref="#fold"
                                          />
                                          <defs>
                                            <path
                                              d="M0 1h17v-2H0v2zm17 4H0v2h17V5zM0 13h17v-2H0v2z"
                                              id="fold"
                                            />
                                          </defs>
                                        </svg>
                                      </StyledComponent>
                                    </ForwardRef>
                                  </FoldIcon>
                                </button>
                              </StyledComponent>
                            </ForwardRef>
                            <ForwardRef>
                              <StyledComponent
                                forwardedClass={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Object {
                                      "aria-label": "styled components",
                                      "href": "/",
                                      "unstyled": true,
                                    },
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-VigVT",
                                      "isStatic": true,
                                      "lastClassName": "c18",
                                      "rules": Array [
                                        "
  display: inline-block;
  vertical-align: center;
",
                                      ],
                                    },
                                    "displayName": "Styled(Link)",
                                    "render": [Function],
                                    "styledComponentId": "sc-VigVT",
                                    "target": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                    Symbol(Symbol.hasInstance): [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <Link
                                  aria-label="styled components"
                                  className="c18"
                                  href="/"
                                  unstyled={true}
                                >
                                  <Link
                                    aria-label="styled components"
                                    href="/"
                                  >
                                    <a
                                      aria-label="styled components"
                                      className="c18"
                                      href="/"
                                      onClick={[Function]}
                                    >
                                      <ForwardRef
                                        compact={true}
                                      >
                                        <StyledComponent
                                          compact={true}
                                          forwardedClass={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": undefined,
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htoDjs",
                                                "isStatic": false,
                                                "lastClassName": "c19",
                                                "rules": Array [
                                                  "
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;

  background-position: center;
  background-size: contain;

  ",
                                                  [Function],
                                                  ";
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "render": [Function],
                                              "styledComponentId": "sc-htoDjs",
                                              "target": "div",
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c19"
                                          />
                                        </StyledComponent>
                                      </ForwardRef>
                                    </a>
                                  </Link>
                                </Link>
                              </StyledComponent>
                            </ForwardRef>
                            <ForwardRef
                              active={false}
                              onClick={[Function]}
                            >
                              <StyledComponent
                                active={false}
                                forwardedClass={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": undefined,
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-iwsKbI",
                                      "isStatic": false,
                                      "lastClassName": "c16",
                                      "rules": Array [
                                        "
  ",
                                        "
  background: none;
  outline: none;
  border: none;
",
                                        ";
  flex: 0 0 auto;
  min-width: ",
                                        "2.7777777777777777rem",
                                        ";
  height: ",
                                        "2.7777777777777777rem",
                                        ";
  text-align: center;
  vertical-align: middle;
  cursor: pointer;

  ",
                                        [Function],
                                        ";
  &:focus {
    border: ",
                                        "0.1111111111111111rem",
                                        " solid currentColor;
    border-radius: ",
                                        "0.1111111111111111rem",
                                        ";
  }
",
                                      ],
                                    },
                                    "displayName": "styled.button",
                                    "render": [Function],
                                    "styledComponentId": "sc-iwsKbI",
                                    "target": "button",
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                onClick={[Function]}
                              >
                                <button
                                  className="c16"
                                  onClick={[Function]}
                                >
                                  <ForwardRef
                                    shouldRotate={false}
                                  >
                                    <StyledComponent
                                      forwardedClass={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": undefined,
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jTzLTM",
                                            "isStatic": false,
                                            "lastClassName": "c20",
                                            "rules": Array [
                                              "
  transition: transform 0.1s;

  ",
                                              [Function],
                                              ";
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "render": [Function],
                                          "styledComponentId": "sc-jTzLTM",
                                          "target": "div",
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      shouldRotate={false}
                                    >
                                      <div
                                        className="c20"
                                      >
                                        <ArrowIcon>
                                          <ForwardRef
                                            height="8"
                                            width="12"
                                            xmlns="http://www.w3.org/2000/svg"
                                            xmlnsXlink="http://www.w3.org/1999/xlink"
                                          >
                                            <StyledComponent
                                              forwardedClass={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": undefined,
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-dnqmqq",
                                                    "isStatic": true,
                                                    "lastClassName": "c17",
                                                    "rules": Array [
                                                      "
  svg {
    display: inline-block;

    path {
      fill: currentColor;
    }
  }
",
                                                    ],
                                                  },
                                                  "displayName": "styled.svg",
                                                  "render": [Function],
                                                  "styledComponentId": "sc-dnqmqq",
                                                  "target": "svg",
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              height="8"
                                              width="12"
                                              xmlns="http://www.w3.org/2000/svg"
                                              xmlnsXlink="http://www.w3.org/1999/xlink"
                                            >
                                              <svg
                                                className="c17"
                                                height="8"
                                                width="12"
                                                xmlns="http://www.w3.org/2000/svg"
                                                xmlnsXlink="http://www.w3.org/1999/xlink"
                                              >
                                                <title>
                                                  arrow down
                                                </title>
                                                <use
                                                  fill="#FFF"
                                                  transform="translate(1 1)"
                                                  xlinkHref="#menuArrow"
                                                />
                                                <defs>
                                                  <path
                                                    d="M5 5l-.7.7.7.7.7-.7L5 5zM9.3-.7l-5 5 1.4 1.4 5-5L9.3-.7zm-3.6 5l-5-5L-.7.7l5 5 1.4-1.4z"
                                                    id="menuArrow"
                                                  />
                                                </defs>
                                              </svg>
                                            </StyledComponent>
                                          </ForwardRef>
                                        </ArrowIcon>
                                      </div>
                                    </StyledComponent>
                                  </ForwardRef>
                                </button>
                              </StyledComponent>
                            </ForwardRef>
                            <ForwardRef
                              isOpen={false}
                            >
                              <StyledComponent
                                forwardedClass={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": undefined,
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gqjmRU",
                                      "isStatic": false,
                                      "lastClassName": "c21",
                                      "rules": Array [
                                        "
  position: absolute;
  top: ",
                                        "2.7777777777777777rem",
                                        ";
  left: 0;
  right: 0;

  ",
                                        [Function],
                                        " display: flex;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: space-between;
  padding: 0 ",
                                        "1.1111111111111112rem",
                                        ";
  transition: height 0.1s;

  user-select: none;
  -webkit-overflow-scrolling: touch;
  overflow-x: scroll;
  overflow-y: hidden;

  background: ",
                                        "#efefef",
                                        ";
  color: #868686;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "render": [Function],
                                    "styledComponentId": "sc-gqjmRU",
                                    "target": "div",
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={false}
                              >
                                <div
                                  className="c21"
                                >
                                  <NavLinks>
                                    <ForwardRef>
                                      <StyledComponent
                                        forwardedClass={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": undefined,
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-bxivhb",
                                              "isStatic": true,
                                              "lastClassName": "c6",
                                              "rules": Array [
                                                "
  display: flex;
  align-items: center;
  flex: 0 0 auto;
",
                                              ],
                                            },
                                            "displayName": "styled.nav",
                                            "render": [Function],
                                            "styledComponentId": "sc-bxivhb",
                                            "target": "nav",
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <nav
                                          className="c6"
                                        >
                                          <ForwardRef
                                            href="/docs"
                                          >
                                            <StyledComponent
                                              forwardedClass={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Object {
                                                    "unstyled": true,
                                                  },
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-ifAKCX",
                                                    "isStatic": true,
                                                    "lastClassName": "c7",
                                                    "rules": Array [
                                                      "
  flex: 0 0 auto;
  display: inline-block;
  line-height: ",
                                                      "2.7777777777777777rem",
                                                      ";
  transition: opacity 0.2s, transform 0.2s;
  cursor: pointer;

  letter-spacing: ",
                                                      "0.022222222222222223rem",
                                                      ";
  color: currentColor;

  &:hover,
  &:focus {
    opacity: 0.8;
  }

  &:active {
    transform: scale(0.95);
    opacity: 0.6;
  }
",
                                                    ],
                                                  },
                                                  "displayName": "Styled(Link)",
                                                  "render": [Function],
                                                  "styledComponentId": "sc-ifAKCX",
                                                  "target": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                  Symbol(Symbol.hasInstance): [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              href="/docs"
                                            >
                                              <Link
                                                className="c7"
                                                href="/docs"
                                                unstyled={true}
                                              >
                                                <Link
                                                  href="/docs"
                                                >
                                                  <a
                                                    className="c7"
                                                    href="/docs"
                                                    onClick={[Function]}
                                                  >
                                                    Documentation
                                                  </a>
                                                </Link>
                                              </Link>
                                            </StyledComponent>
                                          </ForwardRef>
                                          <ForwardRef>
                                            <StyledComponent
                                              forwardedClass={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": undefined,
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-htpNat",
                                                    "isStatic": true,
                                                    "lastClassName": "c8",
                                                    "rules": Array [
                                                      "
  flex: 0 0 auto;
  width: ",
                                                      "0.2777777777777778rem",
                                                      ";
  height: ",
                                                      "0.2777777777777778rem",
                                                      ";
  margin: 0 ",
                                                      "0.8333333333333334rem",
                                                      ";

  border-radius: 50%;
  background: currentColor;
  opacity: 0.35;
",
                                                    ],
                                                  },
                                                  "displayName": "styled.span",
                                                  "render": [Function],
                                                  "styledComponentId": "sc-htpNat",
                                                  "target": "span",
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <span
                                                className="c8"
                                              />
                                            </StyledComponent>
                                          </ForwardRef>
                                          <ForwardRef
                                            href="/ecosystem"
                                          >
                                            <StyledComponent
                                              forwardedClass={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Object {
                                                    "unstyled": true,
                                                  },
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-ifAKCX",
                                                    "isStatic": true,
                                                    "lastClassName": "c7",
                                                    "rules": Array [
                                                      "
  flex: 0 0 auto;
  display: inline-block;
  line-height: ",
                                                      "2.7777777777777777rem",
                                                      ";
  transition: opacity 0.2s, transform 0.2s;
  cursor: pointer;

  letter-spacing: ",
                                                      "0.022222222222222223rem",
                                                      ";
  color: currentColor;

  &:hover,
  &:focus {
    opacity: 0.8;
  }

  &:active {
    transform: scale(0.95);
    opacity: 0.6;
  }
",
                                                    ],
                                                  },
                                                  "displayName": "Styled(Link)",
                                                  "render": [Function],
                                                  "styledComponentId": "sc-ifAKCX",
                                                  "target": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                  Symbol(Symbol.hasInstance): [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              href="/ecosystem"
                                            >
                                              <Link
                                                className="c7"
                                                href="/ecosystem"
                                                unstyled={true}
                                              >
                                                <Link
                                                  href="/ecosystem"
                                                >
                                                  <a
                                                    className="c7"
                                                    href="/ecosystem"
                                                    onClick={[Function]}
                                                  >
                                                    Ecosystem
                                                  </a>
                                                </Link>
                                              </Link>
                                            </StyledComponent>
                                          </ForwardRef>
                                          <ForwardRef>
                                            <StyledComponent
                                              forwardedClass={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": undefined,
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-htpNat",
                                                    "isStatic": true,
                                                    "lastClassName": "c8",
                                                    "rules": Array [
                                                      "
  flex: 0 0 auto;
  width: ",
                                                      "0.2777777777777778rem",
                                                      ";
  height: ",
                                                      "0.2777777777777778rem",
                                                      ";
  margin: 0 ",
                                                      "0.8333333333333334rem",
                                                      ";

  border-radius: 50%;
  background: currentColor;
  opacity: 0.35;
",
                                                    ],
                                                  },
                                                  "displayName": "styled.span",
                                                  "render": [Function],
                                                  "styledComponentId": "sc-htpNat",
                                                  "target": "span",
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <span
                                                className="c8"
                                              />
                                            </StyledComponent>
                                          </ForwardRef>
                                          <ForwardRef
                                            href="/releases"
                                          >
                                            <StyledComponent
                                              forwardedClass={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Object {
                                                    "unstyled": true,
                                                  },
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-ifAKCX",
                                                    "isStatic": true,
                                                    "lastClassName": "c7",
                                                    "rules": Array [
                                                      "
  flex: 0 0 auto;
  display: inline-block;
  line-height: ",
                                                      "2.7777777777777777rem",
                                                      ";
  transition: opacity 0.2s, transform 0.2s;
  cursor: pointer;

  letter-spacing: ",
                                                      "0.022222222222222223rem",
                                                      ";
  color: currentColor;

  &:hover,
  &:focus {
    opacity: 0.8;
  }

  &:active {
    transform: scale(0.95);
    opacity: 0.6;
  }
",
                                                    ],
                                                  },
                                                  "displayName": "Styled(Link)",
                                                  "render": [Function],
                                                  "styledComponentId": "sc-ifAKCX",
                                                  "target": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                  Symbol(Symbol.hasInstance): [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              href="/releases"
                                            >
                                              <Link
                                                className="c7"
                                                href="/releases"
                                                unstyled={true}
                                              >
                                                <Link
                                                  href="/releases"
                                                >
                                                  <a
                                                    className="c7"
                                                    href="/releases"
                                                    onClick={[Function]}
                                                  >
                                                    Releases
                                                  </a>
                                                </Link>
                                              </Link>
                                            </StyledComponent>
                                          </ForwardRef>
                                        </nav>
                                      </StyledComponent>
                                    </ForwardRef>
                                  </NavLinks>
                                  <ForwardRef>
                                    <StyledComponent
                                      forwardedClass={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": undefined,
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htpNat",
                                            "isStatic": true,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "
  flex: 0 0 auto;
  width: ",
                                              "0.2777777777777778rem",
                                              ";
  height: ",
                                              "0.2777777777777778rem",
                                              ";
  margin: 0 ",
                                              "0.8333333333333334rem",
                                              ";

  border-radius: 50%;
  background: currentColor;
  opacity: 0.35;
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "render": [Function],
                                          "styledComponentId": "sc-htpNat",
                                          "target": "span",
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
                                        className="c8"
                                      />
                                    </StyledComponent>
                                  </ForwardRef>
                                  <ForwardRef>
                                    <StyledComponent
                                      forwardedClass={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": undefined,
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-fjdhpX",
                                            "isStatic": true,
                                            "lastClassName": "c22",
                                            "rules": Array [
                                              "
  padding-right: ",
                                              "1.1111111111111112rem",
                                              ";
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "render": [Function],
                                          "styledComponentId": "sc-fjdhpX",
                                          "target": "div",
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c22"
                                      >
                                        <Social>
                                          <ForwardRef>
                                            <StyledComponent
                                              forwardedClass={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": undefined,
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-EHOje",
                                                    "isStatic": true,
                                                    "lastClassName": "c10",
                                                    "rules": Array [
                                                      "
  display: flex;
  align-items: center;
  flex: 1 1 auto;
",
                                                    ],
                                                  },
                                                  "displayName": "styled.nav",
                                                  "render": [Function],
                                                  "styledComponentId": "sc-EHOje",
                                                  "target": "nav",
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <nav
                                                className="c10"
                                              >
                                                <ForwardRef
                                                  href="https://spectrum.chat/styled-components/"
                                                >
                                                  <StyledComponent
                                                    forwardedClass={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Object {
                                                          "unstyled": true,
                                                        },
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bZQynM",
                                                          "isStatic": true,
                                                          "lastClassName": "c11",
                                                          "rules": Array [
                                                            "
  display: inline-block;
  margin-right: ",
                                                            "1.1111111111111112rem",
                                                            ";
  line-height: ",
                                                            "2.7777777777777777rem",
                                                            ";
  transition: opacity 0.2s, transform 0.2s;
  cursor: pointer;

  &:last-child {
    margin-right: 0;
  }

  &:hover,
  &:focus {
    opacity: 0.8;
  }

  &:active {
    transform: scale(0.95);
    opacity: 0.6;
  }

  svg {
    path {
      fill: currentColor;
    }
  }
",
                                                          ],
                                                        },
                                                        "displayName": "Styled(Link)",
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bZQynM",
                                                        "target": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                        Symbol(Symbol.hasInstance): [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="https://spectrum.chat/styled-components/"
                                                  >
                                                    <Link
                                                      className="c11"
                                                      href="https://spectrum.chat/styled-components/"
                                                      unstyled={true}
                                                    >
                                                      <Link
                                                        href="https://spectrum.chat/styled-components/"
                                                      >
                                                        <a
                                                          className="c11"
                                                          href="https://spectrum.chat/styled-components/"
                                                          onClick={[Function]}
                                                        >
                                                          <Spectrum>
                                                            <ForwardRef
                                                              height="14"
                                                              viewBox="0 0 15 15"
                                                              width="14"
                                                            >
                                                              <StyledComponent
                                                                forwardedClass={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": undefined,
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-gzVnrw",
                                                                      "isStatic": false,
                                                                      "lastClassName": "c14",
                                                                      "rules": Array [
                                                                        "
  width: ",
                                                                        [Function],
                                                                        ";
  height: ",
                                                                        [Function],
                                                                        ";
",
                                                                      ],
                                                                    },
                                                                    "displayName": "styled.svg",
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-gzVnrw",
                                                                    "target": "svg",
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                                height="14"
                                                                viewBox="0 0 15 15"
                                                                width="14"
                                                              >
                                                                <svg
                                                                  className="c12"
                                                                  height="14"
                                                                  viewBox="0 0 15 15"
                                                                  width="14"
                                                                >
                                                                  <title>
                                                                    spectrum
                                                                  </title>
                                                                  <path
                                                                    d="M0 6.5V1c0-.6.4-1 1-1 9 .3 13.7 5 14 14 0 .6-.4 1-1 1H8.5c-.6 0-1-.4-1-1-.3-4.4-2-6.2-6.5-6.5-.6 0-1-.4-1-1z"
                                                                    fill="#FFF"
                                                                  />
                                                                </svg>
                                                              </StyledComponent>
                                                            </ForwardRef>
                                                          </Spectrum>
                                                        </a>
                                                      </Link>
                                                    </Link>
                                                  </StyledComponent>
                                                </ForwardRef>
                                                <ForwardRef
                                                  href="https://github.com/styled-components"
                                                >
                                                  <StyledComponent
                                                    forwardedClass={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Object {
                                                          "unstyled": true,
                                                        },
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bZQynM",
                                                          "isStatic": true,
                                                          "lastClassName": "c11",
                                                          "rules": Array [
                                                            "
  display: inline-block;
  margin-right: ",
                                                            "1.1111111111111112rem",
                                                            ";
  line-height: ",
                                                            "2.7777777777777777rem",
                                                            ";
  transition: opacity 0.2s, transform 0.2s;
  cursor: pointer;

  &:last-child {
    margin-right: 0;
  }

  &:hover,
  &:focus {
    opacity: 0.8;
  }

  &:active {
    transform: scale(0.95);
    opacity: 0.6;
  }

  svg {
    path {
      fill: currentColor;
    }
  }
",
                                                          ],
                                                        },
                                                        "displayName": "Styled(Link)",
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bZQynM",
                                                        "target": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                        Symbol(Symbol.hasInstance): [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="https://github.com/styled-components"
                                                  >
                                                    <Link
                                                      className="c11"
                                                      href="https://github.com/styled-components"
                                                      unstyled={true}
                                                    >
                                                      <Link
                                                        href="https://github.com/styled-components"
                                                      >
                                                        <a
                                                          className="c11"
                                                          href="https://github.com/styled-components"
                                                          onClick={[Function]}
                                                        >
                                                          <Github>
                                                            <ForwardRef
                                                              height="17"
                                                              viewBox="0 0 17 17"
                                                              width="17"
                                                            >
                                                              <StyledComponent
                                                                forwardedClass={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": undefined,
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-gzVnrw",
                                                                      "isStatic": false,
                                                                      "lastClassName": "c14",
                                                                      "rules": Array [
                                                                        "
  width: ",
                                                                        [Function],
                                                                        ";
  height: ",
                                                                        [Function],
                                                                        ";
",
                                                                      ],
                                                                    },
                                                                    "displayName": "styled.svg",
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-gzVnrw",
                                                                    "target": "svg",
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                                height="17"
                                                                viewBox="0 0 17 17"
                                                                width="17"
                                                              >
                                                                <svg
                                                                  className="c13"
                                                                  height="17"
                                                                  viewBox="0 0 17 17"
                                                                  width="17"
                                                                >
                                                                  <title>
                                                                    github
                                                                  </title>
                                                                  <path
                                                                    d="M15.86 4.34c-.76-1.335-1.79-2.392-3.093-3.17C11.463.39 10.042 0 8.5 0 6.958 0 5.536.39 4.233 1.17 2.93 1.947 1.9 3.004 1.14 4.34.38 5.674 0 7.132 0 8.713c0 1.898.54 3.606 1.62 5.122 1.082 1.517 2.48 2.566 4.19 3.148.2.038.347.01.443-.08.096-.09.144-.203.144-.34l-.006-.612v-1l-.25.05c-.16.03-.36.05-.61.04-.24 0-.5-.03-.77-.08-.26-.05-.51-.16-.74-.34-.23-.18-.39-.41-.49-.7l-.11-.26c-.07-.17-.19-.36-.35-.58-.16-.21-.32-.35-.48-.43l-.08-.05c-.05-.04-.09-.08-.14-.132-.04-.053-.08-.106-.1-.16-.02-.053 0-.097.06-.13.06-.035.17-.052.32-.052l.22.036c.15.03.33.12.55.27.22.154.4.35.54.59.17.31.375.55.615.71.24.164.484.245.727.245s.456-.02.63-.056c.18-.037.346-.094.5-.17.067-.507.248-.896.54-1.17-.42-.043-.795-.112-1.13-.203-.34-.09-.685-.24-1.04-.44-.36-.2-.657-.455-.894-.76-.234-.3-.43-.7-.58-1.19-.15-.49-.225-1.06-.225-1.7 0-.917.29-1.695.875-2.34-.27-.69-.244-1.46.08-2.313.214-.07.53-.015.95.155.42.17.73.314.926.435.195.12.35.225.47.308.684-.2 1.394-.3 2.124-.3s1.44.1 2.124.297l.42-.27c.288-.184.628-.35 1.02-.5.39-.15.69-.195.895-.126.334.857.364 1.63.09 2.317.584.645.875 1.42.875 2.34 0 .64-.072 1.21-.223 1.707-.15.5-.343.897-.583 1.196-.24.298-.54.55-.896.754-.355.202-.702.35-1.04.44-.334.09-.712.16-1.132.205.38.34.57.875.57 1.61v2.39c0 .136.045.25.137.34.096.09.24.118.44.08 1.71-.582 3.11-1.632 4.19-3.15 1.06-1.525 1.6-3.235 1.6-5.13 0-1.58-.38-3.04-1.14-4.37z"
                                                                    fill="#FFF"
                                                                  />
                                                                </svg>
                                                              </StyledComponent>
                                                            </ForwardRef>
                                                          </Github>
                                                        </a>
                                                      </Link>
                                                    </Link>
                                                  </StyledComponent>
                                                </ForwardRef>
                                                <ForwardRef
                                                  href="https://medium.com/styled-components"
                                                >
                                                  <StyledComponent
                                                    forwardedClass={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Object {
                                                          "unstyled": true,
                                                        },
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bZQynM",
                                                          "isStatic": true,
                                                          "lastClassName": "c11",
                                                          "rules": Array [
                                                            "
  display: inline-block;
  margin-right: ",
                                                            "1.1111111111111112rem",
                                                            ";
  line-height: ",
                                                            "2.7777777777777777rem",
                                                            ";
  transition: opacity 0.2s, transform 0.2s;
  cursor: pointer;

  &:last-child {
    margin-right: 0;
  }

  &:hover,
  &:focus {
    opacity: 0.8;
  }

  &:active {
    transform: scale(0.95);
    opacity: 0.6;
  }

  svg {
    path {
      fill: currentColor;
    }
  }
",
                                                          ],
                                                        },
                                                        "displayName": "Styled(Link)",
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bZQynM",
                                                        "target": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                        Symbol(Symbol.hasInstance): [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="https://medium.com/styled-components"
                                                  >
                                                    <Link
                                                      className="c11"
                                                      href="https://medium.com/styled-components"
                                                      unstyled={true}
                                                    >
                                                      <Link
                                                        href="https://medium.com/styled-components"
                                                      >
                                                        <a
                                                          className="c11"
                                                          href="https://medium.com/styled-components"
                                                          onClick={[Function]}
                                                        >
                                                          <Medium>
                                                            <ForwardRef
                                                              height="14"
                                                              viewBox="0 0 17 14"
                                                              width="17"
                                                            >
                                                              <StyledComponent
                                                                forwardedClass={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": undefined,
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-gzVnrw",
                                                                      "isStatic": false,
                                                                      "lastClassName": "c14",
                                                                      "rules": Array [
                                                                        "
  width: ",
                                                                        [Function],
                                                                        ";
  height: ",
                                                                        [Function],
                                                                        ";
",
                                                                      ],
                                                                    },
                                                                    "displayName": "styled.svg",
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-gzVnrw",
                                                                    "target": "svg",
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                                height="14"
                                                                viewBox="0 0 17 14"
                                                                width="17"
                                                              >
                                                                <svg
                                                                  className="c14"
                                                                  height="14"
                                                                  viewBox="0 0 17 14"
                                                                  width="17"
                                                                >
                                                                  <title>
                                                                    medium
                                                                  </title>
                                                                  <path
                                                                    d="M5.3 0H.5l1.8 2.4v9L0 13.7h5.3l-2-2.3V3.7L7.8 14 12 3.7v8.7l-1.3 1.3H17l-1.5-1.3v-11L17 0h-4.5L9 8.2 5.2 0z"
                                                                    fill="#fff"
                                                                  />
                                                                </svg>
                                                              </StyledComponent>
                                                            </ForwardRef>
                                                          </Medium>
                                                        </a>
                                                      </Link>
                                                    </Link>
                                                  </StyledComponent>
                                                </ForwardRef>
                                              </nav>
                                            </StyledComponent>
                                          </ForwardRef>
                                        </Social>
                                      </div>
                                    </StyledComponent>
                                  </ForwardRef>
                                </div>
                              </StyledComponent>
                            </ForwardRef>
                          </div>
                        </StyledComponent>
                      </ForwardRef>
                    </MobileNavbar>
                  </nav>
                </StyledComponent>
              </ForwardRef>
            </Navbar>
            <CaptureScroll
              isFolded={true}
            >
              <ForwardRef
                isFolded={true}
              >
                <StyledComponent
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kGXeez",
                        "isStatic": false,
                        "lastClassName": "c23",
                        "rules": Array [
                          "
  position: fixed;
  transform: translateZ(0);
  display: block;
  z-index: 1;
  font-family: ",
                          "\\"Avenir Next\\", -apple-system, BlinkMacSystemFont, \\"Segoe UI\\", Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
                          ";

  left: 0;
  top: ",
                          "2.7777777777777777rem",
                          ";
  bottom: 0;
  right: auto;
  width: ",
                          "16.666666666666668rem",
                          ";
  background: ",
                          "#efefef",
                          ";
  box-sizing: border-box;
  color: inherit;
  overflow-y: auto;
  transition: transform 150ms ease-out;

  ",
                          "
  @media (max-width: ",
                          "62.5",
                          "em) {
    ",
                          "
    ",
                          [Function],
                          ";
  ",
                          ";
  }
",
                          ";
",
                        ],
                      },
                      "displayName": "styled.nav",
                      "render": [Function],
                      "styledComponentId": "sc-kGXeez",
                      "target": "nav",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={[Function]}
                  isFolded={true}
                >
                  <nav
                    className="c23"
                  >
                    <withRouter(Unknown)
                      onRouteChange={[Function]}
                    >
                      <Component
                        onRouteChange={[Function]}
                      >
                        <ForwardRef>
                          <StyledComponent
                            forwardedClass={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": undefined,
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-kpOJdX",
                                  "isStatic": true,
                                  "lastClassName": "c24",
                                  "rules": Array [
                                    "
  display: block;
  box-sizing: border-box;
  height: 100%;
  padding-top: ",
                                    "1.3888888888888888rem",
                                    ";
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "render": [Function],
                                "styledComponentId": "sc-kpOJdX",
                                "target": "div",
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c24"
                            >
                              <Folder
                                key="Basics"
                              >
                                <ForwardRef
                                  onClick={[Function]}
                                >
                                  <StyledComponent
                                    forwardedClass={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": undefined,
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ckVGcZ",
                                          "isStatic": true,
                                          "lastClassName": "c25",
                                          "rules": Array [
                                            "
  margin-bottom: ",
                                            "1.1111111111111112rem",
                                            ";
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "render": [Function],
                                        "styledComponentId": "sc-ckVGcZ",
                                        "target": "div",
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="c25"
                                      onClick={[Function]}
                                    >
                                      <ForwardRef
                                        onClick={[Function]}
                                      >
                                        <StyledComponent
                                          forwardedClass={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": undefined,
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-jKJlTe",
                                                "isStatic": true,
                                                "lastClassName": "c26",
                                                "rules": Array [
                                                  "
  display: block;
  margin: ",
                                                  "0.5555555555555556rem",
                                                  " ",
                                                  "2.2222222222222223rem",
                                                  ";
  font-weight: normal;
",
                                                ],
                                              },
                                              "displayName": "styled.h4",
                                              "render": [Function],
                                              "styledComponentId": "sc-jKJlTe",
                                              "target": "h4",
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onClick={[Function]}
                                        >
                                          <h4
                                            className="c26"
                                            onClick={[Function]}
                                          >
                                            <Link
                                              href="/docs/basics"
                                            >
                                              <Link
                                                href="/docs/basics"
                                              >
                                                <ForwardRef
                                                  href="/docs/basics"
                                                  onClick={[Function]}
                                                >
                                                  <StyledComponent
                                                    forwardedClass={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": undefined,
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bdVaJa",
                                                          "isStatic": true,
                                                          "lastClassName": "c27",
                                                          "rules": Array [
                                                            "
  display: inline-block;
  text-decoration: none;
  color: inherit;
  cursor: pointer;
  padding: ",
                                                            "0.1111111111111111rem",
                                                            " ",
                                                            "0.4444444444444444rem",
                                                            ";
  margin: ",
                                                            "-0.1111111111111111rem",
                                                            " ",
                                                            "-0.4444444444444444rem",
                                                            ";

  @media (min-width: ",
                                                            "62.5",
                                                            "em) {
    border-radius: ",
                                                            "0.16666666666666666rem",
                                                            ";

    &:hover {
      background: ",
                                                            "rgba(20, 20, 20, 0.1)",
                                                            ";
    }
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.a",
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bdVaJa",
                                                        "target": "a",
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/docs/basics"
                                                    onClick={[Function]}
                                                  >
                                                    <a
                                                      className="c27"
                                                      href="/docs/basics"
                                                      onClick={[Function]}
                                                    >
                                                      Basics
                                                    </a>
                                                  </StyledComponent>
                                                </ForwardRef>
                                              </Link>
                                            </Link>
                                          </h4>
                                        </StyledComponent>
                                      </ForwardRef>
                                    </div>
                                  </StyledComponent>
                                </ForwardRef>
                              </Folder>
                              <Folder
                                key="Advanced"
                              >
                                <ForwardRef
                                  onClick={[Function]}
                                >
                                  <StyledComponent
                                    forwardedClass={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": undefined,
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ckVGcZ",
                                          "isStatic": true,
                                          "lastClassName": "c25",
                                          "rules": Array [
                                            "
  margin-bottom: ",
                                            "1.1111111111111112rem",
                                            ";
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "render": [Function],
                                        "styledComponentId": "sc-ckVGcZ",
                                        "target": "div",
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="c25"
                                      onClick={[Function]}
                                    >
                                      <ForwardRef
                                        onClick={[Function]}
                                      >
                                        <StyledComponent
                                          forwardedClass={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": undefined,
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-jKJlTe",
                                                "isStatic": true,
                                                "lastClassName": "c26",
                                                "rules": Array [
                                                  "
  display: block;
  margin: ",
                                                  "0.5555555555555556rem",
                                                  " ",
                                                  "2.2222222222222223rem",
                                                  ";
  font-weight: normal;
",
                                                ],
                                              },
                                              "displayName": "styled.h4",
                                              "render": [Function],
                                              "styledComponentId": "sc-jKJlTe",
                                              "target": "h4",
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onClick={[Function]}
                                        >
                                          <h4
                                            className="c26"
                                            onClick={[Function]}
                                          >
                                            <Link
                                              href="/docs/advanced"
                                            >
                                              <Link
                                                href="/docs/advanced"
                                              >
                                                <ForwardRef
                                                  href="/docs/advanced"
                                                  onClick={[Function]}
                                                >
                                                  <StyledComponent
                                                    forwardedClass={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": undefined,
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bdVaJa",
                                                          "isStatic": true,
                                                          "lastClassName": "c27",
                                                          "rules": Array [
                                                            "
  display: inline-block;
  text-decoration: none;
  color: inherit;
  cursor: pointer;
  padding: ",
                                                            "0.1111111111111111rem",
                                                            " ",
                                                            "0.4444444444444444rem",
                                                            ";
  margin: ",
                                                            "-0.1111111111111111rem",
                                                            " ",
                                                            "-0.4444444444444444rem",
                                                            ";

  @media (min-width: ",
                                                            "62.5",
                                                            "em) {
    border-radius: ",
                                                            "0.16666666666666666rem",
                                                            ";

    &:hover {
      background: ",
                                                            "rgba(20, 20, 20, 0.1)",
                                                            ";
    }
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.a",
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bdVaJa",
                                                        "target": "a",
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/docs/advanced"
                                                    onClick={[Function]}
                                                  >
                                                    <a
                                                      className="c27"
                                                      href="/docs/advanced"
                                                      onClick={[Function]}
                                                    >
                                                      Advanced
                                                    </a>
                                                  </StyledComponent>
                                                </ForwardRef>
                                              </Link>
                                            </Link>
                                          </h4>
                                        </StyledComponent>
                                      </ForwardRef>
                                    </div>
                                  </StyledComponent>
                                </ForwardRef>
                              </Folder>
                              <Folder
                                key="API Reference"
                              >
                                <ForwardRef
                                  onClick={[Function]}
                                >
                                  <StyledComponent
                                    forwardedClass={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": undefined,
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ckVGcZ",
                                          "isStatic": true,
                                          "lastClassName": "c25",
                                          "rules": Array [
                                            "
  margin-bottom: ",
                                            "1.1111111111111112rem",
                                            ";
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "render": [Function],
                                        "styledComponentId": "sc-ckVGcZ",
                                        "target": "div",
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="c25"
                                      onClick={[Function]}
                                    >
                                      <ForwardRef
                                        onClick={[Function]}
                                      >
                                        <StyledComponent
                                          forwardedClass={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": undefined,
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-jKJlTe",
                                                "isStatic": true,
                                                "lastClassName": "c26",
                                                "rules": Array [
                                                  "
  display: block;
  margin: ",
                                                  "0.5555555555555556rem",
                                                  " ",
                                                  "2.2222222222222223rem",
                                                  ";
  font-weight: normal;
",
                                                ],
                                              },
                                              "displayName": "styled.h4",
                                              "render": [Function],
                                              "styledComponentId": "sc-jKJlTe",
                                              "target": "h4",
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onClick={[Function]}
                                        >
                                          <h4
                                            className="c26"
                                            onClick={[Function]}
                                          >
                                            <Link
                                              href="/docs/api"
                                            >
                                              <Link
                                                href="/docs/api"
                                              >
                                                <ForwardRef
                                                  href="/docs/api"
                                                  onClick={[Function]}
                                                >
                                                  <StyledComponent
                                                    forwardedClass={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": undefined,
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bdVaJa",
                                                          "isStatic": true,
                                                          "lastClassName": "c27",
                                                          "rules": Array [
                                                            "
  display: inline-block;
  text-decoration: none;
  color: inherit;
  cursor: pointer;
  padding: ",
                                                            "0.1111111111111111rem",
                                                            " ",
                                                            "0.4444444444444444rem",
                                                            ";
  margin: ",
                                                            "-0.1111111111111111rem",
                                                            " ",
                                                            "-0.4444444444444444rem",
                                                            ";

  @media (min-width: ",
                                                            "62.5",
                                                            "em) {
    border-radius: ",
                                                            "0.16666666666666666rem",
                                                            ";

    &:hover {
      background: ",
                                                            "rgba(20, 20, 20, 0.1)",
                                                            ";
    }
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.a",
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bdVaJa",
                                                        "target": "a",
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/docs/api"
                                                    onClick={[Function]}
                                                  >
                                                    <a
                                                      className="c27"
                                                      href="/docs/api"
                                                      onClick={[Function]}
                                                    >
                                                      API Reference
                                                    </a>
                                                  </StyledComponent>
                                                </ForwardRef>
                                              </Link>
                                            </Link>
                                          </h4>
                                        </StyledComponent>
                                      </ForwardRef>
                                    </div>
                                  </StyledComponent>
                                </ForwardRef>
                              </Folder>
                              <Folder
                                key="Tooling"
                              >
                                <ForwardRef
                                  onClick={[Function]}
                                >
                                  <StyledComponent
                                    forwardedClass={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": undefined,
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ckVGcZ",
                                          "isStatic": true,
                                          "lastClassName": "c25",
                                          "rules": Array [
                                            "
  margin-bottom: ",
                                            "1.1111111111111112rem",
                                            ";
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "render": [Function],
                                        "styledComponentId": "sc-ckVGcZ",
                                        "target": "div",
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="c25"
                                      onClick={[Function]}
                                    >
                                      <ForwardRef
                                        onClick={[Function]}
                                      >
                                        <StyledComponent
                                          forwardedClass={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": undefined,
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-jKJlTe",
                                                "isStatic": true,
                                                "lastClassName": "c26",
                                                "rules": Array [
                                                  "
  display: block;
  margin: ",
                                                  "0.5555555555555556rem",
                                                  " ",
                                                  "2.2222222222222223rem",
                                                  ";
  font-weight: normal;
",
                                                ],
                                              },
                                              "displayName": "styled.h4",
                                              "render": [Function],
                                              "styledComponentId": "sc-jKJlTe",
                                              "target": "h4",
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onClick={[Function]}
                                        >
                                          <h4
                                            className="c26"
                                            onClick={[Function]}
                                          >
                                            <Link
                                              href="/docs/tooling"
                                            >
                                              <Link
                                                href="/docs/tooling"
                                              >
                                                <ForwardRef
                                                  href="/docs/tooling"
                                                  onClick={[Function]}
                                                >
                                                  <StyledComponent
                                                    forwardedClass={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": undefined,
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bdVaJa",
                                                          "isStatic": true,
                                                          "lastClassName": "c27",
                                                          "rules": Array [
                                                            "
  display: inline-block;
  text-decoration: none;
  color: inherit;
  cursor: pointer;
  padding: ",
                                                            "0.1111111111111111rem",
                                                            " ",
                                                            "0.4444444444444444rem",
                                                            ";
  margin: ",
                                                            "-0.1111111111111111rem",
                                                            " ",
                                                            "-0.4444444444444444rem",
                                                            ";

  @media (min-width: ",
                                                            "62.5",
                                                            "em) {
    border-radius: ",
                                                            "0.16666666666666666rem",
                                                            ";

    &:hover {
      background: ",
                                                            "rgba(20, 20, 20, 0.1)",
                                                            ";
    }
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.a",
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bdVaJa",
                                                        "target": "a",
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/docs/tooling"
                                                    onClick={[Function]}
                                                  >
                                                    <a
                                                      className="c27"
                                                      href="/docs/tooling"
                                                      onClick={[Function]}
                                                    >
                                                      Tooling
                                                    </a>
                                                  </StyledComponent>
                                                </ForwardRef>
                                              </Link>
                                            </Link>
                                          </h4>
                                        </StyledComponent>
                                      </ForwardRef>
                                    </div>
                                  </StyledComponent>
                                </ForwardRef>
                              </Folder>
                              <Folder
                                key="FAQs"
                              >
                                <ForwardRef
                                  onClick={[Function]}
                                >
                                  <StyledComponent
                                    forwardedClass={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": undefined,
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ckVGcZ",
                                          "isStatic": true,
                                          "lastClassName": "c25",
                                          "rules": Array [
                                            "
  margin-bottom: ",
                                            "1.1111111111111112rem",
                                            ";
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "render": [Function],
                                        "styledComponentId": "sc-ckVGcZ",
                                        "target": "div",
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="c25"
                                      onClick={[Function]}
                                    >
                                      <ForwardRef
                                        onClick={[Function]}
                                      >
                                        <StyledComponent
                                          forwardedClass={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": undefined,
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-jKJlTe",
                                                "isStatic": true,
                                                "lastClassName": "c26",
                                                "rules": Array [
                                                  "
  display: block;
  margin: ",
                                                  "0.5555555555555556rem",
                                                  " ",
                                                  "2.2222222222222223rem",
                                                  ";
  font-weight: normal;
",
                                                ],
                                              },
                                              "displayName": "styled.h4",
                                              "render": [Function],
                                              "styledComponentId": "sc-jKJlTe",
                                              "target": "h4",
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onClick={[Function]}
                                        >
                                          <h4
                                            className="c26"
                                            onClick={[Function]}
                                          >
                                            <Link
                                              href="/docs/faqs"
                                            >
                                              <Link
                                                href="/docs/faqs"
                                              >
                                                <ForwardRef
                                                  href="/docs/faqs"
                                                  onClick={[Function]}
                                                >
                                                  <StyledComponent
                                                    forwardedClass={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": undefined,
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bdVaJa",
                                                          "isStatic": true,
                                                          "lastClassName": "c27",
                                                          "rules": Array [
                                                            "
  display: inline-block;
  text-decoration: none;
  color: inherit;
  cursor: pointer;
  padding: ",
                                                            "0.1111111111111111rem",
                                                            " ",
                                                            "0.4444444444444444rem",
                                                            ";
  margin: ",
                                                            "-0.1111111111111111rem",
                                                            " ",
                                                            "-0.4444444444444444rem",
                                                            ";

  @media (min-width: ",
                                                            "62.5",
                                                            "em) {
    border-radius: ",
                                                            "0.16666666666666666rem",
                                                            ";

    &:hover {
      background: ",
                                                            "rgba(20, 20, 20, 0.1)",
                                                            ";
    }
  }
",
                                                          ],
                                                        },
                                                        "displayName": "styled.a",
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bdVaJa",
                                                        "target": "a",
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/docs/faqs"
                                                    onClick={[Function]}
                                                  >
                                                    <a
                                                      className="c27"
                                                      href="/docs/faqs"
                                                      onClick={[Function]}
                                                    >
                                                      FAQs
                                                    </a>
                                                  </StyledComponent>
                                                </ForwardRef>
                                              </Link>
                                            </Link>
                                          </h4>
                                        </StyledComponent>
                                      </ForwardRef>
                                    </div>
                                  </StyledComponent>
                                </ForwardRef>
                              </Folder>
                            </div>
                          </StyledComponent>
                        </ForwardRef>
                      </Component>
                    </withRouter(Unknown)>
                  </nav>
                </StyledComponent>
              </ForwardRef>
            </CaptureScroll>
          </div>
        </Nav>
        <ForwardRef
          data-e2e-id="content"
          moveRight={false}
        >
          <StyledComponent
            data-e2e-id="content"
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-kEYyzF",
                  "isStatic": false,
                  "lastClassName": "c28",
                  "rules": Array [
                    "
  width: ",
                    "56.888888888888886rem",
                    ";
  max-width: 100%;
  margin: 0 auto;
  padding: ",
                    "5rem",
                    " ",
                    "2.2222222222222223rem",
                    " ",
                    "1.6666666666666667rem",
                    " ",
                    "2.2222222222222223rem",
                    ";
  box-sizing: border-box;
  font-family: ",
                    "-apple-system, BlinkMacSystemFont, \\"Segoe UI\\", Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
                    ";
  transition: transform 150ms ease-out;

  ",
                    "
  @media (max-width: ",
                    "62.5",
                    "em) {
    ",
                    "
    padding: ",
                    "3.888888888888889rem",
                    " ",
                    "1.1111111111111112rem",
                    " ",
                    "1.6666666666666667rem",
                    " ",
                    "1.1111111111111112rem",
                    ";
    transform: translateX(",
                    [Function],
                    ");
  ",
                    ";
  }
",
                    ";
  ",
                    [Function],
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "render": [Function],
                "styledComponentId": "sc-kEYyzF",
                "target": "div",
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            moveRight={false}
          >
            <div
              className="c28"
              data-e2e-id="content"
            >
              <ForwardRef>
                <StyledComponent
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kkGfuU",
                        "isStatic": true,
                        "lastClassName": "c29",
                        "rules": Array [
                          "
  display: block;
  text-align: left;
  width: 100%;
  color: rgb(243, 182, 97);
  font-size: ",
                          "2.3333333333333335rem",
                          ";
  font-weight: bold;
  font-family: ",
                          "\\"Avenir Next\\", -apple-system, BlinkMacSystemFont, \\"Segoe UI\\", Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
                          ";
",
                        ],
                      },
                      "displayName": "styled.h1",
                      "render": [Function],
                      "styledComponentId": "sc-kkGfuU",
                      "target": "h1",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <h1
                    className="c29"
                  />
                </StyledComponent>
              </ForwardRef>
            </div>
          </StyledComponent>
        </ForwardRef>
      </div>
    </StyledComponent>
  </ForwardRef>
</DocsLayout>
`;
