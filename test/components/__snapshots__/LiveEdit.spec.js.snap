// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LiveEdit renders correctly 1`] = `
.c0 {
  box-shadow: 0.05555555555555555rem 0.05555555555555555rem 1.1111111111111112rem rgba(20, 20, 20, 0.27);
  overflow: hidden;
  margin: 1.9444444444444444rem 0;
  text-align: left;
}

.c1 {
  display: flex;
  flex-direction: row;
  justify-content: stretch;
  align-items: stretch;
}

.c2 {
  flex-basis: 50%;
  width: 50%;
  max-width: 50%;
}

.c3 {
  background: #1d1f27;
  font-size: 0.8rem;
  font-family: dm,monospace;
  font-weight: 300;
  min-height: 22.22222222222222rem;
  overflow-y: auto!important;
  overflow-x: hidden;
  cursor: text;
  color: white;
  white-space: pre-wrap;
  position: relative;
}

.c4 {
  position: relative;
  padding: 0.5rem;
  background: white;
  color: black;
  height: auto;
  overflow: hidden;
  white-space: normal;
  flex-basis: 50%;
  width: 50%;
  max-width: 50%;
}

.c5 {
  display: block;
  width: 100%;
  padding: 0.4444444444444444rem;
  background: #ff5555;
  color: white;
  font-size: 0.8rem;
  font-family: "Karla",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  white-space: pre;
}

@media (max-width: 40.625em) {
  .c1 {
    flex-direction: column;
  }
}

@media (max-width: 40.625em) {
  .c2 {
    flex-basis: auto;
    width: 100%;
    max-width: 100%;
    height: auto;
  }
}

@media (max-width: 40.625em) {
  .c4 {
    flex-basis: auto;
    width: 100%;
    max-width: 100%;
    height: auto;
  }
}

<LiveEdit>
  <Styled(Component)
    scope={
      {
        "StyleSheetManager": [Function],
        "ThemeProvider": [Function],
        "createGlobalStyle": [Function],
        "css": [Function],
        "keyframes": [Function],
        "styled": [Function],
        "stylisRTLPlugin": [Function],
        "withTheme": [Function],
      }
    }
  >
    <Component
      className="c0"
      scope={
        {
          "StyleSheetManager": [Function],
          "ThemeProvider": [Function],
          "createGlobalStyle": [Function],
          "css": [Function],
          "keyframes": [Function],
          "styled": [Function],
          "stylisRTLPlugin": [Function],
          "withTheme": [Function],
        }
      }
    >
      <styled.div>
        <div
          className="c1"
        >
          <styled.code>
            <code
              className="c2"
            >
              <Styled(Component)>
                <Component
                  className="c3"
                >
                  <g
                    className="c3"
                    language="jsx"
                    onChange={[Function]}
                    theme={
                      {
                        "plain": {
                          "backgroundColor": "#282c34",
                          "color": "#ffffff",
                        },
                        "styles": [
                          {
                            "style": {
                              "color": "#b2b2b2",
                            },
                            "types": [
                              "comment",
                              "block-comment",
                              "prolog",
                              "doctype",
                              "cdata",
                            ],
                          },
                          {
                            "style": {
                              "color": "#5a9bcf",
                            },
                            "types": [
                              "property",
                              "number",
                              "function-name",
                              "constant",
                              "symbol",
                              "deleted",
                            ],
                          },
                          {
                            "style": {
                              "color": "#ff8b50",
                            },
                            "types": [
                              "boolean",
                            ],
                          },
                          {
                            "style": {
                              "color": "#fc929e",
                            },
                            "types": [
                              "tag",
                            ],
                          },
                          {
                            "style": {
                              "color": "#8dc891",
                            },
                            "types": [
                              "string",
                              "attr-value",
                            ],
                          },
                          {
                            "style": {
                              "color": "#88c6Be",
                            },
                            "types": [
                              "punctuation",
                            ],
                          },
                          {
                            "style": {
                              "color": "#d8dee9",
                            },
                            "types": [
                              "selector",
                              "char",
                              "builtin",
                              "inserted",
                            ],
                          },
                          {
                            "style": {
                              "color": "#79b6f2",
                            },
                            "types": [
                              "function",
                            ],
                          },
                          {
                            "style": {
                              "color": "#d7deea",
                            },
                            "types": [
                              "operator",
                              "entity",
                              "url",
                              "variable",
                            ],
                          },
                          {
                            "style": {
                              "color": "#c5a5c5",
                            },
                            "types": [
                              "keyword",
                            ],
                          },
                          {
                            "style": {
                              "color": "#fac863",
                            },
                            "types": [
                              "atrule",
                              "class-name",
                            ],
                          },
                          {
                            "style": {
                              "fontWeight": "400",
                            },
                            "types": [
                              "important",
                            ],
                          },
                          {
                            "style": {
                              "fontWeight": "700",
                            },
                            "types": [
                              "bold",
                            ],
                          },
                          {
                            "style": {
                              "fontStyle": "italic",
                            },
                            "types": [
                              "italic",
                            ],
                          },
                          {
                            "style": {
                              "cursor": "help",
                            },
                            "types": [
                              "entity",
                            ],
                          },
                          {
                            "style": {
                              "opacity": 0.7,
                            },
                            "types": [
                              "namespace",
                            ],
                          },
                        ],
                      }
                    }
                    value=""
                  >
                    <Editor
                      className="c3"
                      highlight={[Function]}
                      ignoreTabKey={false}
                      insertSpaces={true}
                      onValueChange={[Function]}
                      padding={10}
                      style={
                        {
                          "backgroundColor": "#282c34",
                          "color": "#ffffff",
                        }
                      }
                      tabSize={2}
                      value=""
                    >
                      <div
                        className="c3"
                        style={
                          {
                            "backgroundColor": "#282c34",
                            "boxSizing": "border-box",
                            "color": "#ffffff",
                            "overflow": "hidden",
                            "padding": 0,
                            "position": "relative",
                            "textAlign": "left",
                          }
                        }
                      >
                        <pre
                          aria-hidden="true"
                          style={
                            {
                              "background": "none",
                              "border": 0,
                              "boxSizing": "inherit",
                              "display": "inherit",
                              "fontFamily": "inherit",
                              "fontSize": "inherit",
                              "fontStyle": "inherit",
                              "fontVariantLigatures": "inherit",
                              "fontWeight": "inherit",
                              "letterSpacing": "inherit",
                              "lineHeight": "inherit",
                              "margin": 0,
                              "overflowWrap": "break-word",
                              "paddingBottom": 10,
                              "paddingLeft": 10,
                              "paddingRight": 10,
                              "paddingTop": 10,
                              "pointerEvents": "none",
                              "position": "relative",
                              "tabSize": "inherit",
                              "textIndent": "inherit",
                              "textRendering": "inherit",
                              "textTransform": "inherit",
                              "whiteSpace": "pre-wrap",
                              "wordBreak": "keep-all",
                            }
                          }
                        >
                          <y
                            language="jsx"
                            noWrapper={true}
                            theme={
                              {
                                "plain": {
                                  "backgroundColor": "#282c34",
                                  "color": "#ffffff",
                                },
                                "styles": [
                                  {
                                    "style": {
                                      "color": "#b2b2b2",
                                    },
                                    "types": [
                                      "comment",
                                      "block-comment",
                                      "prolog",
                                      "doctype",
                                      "cdata",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "color": "#5a9bcf",
                                    },
                                    "types": [
                                      "property",
                                      "number",
                                      "function-name",
                                      "constant",
                                      "symbol",
                                      "deleted",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "color": "#ff8b50",
                                    },
                                    "types": [
                                      "boolean",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "color": "#fc929e",
                                    },
                                    "types": [
                                      "tag",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "color": "#8dc891",
                                    },
                                    "types": [
                                      "string",
                                      "attr-value",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "color": "#88c6Be",
                                    },
                                    "types": [
                                      "punctuation",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "color": "#d8dee9",
                                    },
                                    "types": [
                                      "selector",
                                      "char",
                                      "builtin",
                                      "inserted",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "color": "#79b6f2",
                                    },
                                    "types": [
                                      "function",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "color": "#d7deea",
                                    },
                                    "types": [
                                      "operator",
                                      "entity",
                                      "url",
                                      "variable",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "color": "#c5a5c5",
                                    },
                                    "types": [
                                      "keyword",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "color": "#fac863",
                                    },
                                    "types": [
                                      "atrule",
                                      "class-name",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "fontWeight": "400",
                                    },
                                    "types": [
                                      "important",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "fontWeight": "700",
                                    },
                                    "types": [
                                      "bold",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "fontStyle": "italic",
                                    },
                                    "types": [
                                      "italic",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "cursor": "help",
                                    },
                                    "types": [
                                      "entity",
                                    ],
                                  },
                                  {
                                    "style": {
                                      "opacity": 0.7,
                                    },
                                    "types": [
                                      "namespace",
                                    ],
                                  },
                                ],
                              }
                            }
                          >
                            <Highlight
                              Prism={
                                {
                                  "Token": [Function],
                                  "highlight": [Function],
                                  "hooks": {
                                    "add": [Function],
                                    "run": [Function],
                                  },
                                  "languages": {
                                    "DFS": [Function],
                                    "atom": {
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": {
                                        "greedy": true,
                                        "inside": {
                                          "doctype-tag": /\\^DOCTYPE/,
                                          "internal-subset": {
                                            "greedy": true,
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                          },
                                          "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                          "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                          "string": {
                                            "greedy": true,
                                            "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                          },
                                        },
                                        "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                      },
                                      "entity": [
                                        {
                                          "alias": "named-entity",
                                          "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                        },
                                        /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                      ],
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "tag": {
                                        "greedy": true,
                                        "inside": {
                                          "attr-name": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": {
                                            "inside": {
                                              "entity": [
                                                {
                                                  "alias": "named-entity",
                                                  "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                                },
                                                /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                              ],
                                              "punctuation": [
                                                {
                                                  "alias": "attr-equals",
                                                  "pattern": /\\^=/,
                                                },
                                                /"\\|'/,
                                              ],
                                            },
                                            "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "tag": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                      },
                                    },
                                    "bash": {
                                      "assign-left": {
                                        "alias": "variable",
                                        "inside": {
                                          "environment": {
                                            "alias": "constant",
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                                      },
                                      "boolean": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                      },
                                      "builtin": {
                                        "alias": "class-name",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|break\\|cd\\|continue\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|pwd\\|readonly\\|return\\|shift\\|test\\|times\\|trap\\|umask\\|unset\\|alias\\|bind\\|builtin\\|caller\\|command\\|declare\\|echo\\|enable\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|read\\|readarray\\|source\\|type\\|typeset\\|ulimit\\|unalias\\|set\\|shopt\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                      },
                                      "comment": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                                      },
                                      "environment": {
                                        "alias": "constant",
                                        "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                      },
                                      "file-descriptor": {
                                        "alias": "important",
                                        "pattern": /\\\\B&\\\\d\\\\b/,
                                      },
                                      "for-or-select": {
                                        "alias": "variable",
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                                      },
                                      "function": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|aptitude\\|apt-cache\\|apt-get\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                      },
                                      "function-name": [
                                        {
                                          "alias": "function",
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\\\w\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                                        },
                                        {
                                          "alias": "function",
                                          "pattern": /\\\\b\\\\w\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                        },
                                      ],
                                      "keyword": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:if\\|then\\|else\\|elif\\|fi\\|for\\|while\\|in\\|case\\|esac\\|function\\|select\\|do\\|done\\|until\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                      },
                                      "number": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                                      },
                                      "operator": {
                                        "inside": {
                                          "file-descriptor": {
                                            "alias": "important",
                                            "pattern": /\\^\\\\d/,
                                          },
                                        },
                                        "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|==\\?\\|!=\\?\\|=~\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\?\\[<>\\]&\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?\\|<=\\?\\|>=\\?/,
                                      },
                                      "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                                      "shebang": {
                                        "alias": "important",
                                        "pattern": /\\^#!\\\\s\\*\\\\/\\.\\*/,
                                      },
                                      "string": [
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "bash": {
                                              "alias": "punctuation",
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                            },
                                            "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\)/,
                                            "environment": {
                                              "alias": "constant",
                                              "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                            },
                                            "variable": [
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                                  "operator": /--\\?\\|-=\\|\\\\\\+\\\\\\+\\?\\|\\\\\\+=\\|!=\\?\\|~\\|\\\\\\*\\\\\\*\\?\\|\\\\\\*=\\|\\\\/=\\?\\|%=\\?\\|<<=\\?\\|>>=\\?\\|<=\\?\\|>=\\?\\|==\\?\\|&&\\?\\|&=\\|\\\\\\^=\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\|=\\|\\\\\\?\\|:/,
                                                  "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                                  "variable": [
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                                    },
                                                    /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                                  ],
                                                },
                                                "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "assign-left": {
                                                    "alias": "variable",
                                                    "inside": {
                                                      "environment": {
                                                        "alias": "constant",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                                                  },
                                                  "boolean": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "builtin": {
                                                    "alias": "class-name",
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|break\\|cd\\|continue\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|pwd\\|readonly\\|return\\|shift\\|test\\|times\\|trap\\|umask\\|unset\\|alias\\|bind\\|builtin\\|caller\\|command\\|declare\\|echo\\|enable\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|read\\|readarray\\|source\\|type\\|typeset\\|ulimit\\|unalias\\|set\\|shopt\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "comment": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                                                  },
                                                  "environment": {
                                                    "alias": "constant",
                                                    "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                  },
                                                  "file-descriptor": {
                                                    "alias": "important",
                                                    "pattern": /\\\\B&\\\\d\\\\b/,
                                                  },
                                                  "for-or-select": {
                                                    "alias": "variable",
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                                                  },
                                                  "function": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|aptitude\\|apt-cache\\|apt-get\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "function-name": [
                                                    {
                                                      "alias": "function",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\\\w\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                    {
                                                      "alias": "function",
                                                      "pattern": /\\\\b\\\\w\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                  ],
                                                  "keyword": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:if\\|then\\|else\\|elif\\|fi\\|for\\|while\\|in\\|case\\|esac\\|function\\|select\\|do\\|done\\|until\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                                                  },
                                                  "operator": {
                                                    "inside": {
                                                      "file-descriptor": {
                                                        "alias": "important",
                                                        "pattern": /\\^\\\\d/,
                                                      },
                                                    },
                                                    "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|==\\?\\|!=\\?\\|=~\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\?\\[<>\\]&\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?\\|<=\\?\\|>=\\?/,
                                                  },
                                                  "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                                                  "string": [Circular],
                                                  "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                                },
                                                "pattern": /\\\\\\$\\\\\\(\\(\\?:\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\]\\)\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                              },
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "environment": {
                                                    "alias": "constant",
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\{\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                  },
                                                  "operator": /:\\[-=\\?\\+\\]\\?\\|\\[!\\\\/\\]\\|##\\?\\|%%\\?\\|\\\\\\^\\\\\\^\\?\\|,,\\?/,
                                                  "punctuation": /\\[\\\\\\[\\\\\\]\\]/,
                                                },
                                                "pattern": /\\\\\\$\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                              },
                                              /\\\\\\$\\(\\?:\\\\w\\+\\|\\[#\\?\\*!@\\$\\]\\)/,
                                            ],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\\\w\\+\\?\\)\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\2/,
                                        },
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "bash": {
                                              "alias": "punctuation",
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\["'\\]\\)\\(\\\\w\\+\\)\\\\2\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\3/,
                                        },
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "bash": {
                                              "alias": "punctuation",
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                            },
                                            "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\)/,
                                            "environment": {
                                              "alias": "constant",
                                              "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                            },
                                            "variable": [
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                                  "operator": /--\\?\\|-=\\|\\\\\\+\\\\\\+\\?\\|\\\\\\+=\\|!=\\?\\|~\\|\\\\\\*\\\\\\*\\?\\|\\\\\\*=\\|\\\\/=\\?\\|%=\\?\\|<<=\\?\\|>>=\\?\\|<=\\?\\|>=\\?\\|==\\?\\|&&\\?\\|&=\\|\\\\\\^=\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\|=\\|\\\\\\?\\|:/,
                                                  "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                                  "variable": [
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                                    },
                                                    /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                                  ],
                                                },
                                                "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "assign-left": {
                                                    "alias": "variable",
                                                    "inside": {
                                                      "environment": {
                                                        "alias": "constant",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                                                  },
                                                  "boolean": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "builtin": {
                                                    "alias": "class-name",
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|break\\|cd\\|continue\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|pwd\\|readonly\\|return\\|shift\\|test\\|times\\|trap\\|umask\\|unset\\|alias\\|bind\\|builtin\\|caller\\|command\\|declare\\|echo\\|enable\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|read\\|readarray\\|source\\|type\\|typeset\\|ulimit\\|unalias\\|set\\|shopt\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "comment": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                                                  },
                                                  "environment": {
                                                    "alias": "constant",
                                                    "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                  },
                                                  "file-descriptor": {
                                                    "alias": "important",
                                                    "pattern": /\\\\B&\\\\d\\\\b/,
                                                  },
                                                  "for-or-select": {
                                                    "alias": "variable",
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                                                  },
                                                  "function": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|aptitude\\|apt-cache\\|apt-get\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "function-name": [
                                                    {
                                                      "alias": "function",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\\\w\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                    {
                                                      "alias": "function",
                                                      "pattern": /\\\\b\\\\w\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                  ],
                                                  "keyword": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:if\\|then\\|else\\|elif\\|fi\\|for\\|while\\|in\\|case\\|esac\\|function\\|select\\|do\\|done\\|until\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                                                  },
                                                  "operator": {
                                                    "inside": {
                                                      "file-descriptor": {
                                                        "alias": "important",
                                                        "pattern": /\\^\\\\d/,
                                                      },
                                                    },
                                                    "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|==\\?\\|!=\\?\\|=~\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\?\\[<>\\]&\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?\\|<=\\?\\|>=\\?/,
                                                  },
                                                  "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                                                  "string": [Circular],
                                                  "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                                },
                                                "pattern": /\\\\\\$\\\\\\(\\(\\?:\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\]\\)\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                              },
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "environment": {
                                                    "alias": "constant",
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\{\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                  },
                                                  "operator": /:\\[-=\\?\\+\\]\\?\\|\\[!\\\\/\\]\\|##\\?\\|%%\\?\\|\\\\\\^\\\\\\^\\?\\|,,\\?/,
                                                  "punctuation": /\\[\\\\\\[\\\\\\]\\]/,
                                                },
                                                "pattern": /\\\\\\$\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                              },
                                              /\\\\\\$\\(\\?:\\\\w\\+\\|\\[#\\?\\*!@\\$\\]\\)/,
                                            ],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\(\\?:\\\\\\\\\\\\\\\\\\)\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\\\\\$\\(\\?!\\\\\\(\\)\\|\`\\[\\^\`\\]\\+\`\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\`\\$\\]\\)\\*\\\\2/,
                                        },
                                      ],
                                      "variable": [
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                            "operator": /--\\?\\|-=\\|\\\\\\+\\\\\\+\\?\\|\\\\\\+=\\|!=\\?\\|~\\|\\\\\\*\\\\\\*\\?\\|\\\\\\*=\\|\\\\/=\\?\\|%=\\?\\|<<=\\?\\|>>=\\?\\|<=\\?\\|>=\\?\\|==\\?\\|&&\\?\\|&=\\|\\\\\\^=\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\|=\\|\\\\\\?\\|:/,
                                            "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                            "variable": [
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                              },
                                              /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                            ],
                                          },
                                          "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                        },
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "assign-left": {
                                              "alias": "variable",
                                              "inside": {
                                                "environment": {
                                                  "alias": "constant",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                                            },
                                            "boolean": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                            },
                                            "builtin": {
                                              "alias": "class-name",
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|break\\|cd\\|continue\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|pwd\\|readonly\\|return\\|shift\\|test\\|times\\|trap\\|umask\\|unset\\|alias\\|bind\\|builtin\\|caller\\|command\\|declare\\|echo\\|enable\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|read\\|readarray\\|source\\|type\\|typeset\\|ulimit\\|unalias\\|set\\|shopt\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                            },
                                            "comment": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                                            },
                                            "environment": {
                                              "alias": "constant",
                                              "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                            },
                                            "file-descriptor": {
                                              "alias": "important",
                                              "pattern": /\\\\B&\\\\d\\\\b/,
                                            },
                                            "for-or-select": {
                                              "alias": "variable",
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                                            },
                                            "function": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|aptitude\\|apt-cache\\|apt-get\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                            },
                                            "function-name": [
                                              {
                                                "alias": "function",
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\\\w\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                                              },
                                              {
                                                "alias": "function",
                                                "pattern": /\\\\b\\\\w\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                              },
                                            ],
                                            "keyword": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:if\\|then\\|else\\|elif\\|fi\\|for\\|while\\|in\\|case\\|esac\\|function\\|select\\|do\\|done\\|until\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                            },
                                            "number": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                                            },
                                            "operator": {
                                              "inside": {
                                                "file-descriptor": {
                                                  "alias": "important",
                                                  "pattern": /\\^\\\\d/,
                                                },
                                              },
                                              "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|==\\?\\|!=\\?\\|=~\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\?\\[<>\\]&\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?\\|<=\\?\\|>=\\?/,
                                            },
                                            "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                                            "string": [
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "bash": {
                                                    "alias": "punctuation",
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                                  },
                                                  "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\)/,
                                                  "environment": {
                                                    "alias": "constant",
                                                    "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                  },
                                                  "variable": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\\\w\\+\\?\\)\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\2/,
                                              },
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "bash": {
                                                    "alias": "punctuation",
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\["'\\]\\)\\(\\\\w\\+\\)\\\\2\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\3/,
                                              },
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "bash": {
                                                    "alias": "punctuation",
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                                  },
                                                  "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\)/,
                                                  "environment": {
                                                    "alias": "constant",
                                                    "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                  },
                                                  "variable": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\(\\?:\\\\\\\\\\\\\\\\\\)\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\\\\\$\\(\\?!\\\\\\(\\)\\|\`\\[\\^\`\\]\\+\`\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\`\\$\\]\\)\\*\\\\2/,
                                              },
                                            ],
                                            "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                          },
                                          "pattern": /\\\\\\$\\\\\\(\\(\\?:\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\]\\)\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                        },
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "environment": {
                                              "alias": "constant",
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\{\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                            },
                                            "operator": /:\\[-=\\?\\+\\]\\?\\|\\[!\\\\/\\]\\|##\\?\\|%%\\?\\|\\\\\\^\\\\\\^\\?\\|,,\\?/,
                                            "punctuation": /\\[\\\\\\[\\\\\\]\\]/,
                                          },
                                          "pattern": /\\\\\\$\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                        },
                                        /\\\\\\$\\(\\?:\\\\w\\+\\|\\[#\\?\\*!@\\$\\]\\)/,
                                      ],
                                    },
                                    "c": {
                                      "class-name": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:enum\\|struct\\)\\\\s\\+\\(\\?:__attribute__\\\\s\\*\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\)\\\\\\)\\\\s\\*\\)\\?\\)\\\\w\\+\\|\\\\b\\[a-z\\]\\\\w\\*_t\\\\b/,
                                      },
                                      "comment": {
                                        "greedy": true,
                                        "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      "constant": /\\\\b\\(\\?:__FILE__\\|__LINE__\\|__DATE__\\|__TIME__\\|__TIMESTAMP__\\|__func__\\|EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|stdin\\|stdout\\|stderr\\)\\\\b/,
                                      "function": /\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                      "keyword": /\\\\b\\(\\?:__attribute__\\|_Alignas\\|_Alignof\\|_Atomic\\|_Bool\\|_Complex\\|_Generic\\|_Imaginary\\|_Noreturn\\|_Static_assert\\|_Thread_local\\|asm\\|typeof\\|inline\\|auto\\|break\\|case\\|char\\|const\\|continue\\|default\\|do\\|double\\|else\\|enum\\|extern\\|float\\|for\\|goto\\|if\\|int\\|long\\|register\\|return\\|short\\|signed\\|sizeof\\|static\\|struct\\|switch\\|typedef\\|union\\|unsigned\\|void\\|volatile\\|while\\)\\\\b/,
                                      "macro": {
                                        "alias": "property",
                                        "greedy": true,
                                        "inside": {
                                          "comment": {
                                            "greedy": true,
                                            "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          "directive": {
                                            "alias": "keyword",
                                            "lookbehind": true,
                                            "pattern": /\\^\\(#\\\\s\\*\\)\\[a-z\\]\\+/,
                                          },
                                          "directive-hash": /\\^#/,
                                          "expression": {
                                            "inside": {
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:enum\\|struct\\)\\\\s\\+\\(\\?:__attribute__\\\\s\\*\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\)\\\\\\)\\\\s\\*\\)\\?\\)\\\\w\\+\\|\\\\b\\[a-z\\]\\\\w\\*_t\\\\b/,
                                              },
                                              "comment": {
                                                "greedy": true,
                                                "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              "function": /\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                              "keyword": /\\\\b\\(\\?:__attribute__\\|_Alignas\\|_Alignof\\|_Atomic\\|_Bool\\|_Complex\\|_Generic\\|_Imaginary\\|_Noreturn\\|_Static_assert\\|_Thread_local\\|asm\\|typeof\\|inline\\|auto\\|break\\|case\\|char\\|const\\|continue\\|default\\|do\\|double\\|else\\|enum\\|extern\\|float\\|for\\|goto\\|if\\|int\\|long\\|register\\|return\\|short\\|signed\\|sizeof\\|static\\|struct\\|switch\\|typedef\\|union\\|unsigned\\|void\\|volatile\\|while\\)\\\\b/,
                                              "number": /\\(\\?:\\\\b0x\\(\\?:\\[\\\\da-f\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                                              "operator": />>=\\?\\|<<=\\?\\|->\\|\\(\\[-\\+&\\|:\\]\\)\\\\1\\|\\[\\?:~\\]\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?/,
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                            },
                                            "pattern": /\\\\S\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "macro-name": [
                                            {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?!\\\\\\(\\)/i,
                                            },
                                            {
                                              "alias": "function",
                                              "lookbehind": true,
                                              "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?=\\\\\\(\\)/i,
                                            },
                                          ],
                                          "punctuation": /##\\|\\\\\\\\\\(\\?=\\[\\\\r\\\\n\\]\\)/,
                                          "string": [
                                            {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(#\\\\s\\*include\\\\s\\*\\)<\\[\\^>\\]\\+>/,
                                            },
                                            {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          ],
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)#\\\\s\\*\\[a-z\\]\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\/\\]\\|\\\\/\\(\\?!\\\\\\*\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*/im,
                                      },
                                      "number": /\\(\\?:\\\\b0x\\(\\?:\\[\\\\da-f\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                                      "operator": />>=\\?\\|<<=\\?\\|->\\|\\(\\[-\\+&\\|:\\]\\)\\\\1\\|\\[\\?:~\\]\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                    },
                                    "clike": {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-name": {
                                        "inside": {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                      },
                                      "comment": [
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "function": /\\\\w\\+\\(\\?=\\\\\\(\\)/,
                                      "keyword": /\\\\b\\(\\?:if\\|else\\|while\\|do\\|for\\|return\\|in\\|instanceof\\|function\\|new\\|try\\|throw\\|catch\\|finally\\|null\\|break\\|continue\\)\\\\b/,
                                      "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                      "operator": /\\[<>\\]=\\?\\|\\[!=\\]=\\?=\\?\\|--\\?\\|\\\\\\+\\\\\\+\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\[\\?\\*/~\\^%\\]/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                    },
                                    "coffee": {
                                      "arrow": {
                                        "alias": "operator",
                                        "pattern": /=>/,
                                      },
                                      "block-regex": {
                                        "alias": "regex",
                                        "inside": {
                                          "comment": /#\\(\\?!\\\\\\{\\)\\.\\+/,
                                          "interpolation": {
                                            "alias": "variable",
                                            "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                          },
                                        },
                                        "pattern": /\\\\/\\{3\\}\\[\\\\s\\\\S\\]\\*\\?\\\\/\\{3\\}/,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-member": {
                                        "alias": "variable",
                                        "pattern": /@\\(\\?!\\\\d\\)\\\\w\\+/,
                                      },
                                      "class-name": [
                                        {
                                          "inside": {
                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                        },
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                        },
                                      ],
                                      "comment": /#\\(\\?!\\\\\\{\\)\\.\\+/,
                                      "console": {
                                        "alias": "class-name",
                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                      },
                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                      "dom": {
                                        "alias": "variable",
                                        "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                      },
                                      "exports": {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                      },
                                      "function": {
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      },
                                      "function-variable": {
                                        "alias": "function",
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "imports": {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                      },
                                      "inline-javascript": {
                                        "inside": {
                                          "delimiter": {
                                            "alias": "punctuation",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                          "script": {
                                            "alias": "language-javascript",
                                            "inside": {
                                              "arrow": {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "class-name": [
                                                {
                                                  "inside": {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                },
                                              ],
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                              },
                                              "exports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": {
                                                "alias": "function",
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "imports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": [
                                                {
                                                  "alias": "module",
                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "control-flow",
                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                },
                                                {
                                                  "alias": [
                                                    "null",
                                                    "nil",
                                                  ],
                                                  "pattern": /\\\\bnull\\\\b/,
                                                },
                                                {
                                                  "alias": "nil",
                                                  "pattern": /\\\\bundefined\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "known-class-name": [
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "maybe-class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": {
                                                "alias": [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": {
                                                "alias": [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": [
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "property-access": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "inside": {
                                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                          },
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      "keyword": /\\\\b\\(\\?:and\\|break\\|by\\|catch\\|class\\|continue\\|debugger\\|delete\\|do\\|each\\|else\\|extend\\|extends\\|false\\|finally\\|for\\|if\\|in\\|instanceof\\|is\\|isnt\\|let\\|loop\\|namespace\\|new\\|no\\|not\\|null\\|of\\|off\\|on\\|or\\|own\\|return\\|super\\|switch\\|then\\|this\\|throw\\|true\\|try\\|typeof\\|undefined\\|unless\\|until\\|when\\|while\\|window\\|with\\|yes\\|yield\\)\\\\b/,
                                      "known-class-name": [
                                        {
                                          "alias": "class-name",
                                          "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                        },
                                        {
                                          "alias": "class-name",
                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                        },
                                      ],
                                      "maybe-class-name": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                      },
                                      "method": {
                                        "alias": [
                                          "function",
                                          "property-access",
                                        ],
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      },
                                      "method-variable": {
                                        "alias": [
                                          "function-variable",
                                          "method",
                                          "function",
                                          "property-access",
                                        ],
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "multiline-comment": {
                                        "alias": "comment",
                                        "pattern": /###\\[\\\\s\\\\S\\]\\+\\?###/,
                                      },
                                      "multiline-string": [
                                        {
                                          "alias": "string",
                                          "greedy": true,
                                          "pattern": /'''\\[\\\\s\\\\S\\]\\*\\?'''/,
                                        },
                                        {
                                          "alias": "string",
                                          "greedy": true,
                                          "inside": {
                                            "interpolation": {
                                              "alias": "variable",
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /"""\\[\\\\s\\\\S\\]\\*\\?"""/,
                                        },
                                      ],
                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                      "parameter": [
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                        },
                                      ],
                                      "property": /\\(\\?!\\\\d\\)\\\\w\\+\\(\\?=\\\\s\\*:\\(\\?!:\\)\\)/,
                                      "property-access": {
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                      },
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": {
                                        "greedy": true,
                                        "inside": {
                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                          "regex-flags": /\\[a-z\\]\\+\\$/,
                                          "regex-source": {
                                            "alias": "language-regex",
                                            "inside": undefined,
                                            "lookbehind": true,
                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                      },
                                      "spread": {
                                        "alias": "operator",
                                        "pattern": /\\\\\\.\\{3\\}/,
                                      },
                                      "string": [
                                        {
                                          "greedy": true,
                                          "pattern": /'\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\'\\]\\)\\*'/,
                                        },
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "interpolation": {
                                              "alias": "variable",
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\"\\]\\)\\*"/,
                                        },
                                      ],
                                    },
                                    "coffeescript": {
                                      "arrow": {
                                        "alias": "operator",
                                        "pattern": /=>/,
                                      },
                                      "block-regex": {
                                        "alias": "regex",
                                        "inside": {
                                          "comment": /#\\(\\?!\\\\\\{\\)\\.\\+/,
                                          "interpolation": {
                                            "alias": "variable",
                                            "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                          },
                                        },
                                        "pattern": /\\\\/\\{3\\}\\[\\\\s\\\\S\\]\\*\\?\\\\/\\{3\\}/,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-member": {
                                        "alias": "variable",
                                        "pattern": /@\\(\\?!\\\\d\\)\\\\w\\+/,
                                      },
                                      "class-name": [
                                        {
                                          "inside": {
                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                        },
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                        },
                                      ],
                                      "comment": /#\\(\\?!\\\\\\{\\)\\.\\+/,
                                      "console": {
                                        "alias": "class-name",
                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                      },
                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                      "dom": {
                                        "alias": "variable",
                                        "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                      },
                                      "exports": {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                      },
                                      "function": {
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      },
                                      "function-variable": {
                                        "alias": "function",
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "imports": {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                      },
                                      "inline-javascript": {
                                        "inside": {
                                          "delimiter": {
                                            "alias": "punctuation",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                          "script": {
                                            "alias": "language-javascript",
                                            "inside": {
                                              "arrow": {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "class-name": [
                                                {
                                                  "inside": {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                },
                                              ],
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                              },
                                              "exports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": {
                                                "alias": "function",
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "imports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": [
                                                {
                                                  "alias": "module",
                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "control-flow",
                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                },
                                                {
                                                  "alias": [
                                                    "null",
                                                    "nil",
                                                  ],
                                                  "pattern": /\\\\bnull\\\\b/,
                                                },
                                                {
                                                  "alias": "nil",
                                                  "pattern": /\\\\bundefined\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "known-class-name": [
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "maybe-class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": {
                                                "alias": [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": {
                                                "alias": [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": [
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "property-access": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "inside": {
                                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                          },
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      "keyword": /\\\\b\\(\\?:and\\|break\\|by\\|catch\\|class\\|continue\\|debugger\\|delete\\|do\\|each\\|else\\|extend\\|extends\\|false\\|finally\\|for\\|if\\|in\\|instanceof\\|is\\|isnt\\|let\\|loop\\|namespace\\|new\\|no\\|not\\|null\\|of\\|off\\|on\\|or\\|own\\|return\\|super\\|switch\\|then\\|this\\|throw\\|true\\|try\\|typeof\\|undefined\\|unless\\|until\\|when\\|while\\|window\\|with\\|yes\\|yield\\)\\\\b/,
                                      "known-class-name": [
                                        {
                                          "alias": "class-name",
                                          "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                        },
                                        {
                                          "alias": "class-name",
                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                        },
                                      ],
                                      "maybe-class-name": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                      },
                                      "method": {
                                        "alias": [
                                          "function",
                                          "property-access",
                                        ],
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      },
                                      "method-variable": {
                                        "alias": [
                                          "function-variable",
                                          "method",
                                          "function",
                                          "property-access",
                                        ],
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "multiline-comment": {
                                        "alias": "comment",
                                        "pattern": /###\\[\\\\s\\\\S\\]\\+\\?###/,
                                      },
                                      "multiline-string": [
                                        {
                                          "alias": "string",
                                          "greedy": true,
                                          "pattern": /'''\\[\\\\s\\\\S\\]\\*\\?'''/,
                                        },
                                        {
                                          "alias": "string",
                                          "greedy": true,
                                          "inside": {
                                            "interpolation": {
                                              "alias": "variable",
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /"""\\[\\\\s\\\\S\\]\\*\\?"""/,
                                        },
                                      ],
                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                      "parameter": [
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                        },
                                      ],
                                      "property": /\\(\\?!\\\\d\\)\\\\w\\+\\(\\?=\\\\s\\*:\\(\\?!:\\)\\)/,
                                      "property-access": {
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                      },
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": {
                                        "greedy": true,
                                        "inside": {
                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                          "regex-flags": /\\[a-z\\]\\+\\$/,
                                          "regex-source": {
                                            "alias": "language-regex",
                                            "inside": undefined,
                                            "lookbehind": true,
                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                      },
                                      "spread": {
                                        "alias": "operator",
                                        "pattern": /\\\\\\.\\{3\\}/,
                                      },
                                      "string": [
                                        {
                                          "greedy": true,
                                          "pattern": /'\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\'\\]\\)\\*'/,
                                        },
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "interpolation": {
                                              "alias": "variable",
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\"\\]\\)\\*"/,
                                        },
                                      ],
                                    },
                                    "cpp": {
                                      "base-clause": {
                                        "greedy": true,
                                        "inside": {
                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                          "class-name": /\\\\b\\[a-z_\\]\\\\w\\*\\\\b\\(\\?!\\\\s\\*::\\)/i,
                                          "comment": {
                                            "greedy": true,
                                            "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          "constant": /\\\\b\\(\\?:__FILE__\\|__LINE__\\|__DATE__\\|__TIME__\\|__TIMESTAMP__\\|__func__\\|EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|stdin\\|stdout\\|stderr\\)\\\\b/,
                                          "function": /\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                          "keyword": /\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char8_t\\|char16_t\\|char32_t\\|class\\|compl\\|concept\\|const\\|consteval\\|constexpr\\|constinit\\|const_cast\\|continue\\|co_await\\|co_return\\|co_yield\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|float\\|for\\|friend\\|goto\\|if\\|inline\\|int\\|int8_t\\|int16_t\\|int32_t\\|int64_t\\|uint8_t\\|uint16_t\\|uint32_t\\|uint64_t\\|long\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b/,
                                          "macro": {
                                            "alias": "property",
                                            "greedy": true,
                                            "inside": {
                                              "comment": {
                                                "greedy": true,
                                                "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              "directive": {
                                                "alias": "keyword",
                                                "lookbehind": true,
                                                "pattern": /\\^\\(#\\\\s\\*\\)\\[a-z\\]\\+/,
                                              },
                                              "directive-hash": /\\^#/,
                                              "expression": {
                                                "inside": {
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:enum\\|struct\\)\\\\s\\+\\(\\?:__attribute__\\\\s\\*\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\)\\\\\\)\\\\s\\*\\)\\?\\)\\\\w\\+\\|\\\\b\\[a-z\\]\\\\w\\*_t\\\\b/,
                                                  },
                                                  "comment": {
                                                    "greedy": true,
                                                    "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  "function": /\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                                  "keyword": /\\\\b\\(\\?:__attribute__\\|_Alignas\\|_Alignof\\|_Atomic\\|_Bool\\|_Complex\\|_Generic\\|_Imaginary\\|_Noreturn\\|_Static_assert\\|_Thread_local\\|asm\\|typeof\\|inline\\|auto\\|break\\|case\\|char\\|const\\|continue\\|default\\|do\\|double\\|else\\|enum\\|extern\\|float\\|for\\|goto\\|if\\|int\\|long\\|register\\|return\\|short\\|signed\\|sizeof\\|static\\|struct\\|switch\\|typedef\\|union\\|unsigned\\|void\\|volatile\\|while\\)\\\\b/,
                                                  "number": /\\(\\?:\\\\b0x\\(\\?:\\[\\\\da-f\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                                                  "operator": />>=\\?\\|<<=\\?\\|->\\|\\(\\[-\\+&\\|:\\]\\)\\\\1\\|\\[\\?:~\\]\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?/,
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                },
                                                "pattern": /\\\\S\\[\\\\s\\\\S\\]\\*/,
                                              },
                                              "macro-name": [
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?!\\\\\\(\\)/i,
                                                },
                                                {
                                                  "alias": "function",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?=\\\\\\(\\)/i,
                                                },
                                              ],
                                              "punctuation": /##\\|\\\\\\\\\\(\\?=\\[\\\\r\\\\n\\]\\)/,
                                              "string": [
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\^\\(#\\\\s\\*include\\\\s\\*\\)<\\[\\^>\\]\\+>/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                              ],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\\\s\\*\\)#\\\\s\\*\\[a-z\\]\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\/\\]\\|\\\\/\\(\\?!\\\\\\*\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*/im,
                                          },
                                          "number": {
                                            "greedy": true,
                                            "pattern": /\\(\\?:\\\\b0b\\[01'\\]\\+\\|\\\\b0x\\(\\?:\\[\\\\da-f'\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f'\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f'\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\[\\\\d'\\]\\+\\)\\?\\|\\(\\?:\\\\b\\[\\\\d'\\]\\+\\(\\?:\\\\\\.\\[\\\\d'\\]\\*\\)\\?\\|\\\\B\\\\\\.\\[\\\\d'\\]\\+\\)\\(\\?:e\\[\\+-\\]\\?\\[\\\\d'\\]\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                                          },
                                          "operator": />>=\\?\\|<<=\\?\\|->\\|\\(\\[-\\+&\\|:\\]\\)\\\\1\\|\\[\\?:~\\]\\|<=>\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\b\\(\\?:and\\|and_eq\\|bitand\\|bitor\\|not\\|not_eq\\|or\\|or_eq\\|xor\\|xor_eq\\)\\\\b/,
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "raw-string": {
                                            "alias": "string",
                                            "greedy": true,
                                            "pattern": /R"\\(\\[\\^\\(\\)\\\\\\\\ \\]\\{0,16\\}\\)\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\)\\\\1"/,
                                          },
                                          "string": {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|struct\\)\\\\s\\+\\\\w\\+\\\\s\\*:\\\\s\\*\\)\\[\\^;\\{\\}"'\\\\s\\]\\+\\(\\?:\\\\s\\+\\[\\^;\\{\\}"'\\\\s\\]\\+\\)\\*\\(\\?=\\\\s\\*\\[;\\{\\]\\)/,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-name": [
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\(\\?:class\\|concept\\|enum\\|struct\\|typename\\)\\\\s\\+\\)\\(\\?!\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char8_t\\|char16_t\\|char32_t\\|class\\|compl\\|concept\\|const\\|consteval\\|constexpr\\|constinit\\|const_cast\\|continue\\|co_await\\|co_return\\|co_yield\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|float\\|for\\|friend\\|goto\\|if\\|inline\\|int\\|int8_t\\|int16_t\\|int32_t\\|int64_t\\|uint8_t\\|uint16_t\\|uint32_t\\|uint64_t\\|long\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b\\)\\\\w\\+/,
                                        },
                                        /\\\\b\\[A-Z\\]\\\\w\\*\\(\\?=\\\\s\\*::\\\\s\\*\\\\w\\+\\\\s\\*\\\\\\(\\)/,
                                        /\\\\b\\[A-Z_\\]\\\\w\\*\\(\\?=\\\\s\\*::\\\\s\\*~\\\\w\\+\\\\s\\*\\\\\\(\\)/i,
                                        /\\\\w\\+\\(\\?=\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\\\s\\*::\\\\s\\*\\\\w\\+\\\\s\\*\\\\\\(\\)/,
                                      ],
                                      "comment": {
                                        "greedy": true,
                                        "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      "constant": /\\\\b\\(\\?:__FILE__\\|__LINE__\\|__DATE__\\|__TIME__\\|__TIMESTAMP__\\|__func__\\|EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|stdin\\|stdout\\|stderr\\)\\\\b/,
                                      "function": /\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                      "keyword": /\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char8_t\\|char16_t\\|char32_t\\|class\\|compl\\|concept\\|const\\|consteval\\|constexpr\\|constinit\\|const_cast\\|continue\\|co_await\\|co_return\\|co_yield\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|float\\|for\\|friend\\|goto\\|if\\|inline\\|int\\|int8_t\\|int16_t\\|int32_t\\|int64_t\\|uint8_t\\|uint16_t\\|uint32_t\\|uint64_t\\|long\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|requires\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b/,
                                      "macro": {
                                        "alias": "property",
                                        "greedy": true,
                                        "inside": {
                                          "comment": {
                                            "greedy": true,
                                            "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          "directive": {
                                            "alias": "keyword",
                                            "lookbehind": true,
                                            "pattern": /\\^\\(#\\\\s\\*\\)\\[a-z\\]\\+/,
                                          },
                                          "directive-hash": /\\^#/,
                                          "expression": {
                                            "inside": {
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:enum\\|struct\\)\\\\s\\+\\(\\?:__attribute__\\\\s\\*\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\)\\\\\\)\\\\s\\*\\)\\?\\)\\\\w\\+\\|\\\\b\\[a-z\\]\\\\w\\*_t\\\\b/,
                                              },
                                              "comment": {
                                                "greedy": true,
                                                "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              "function": /\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                              "keyword": /\\\\b\\(\\?:__attribute__\\|_Alignas\\|_Alignof\\|_Atomic\\|_Bool\\|_Complex\\|_Generic\\|_Imaginary\\|_Noreturn\\|_Static_assert\\|_Thread_local\\|asm\\|typeof\\|inline\\|auto\\|break\\|case\\|char\\|const\\|continue\\|default\\|do\\|double\\|else\\|enum\\|extern\\|float\\|for\\|goto\\|if\\|int\\|long\\|register\\|return\\|short\\|signed\\|sizeof\\|static\\|struct\\|switch\\|typedef\\|union\\|unsigned\\|void\\|volatile\\|while\\)\\\\b/,
                                              "number": /\\(\\?:\\\\b0x\\(\\?:\\[\\\\da-f\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                                              "operator": />>=\\?\\|<<=\\?\\|->\\|\\(\\[-\\+&\\|:\\]\\)\\\\1\\|\\[\\?:~\\]\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?/,
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                            },
                                            "pattern": /\\\\S\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "macro-name": [
                                            {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?!\\\\\\(\\)/i,
                                            },
                                            {
                                              "alias": "function",
                                              "lookbehind": true,
                                              "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?=\\\\\\(\\)/i,
                                            },
                                          ],
                                          "punctuation": /##\\|\\\\\\\\\\(\\?=\\[\\\\r\\\\n\\]\\)/,
                                          "string": [
                                            {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(#\\\\s\\*include\\\\s\\*\\)<\\[\\^>\\]\\+>/,
                                            },
                                            {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          ],
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)#\\\\s\\*\\[a-z\\]\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\/\\]\\|\\\\/\\(\\?!\\\\\\*\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*/im,
                                      },
                                      "number": {
                                        "greedy": true,
                                        "pattern": /\\(\\?:\\\\b0b\\[01'\\]\\+\\|\\\\b0x\\(\\?:\\[\\\\da-f'\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f'\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f'\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\[\\\\d'\\]\\+\\)\\?\\|\\(\\?:\\\\b\\[\\\\d'\\]\\+\\(\\?:\\\\\\.\\[\\\\d'\\]\\*\\)\\?\\|\\\\B\\\\\\.\\[\\\\d'\\]\\+\\)\\(\\?:e\\[\\+-\\]\\?\\[\\\\d'\\]\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                                      },
                                      "operator": />>=\\?\\|<<=\\?\\|->\\|\\(\\[-\\+&\\|:\\]\\)\\\\1\\|\\[\\?:~\\]\\|<=>\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\b\\(\\?:and\\|and_eq\\|bitand\\|bitor\\|not\\|not_eq\\|or\\|or_eq\\|xor\\|xor_eq\\)\\\\b/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "raw-string": {
                                        "alias": "string",
                                        "greedy": true,
                                        "pattern": /R"\\(\\[\\^\\(\\)\\\\\\\\ \\]\\{0,16\\}\\)\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\)\\\\1"/,
                                      },
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                    },
                                    "css": {
                                      "atrule": {
                                        "inside": {
                                          "keyword": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                          },
                                          "rest": [Circular],
                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                          "selector-function-argument": {
                                            "alias": "selector",
                                            "inside": {
                                              "attribute": {
                                                "greedy": true,
                                                "inside": {
                                                  "attr-name": {
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                  },
                                                  "attr-value": [
                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                    },
                                                  ],
                                                  "case-sensitivity": {
                                                    "alias": "keyword",
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                  },
                                                  "namespace": {
                                                    "inside": {
                                                      "punctuation": /\\\\\\|\\$/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                  },
                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                },
                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                              },
                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                              "id": /#\\[-\\\\w\\]\\+/,
                                              "n-th": [
                                                {
                                                  "inside": {
                                                    "number": /\\[\\\\dn\\]\\+/,
                                                    "operator": /\\[\\+-\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                },
                                              ],
                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                              "punctuation": /\\[\\(\\),\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                          },
                                        },
                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                      },
                                      "color": [
                                        /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                        {
                                          "inside": {
                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                            "number": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "punctuation": /\\[\\(\\),\\]/,
                                            "unit": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                            },
                                          },
                                          "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                        },
                                      ],
                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "hexcode": {
                                        "alias": "color",
                                        "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                      },
                                      "important": /!important\\\\b/i,
                                      "number": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                      },
                                      "operator": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                      },
                                      "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                      "selector": {
                                        "inside": {
                                          "attribute": {
                                            "greedy": true,
                                            "inside": {
                                              "attr-name": {
                                                "lookbehind": true,
                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                              },
                                              "attr-value": [
                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                },
                                              ],
                                              "case-sensitivity": {
                                                "alias": "keyword",
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                              },
                                              "namespace": {
                                                "inside": {
                                                  "punctuation": /\\\\\\|\\$/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                              },
                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                            },
                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                          },
                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                          "id": /#\\[-\\\\w\\]\\+/,
                                          "n-th": [
                                            {
                                              "inside": {
                                                "number": /\\[\\\\dn\\]\\+/,
                                                "operator": /\\[\\+-\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                            },
                                            {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                            },
                                          ],
                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                          "punctuation": /\\[\\(\\),\\]/,
                                        },
                                        "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                      },
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "unit": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                      },
                                      "url": {
                                        "greedy": true,
                                        "inside": {
                                          "function": /\\^url/i,
                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                          "string": {
                                            "alias": "url",
                                            "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                          },
                                        },
                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                      },
                                      "variable": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                      },
                                    },
                                    "diff": {
                                      "coord": [
                                        /\\^\\(\\?:\\\\\\*\\{3\\}\\|-\\{3\\}\\|\\\\\\+\\{3\\}\\)\\.\\*\\$/m,
                                        /\\^@@\\.\\*@@\\$/m,
                                        /\\^\\\\d\\.\\*\\$/m,
                                      ],
                                      "deleted-arrow": {
                                        "alias": [
                                          "deleted",
                                        ],
                                        "inside": {
                                          "line": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\.\\)\\(\\?=\\[\\\\s\\\\S\\]\\)\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?/,
                                          },
                                          "prefix": {
                                            "alias": "deleted",
                                            "pattern": /\\[\\\\s\\\\S\\]/,
                                          },
                                        },
                                        "pattern": /\\^\\(\\?:\\[<\\]\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\+/m,
                                      },
                                      "deleted-sign": {
                                        "alias": [
                                          "deleted",
                                        ],
                                        "inside": {
                                          "line": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\.\\)\\(\\?=\\[\\\\s\\\\S\\]\\)\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?/,
                                          },
                                          "prefix": {
                                            "alias": "deleted",
                                            "pattern": /\\[\\\\s\\\\S\\]/,
                                          },
                                        },
                                        "pattern": /\\^\\(\\?:\\[-\\]\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\+/m,
                                      },
                                      "diff": {
                                        "alias": [
                                          "bold",
                                        ],
                                        "inside": {
                                          "line": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\.\\)\\(\\?=\\[\\\\s\\\\S\\]\\)\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?/,
                                          },
                                          "prefix": {
                                            "alias": "diff",
                                            "pattern": /\\[\\\\s\\\\S\\]/,
                                          },
                                        },
                                        "pattern": /\\^\\(\\?:\\[!\\]\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\+/m,
                                      },
                                      "inserted-arrow": {
                                        "alias": [
                                          "inserted",
                                        ],
                                        "inside": {
                                          "line": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\.\\)\\(\\?=\\[\\\\s\\\\S\\]\\)\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?/,
                                          },
                                          "prefix": {
                                            "alias": "inserted",
                                            "pattern": /\\[\\\\s\\\\S\\]/,
                                          },
                                        },
                                        "pattern": /\\^\\(\\?:\\[>\\]\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\+/m,
                                      },
                                      "inserted-sign": {
                                        "alias": [
                                          "inserted",
                                        ],
                                        "inside": {
                                          "line": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\.\\)\\(\\?=\\[\\\\s\\\\S\\]\\)\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?/,
                                          },
                                          "prefix": {
                                            "alias": "inserted",
                                            "pattern": /\\[\\\\s\\\\S\\]/,
                                          },
                                        },
                                        "pattern": /\\^\\(\\?:\\[\\+\\]\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\+/m,
                                      },
                                      "unchanged": {
                                        "alias": [],
                                        "inside": {
                                          "line": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\.\\)\\(\\?=\\[\\\\s\\\\S\\]\\)\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\?/,
                                          },
                                          "prefix": {
                                            "alias": "unchanged",
                                            "pattern": /\\[\\\\s\\\\S\\]/,
                                          },
                                        },
                                        "pattern": /\\^\\(\\?:\\[ \\]\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\+/m,
                                      },
                                    },
                                    "extend": [Function],
                                    "git": {
                                      "command": {
                                        "inside": {
                                          "parameter": /\\\\s--\\?\\\\w\\+/m,
                                        },
                                        "pattern": /\\^\\.\\*\\\\\\$ git \\.\\*\\$/m,
                                      },
                                      "comment": /\\^#\\.\\*/m,
                                      "commit-sha1": /\\^commit \\\\w\\{40\\}\\$/m,
                                      "coord": /\\^@@\\.\\*@@\\$/m,
                                      "deleted": /\\^\\[-–\\]\\.\\*/m,
                                      "inserted": /\\^\\\\\\+\\.\\*/m,
                                      "string": /\\("\\|'\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/m,
                                    },
                                    "go": {
                                      "boolean": /\\\\b\\(\\?:_\\|iota\\|nil\\|true\\|false\\)\\\\b/,
                                      "builtin": /\\\\b\\(\\?:bool\\|byte\\|complex\\(\\?:64\\|128\\)\\|error\\|float\\(\\?:32\\|64\\)\\|rune\\|string\\|u\\?int\\(\\?:8\\|16\\|32\\|64\\)\\?\\|uintptr\\|append\\|cap\\|close\\|complex\\|copy\\|delete\\|imag\\|len\\|make\\|new\\|panic\\|print\\(\\?:ln\\)\\?\\|real\\|recover\\)\\\\b/,
                                      "comment": [
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "function": /\\\\w\\+\\(\\?=\\\\\\(\\)/,
                                      "keyword": /\\\\b\\(\\?:break\\|case\\|chan\\|const\\|continue\\|default\\|defer\\|else\\|fallthrough\\|for\\|func\\|go\\(\\?:to\\)\\?\\|if\\|import\\|interface\\|map\\|package\\|range\\|return\\|select\\|struct\\|switch\\|type\\|var\\)\\\\b/,
                                      "number": /\\(\\?:\\\\b0x\\[a-f\\\\d\\]\\+\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[-\\+\\]\\?\\\\d\\+\\)\\?\\)i\\?/i,
                                      "operator": /\\[\\*\\\\/%\\^!=\\]=\\?\\|\\\\\\+\\[=\\+\\]\\?\\|-\\[=-\\]\\?\\|\\\\\\|\\[=\\|\\]\\?\\|&\\(\\?:=\\|&\\|\\\\\\^=\\?\\)\\?\\|>\\(\\?:>=\\?\\|=\\)\\?\\|<\\(\\?:<=\\?\\|=\\|-\\)\\?\\|:=\\|\\\\\\.\\\\\\.\\\\\\./,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\`\\]\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1/,
                                      },
                                    },
                                    "graphql": {
                                      "attr-name": {
                                        "greedy": true,
                                        "pattern": /\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)"\\]\\|"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\)\\*\\\\\\)\\)\\?:\\)/i,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-name": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:enum\\|implements\\|interface\\|on\\|scalar\\|type\\|union\\)\\\\s\\+\\|&\\\\s\\*\\)\\[a-zA-Z_\\]\\\\w\\*/,
                                      },
                                      "comment": /#\\.\\*/,
                                      "constant": /\\\\b\\(\\?!ID\\\\b\\)\\[A-Z\\]\\[A-Z_\\\\d\\]\\*\\\\b/,
                                      "description": {
                                        "alias": "string",
                                        "greedy": true,
                                        "inside": {
                                          "language-markdown": {
                                            "inside": undefined,
                                            "lookbehind": true,
                                            "pattern": /\\(\\^"\\(\\?:""\\)\\?\\)\\(\\?!\\\\1\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                          },
                                        },
                                        "pattern": /\\(\\?:"""\\(\\?:\\[\\^"\\]\\|\\(\\?!"""\\)"\\)\\*"""\\|"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\)\\(\\?=\\\\s\\*\\[a-z_\\]\\)/i,
                                      },
                                      "directive": {
                                        "alias": "function",
                                        "pattern": /@\\[a-z_\\]\\\\w\\*/i,
                                      },
                                      "fragment": {
                                        "alias": "function",
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bfragment\\\\s\\+\\|\\\\\\.\\{3\\}\\\\s\\*\\(\\?!on\\\\b\\)\\)\\[a-zA-Z_\\]\\\\w\\*/,
                                      },
                                      "keyword": /\\\\b\\(\\?:directive\\|enum\\|extend\\|fragment\\|implements\\|input\\|interface\\|mutation\\|on\\|query\\|repeatable\\|scalar\\|schema\\|subscription\\|type\\|union\\)\\\\b/,
                                      "number": /\\(\\?:\\\\B-\\|\\\\b\\)\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\\\b/i,
                                      "operator": /\\[!=\\|&\\]\\|\\\\\\.\\{3\\}/,
                                      "punctuation": /\\[!\\(\\)\\{\\}\\\\\\[\\\\\\]:=,\\]/,
                                      "string": {
                                        "greedy": true,
                                        "pattern": /"""\\(\\?:\\[\\^"\\]\\|\\(\\?!"""\\)"\\)\\*"""\\|"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"/,
                                      },
                                      "variable": /\\\\\\$\\[a-z_\\]\\\\w\\*/i,
                                    },
                                    "handlebars": {
                                      "block": {
                                        "alias": "keyword",
                                        "lookbehind": true,
                                        "pattern": /\\^\\(\\\\s\\*\\(\\?:~\\\\s\\*\\)\\?\\)\\[#\\\\/\\]\\\\S\\+\\?\\(\\?=\\\\s\\*\\(\\?:~\\\\s\\*\\)\\?\\$\\|\\\\s\\)/i,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "brackets": {
                                        "inside": {
                                          "punctuation": /\\\\\\[\\|\\\\\\]/,
                                          "variable": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                        "pattern": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                      },
                                      "comment": /\\\\\\{\\\\\\{!\\[\\\\s\\\\S\\]\\*\\?\\\\\\}\\\\\\}/,
                                      "delimiter": {
                                        "alias": "punctuation",
                                        "pattern": /\\^\\\\\\{\\\\\\{\\\\\\{\\?\\|\\\\\\}\\\\\\}\\\\\\}\\?\\$/i,
                                      },
                                      "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                      "punctuation": /\\[!"#%&':\\(\\)\\*\\+,\\.\\\\/;<=>@\\\\\\[\\\\\\\\\\\\\\]\\^\`\\{\\|\\}~\\]/,
                                      "string": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      "variable": /\\[\\^!"#%&'\\(\\)\\*\\+,\\\\/;<=>@\\\\\\[\\\\\\\\\\\\\\]\\^\`\\{\\|\\}~\\\\s\\]\\+/,
                                    },
                                    "html": {
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": {
                                        "greedy": true,
                                        "inside": {
                                          "doctype-tag": /\\^DOCTYPE/,
                                          "internal-subset": {
                                            "greedy": true,
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                          },
                                          "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                          "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                          "string": {
                                            "greedy": true,
                                            "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                          },
                                        },
                                        "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                      },
                                      "entity": [
                                        {
                                          "alias": "named-entity",
                                          "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                        },
                                        /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                      ],
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "script": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-javascript": {
                                                "inside": {
                                                  "arrow": {
                                                    "alias": "operator",
                                                    "pattern": /=>/,
                                                  },
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": [
                                                    {
                                                      "inside": {
                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                    },
                                                  ],
                                                  "comment": [
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                    },
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                    },
                                                  ],
                                                  "console": {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                  },
                                                  "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                  "dom": {
                                                    "alias": "variable",
                                                    "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                                  },
                                                  "exports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                  },
                                                  "function": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "function-variable": {
                                                    "alias": "function",
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "imports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                  },
                                                  "keyword": [
                                                    {
                                                      "alias": "module",
                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": "control-flow",
                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": [
                                                        "null",
                                                        "nil",
                                                      ],
                                                      "pattern": /\\\\bnull\\\\b/,
                                                    },
                                                    {
                                                      "alias": "nil",
                                                      "pattern": /\\\\bundefined\\\\b/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                    },
                                                  ],
                                                  "known-class-name": [
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                    },
                                                  ],
                                                  "maybe-class-name": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                  },
                                                  "method": {
                                                    "alias": [
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "method-variable": {
                                                    "alias": [
                                                      "function-variable",
                                                      "method",
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                  "parameter": [
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                  ],
                                                  "property-access": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                  },
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "regex": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                      "regex-flags": /\\[a-z\\]\\+\\$/,
                                                      "regex-source": {
                                                        "alias": "language-regex",
                                                        "inside": undefined,
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                  },
                                                  "spread": {
                                                    "alias": "operator",
                                                    "pattern": /\\\\\\.\\{3\\}/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "template-string": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "interpolation": {
                                                        "inside": {
                                                          "interpolation-punctuation": {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                          },
                                                          "rest": {
                                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                            "class-name": [
                                                              {
                                                                "inside": {
                                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                              },
                                                            ],
                                                            "comment": [
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                              },
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                              },
                                                            ],
                                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                            "function-variable": {
                                                              "alias": "function",
                                                              "inside": {
                                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                              },
                                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                            },
                                                            "keyword": [
                                                              {
                                                                "alias": "module",
                                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": "control-flow",
                                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": [
                                                                  "null",
                                                                  "nil",
                                                                ],
                                                                "pattern": /\\\\bnull\\\\b/,
                                                              },
                                                              {
                                                                "alias": "nil",
                                                                "pattern": /\\\\bundefined\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                              },
                                                            ],
                                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                            "parameter": [
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                              },
                                                            ],
                                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                            "regex": {
                                                              "greedy": true,
                                                              "inside": {
                                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                                "regex-flags": /\\[a-z\\]\\+\\$/,
                                                                "regex-source": {
                                                                  "alias": "language-regex",
                                                                  "inside": undefined,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                                },
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                            },
                                                            "string": {
                                                              "greedy": true,
                                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            },
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-javascript": {
                                            "inside": {
                                              "arrow": {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "class-name": [
                                                {
                                                  "inside": {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                },
                                              ],
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                              },
                                              "exports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": {
                                                "alias": "function",
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "imports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": [
                                                {
                                                  "alias": "module",
                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "control-flow",
                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                },
                                                {
                                                  "alias": [
                                                    "null",
                                                    "nil",
                                                  ],
                                                  "pattern": /\\\\bnull\\\\b/,
                                                },
                                                {
                                                  "alias": "nil",
                                                  "pattern": /\\\\bundefined\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "known-class-name": [
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "maybe-class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": {
                                                "alias": [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": {
                                                "alias": [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": [
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "property-access": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "inside": {
                                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                          },
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "style": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-css": {
                                                "inside": {
                                                  "atrule": {
                                                    "inside": {
                                                      "keyword": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                      },
                                                      "rest": [Circular],
                                                      "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                      "selector-function-argument": {
                                                        "alias": "selector",
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                  },
                                                  "color": [
                                                    /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                    {
                                                      "inside": {
                                                        "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                        "number": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                        },
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                        "unit": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                        },
                                                      },
                                                      "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                    },
                                                  ],
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "hexcode": {
                                                    "alias": "color",
                                                    "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                  },
                                                  "important": /!important\\\\b/i,
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "operator": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                  },
                                                  "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                  "selector": {
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "unit": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                  },
                                                  "url": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "function": /\\^url/i,
                                                      "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                      "string": {
                                                        "alias": "url",
                                                        "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                      },
                                                    },
                                                    "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                  },
                                                  "variable": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-css": {
                                            "inside": {
                                              "atrule": {
                                                "inside": {
                                                  "keyword": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": {
                                                    "alias": "selector",
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": [
                                                /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                {
                                                  "inside": {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              "hexcode": {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": {
                                                "inside": {
                                                  "attribute": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "attr-name": {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": {
                                                        "inside": {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": [
                                                    {
                                                      "inside": {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "unit": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                              },
                                              "url": {
                                                "greedy": true,
                                                "inside": {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": {
                                                    "alias": "url",
                                                    "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "tag": {
                                        "greedy": true,
                                        "inside": {
                                          "attr-name": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": {
                                            "inside": {
                                              "entity": [
                                                {
                                                  "alias": "named-entity",
                                                  "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                                },
                                                /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                              ],
                                              "punctuation": [
                                                {
                                                  "alias": "attr-equals",
                                                  "pattern": /\\^=/,
                                                },
                                                /"\\|'/,
                                              ],
                                            },
                                            "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "style-attr": {
                                            "inside": {
                                              "attr-name": /\\^style/i,
                                              "attr-value": {
                                                "inside": {
                                                  "punctuation": [
                                                    {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "style": {
                                                    "alias": "language-css",
                                                    "inside": {
                                                      "atrule": {
                                                        "inside": {
                                                          "keyword": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": {
                                                            "alias": "selector",
                                                            "inside": {
                                                              "attribute": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "attr-name": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": {
                                                                    "inside": {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": [
                                                                {
                                                                  "inside": {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": [
                                                        /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                        {
                                                          "inside": {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      "hexcode": {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": {
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "unit": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                      },
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": {
                                                            "alias": "url",
                                                            "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\["'\\]\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\["'\\]\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)style\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)/i,
                                          },
                                          "tag": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                      },
                                    },
                                    "insertBefore": [Function],
                                    "javascript": {
                                      "arrow": {
                                        "alias": "operator",
                                        "pattern": /=>/,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-name": [
                                        {
                                          "inside": {
                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                        },
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                        },
                                      ],
                                      "comment": [
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "console": {
                                        "alias": "class-name",
                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                      },
                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                      "dom": {
                                        "alias": "variable",
                                        "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                      },
                                      "exports": {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                      },
                                      "function": {
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      },
                                      "function-variable": {
                                        "alias": "function",
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "imports": {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                      },
                                      "keyword": [
                                        {
                                          "alias": "module",
                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                        },
                                        {
                                          "alias": "control-flow",
                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                        },
                                        {
                                          "alias": [
                                            "null",
                                            "nil",
                                          ],
                                          "pattern": /\\\\bnull\\\\b/,
                                        },
                                        {
                                          "alias": "nil",
                                          "pattern": /\\\\bundefined\\\\b/,
                                        },
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                        },
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                        },
                                      ],
                                      "known-class-name": [
                                        {
                                          "alias": "class-name",
                                          "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                        },
                                        {
                                          "alias": "class-name",
                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                        },
                                      ],
                                      "maybe-class-name": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                      },
                                      "method": {
                                        "alias": [
                                          "function",
                                          "property-access",
                                        ],
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      },
                                      "method-variable": {
                                        "alias": [
                                          "function-variable",
                                          "method",
                                          "function",
                                          "property-access",
                                        ],
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                      "parameter": [
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                        },
                                      ],
                                      "property-access": {
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                      },
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": {
                                        "greedy": true,
                                        "inside": {
                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                          "regex-flags": /\\[a-z\\]\\+\\$/,
                                          "regex-source": {
                                            "alias": "language-regex",
                                            "inside": undefined,
                                            "lookbehind": true,
                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                      },
                                      "spread": {
                                        "alias": "operator",
                                        "pattern": /\\\\\\.\\{3\\}/,
                                      },
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "template-string": {
                                        "greedy": true,
                                        "inside": {
                                          "interpolation": {
                                            "inside": {
                                              "interpolation-punctuation": {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                              },
                                              "rest": {
                                                "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                "class-name": [
                                                  {
                                                    "inside": {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                  },
                                                ],
                                                "comment": [
                                                  {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                "function-variable": {
                                                  "alias": "function",
                                                  "inside": {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "keyword": [
                                                  {
                                                    "alias": "module",
                                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                  },
                                                  {
                                                    "alias": "control-flow",
                                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                  },
                                                  {
                                                    "alias": [
                                                      "null",
                                                      "nil",
                                                    ],
                                                    "pattern": /\\\\bnull\\\\b/,
                                                  },
                                                  {
                                                    "alias": "nil",
                                                    "pattern": /\\\\bundefined\\\\b/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": [
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": {
                                                  "greedy": true,
                                                  "inside": {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\[a-z\\]\\+\\$/,
                                                    "regex-source": {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "string": {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    },
                                    "js": {
                                      "arrow": {
                                        "alias": "operator",
                                        "pattern": /=>/,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-name": [
                                        {
                                          "inside": {
                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                        },
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                        },
                                      ],
                                      "comment": [
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "console": {
                                        "alias": "class-name",
                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                      },
                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                      "dom": {
                                        "alias": "variable",
                                        "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                      },
                                      "exports": {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                      },
                                      "function": {
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      },
                                      "function-variable": {
                                        "alias": "function",
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "imports": {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                      },
                                      "keyword": [
                                        {
                                          "alias": "module",
                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                        },
                                        {
                                          "alias": "control-flow",
                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                        },
                                        {
                                          "alias": [
                                            "null",
                                            "nil",
                                          ],
                                          "pattern": /\\\\bnull\\\\b/,
                                        },
                                        {
                                          "alias": "nil",
                                          "pattern": /\\\\bundefined\\\\b/,
                                        },
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                        },
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                        },
                                      ],
                                      "known-class-name": [
                                        {
                                          "alias": "class-name",
                                          "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                        },
                                        {
                                          "alias": "class-name",
                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                        },
                                      ],
                                      "maybe-class-name": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                      },
                                      "method": {
                                        "alias": [
                                          "function",
                                          "property-access",
                                        ],
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      },
                                      "method-variable": {
                                        "alias": [
                                          "function-variable",
                                          "method",
                                          "function",
                                          "property-access",
                                        ],
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                      "parameter": [
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "alias": "module",
                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                              },
                                              {
                                                "alias": "control-flow",
                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                              },
                                              {
                                                "alias": [
                                                  "null",
                                                  "nil",
                                                ],
                                                "pattern": /\\\\bnull\\\\b/,
                                              },
                                              {
                                                "alias": "nil",
                                                "pattern": /\\\\bundefined\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                        },
                                      ],
                                      "property-access": {
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                      },
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": {
                                        "greedy": true,
                                        "inside": {
                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                          "regex-flags": /\\[a-z\\]\\+\\$/,
                                          "regex-source": {
                                            "alias": "language-regex",
                                            "inside": undefined,
                                            "lookbehind": true,
                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                      },
                                      "spread": {
                                        "alias": "operator",
                                        "pattern": /\\\\\\.\\{3\\}/,
                                      },
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "template-string": {
                                        "greedy": true,
                                        "inside": {
                                          "interpolation": {
                                            "inside": {
                                              "interpolation-punctuation": {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                              },
                                              "rest": {
                                                "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                "class-name": [
                                                  {
                                                    "inside": {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                  },
                                                ],
                                                "comment": [
                                                  {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                "function-variable": {
                                                  "alias": "function",
                                                  "inside": {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "keyword": [
                                                  {
                                                    "alias": "module",
                                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                  },
                                                  {
                                                    "alias": "control-flow",
                                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                  },
                                                  {
                                                    "alias": [
                                                      "null",
                                                      "nil",
                                                    ],
                                                    "pattern": /\\\\bnull\\\\b/,
                                                  },
                                                  {
                                                    "alias": "nil",
                                                    "pattern": /\\\\bundefined\\\\b/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": [
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": {
                                                  "greedy": true,
                                                  "inside": {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\[a-z\\]\\+\\$/,
                                                    "regex-source": {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "string": {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    },
                                    "json": {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "comment": {
                                        "greedy": true,
                                        "pattern": /\\\\/\\\\/\\.\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      "null": {
                                        "alias": "keyword",
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      "number": /-\\?\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\\\b/i,
                                      "operator": /:/,
                                      "property": {
                                        "greedy": true,
                                        "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\(\\?=\\\\s\\*:\\)/,
                                      },
                                      "punctuation": /\\[\\{\\}\\[\\\\\\],\\]/,
                                      "string": {
                                        "greedy": true,
                                        "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\(\\?!\\\\s\\*:\\)/,
                                      },
                                    },
                                    "jsx": {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "class-name": [
                                        {
                                          "inside": {
                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                        },
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                        },
                                      ],
                                      "comment": [
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                        },
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                      "doctype": {
                                        "greedy": true,
                                        "inside": {
                                          "doctype-tag": /\\^DOCTYPE/,
                                          "internal-subset": {
                                            "greedy": true,
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                          },
                                          "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                          "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                          "string": {
                                            "greedy": true,
                                            "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                          },
                                        },
                                        "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                      },
                                      "entity": [
                                        {
                                          "alias": "named-entity",
                                          "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                        },
                                        /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                      ],
                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      "function-variable": {
                                        "alias": "function",
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "keyword": [
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                        },
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                        },
                                      ],
                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                      "parameter": [
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                        },
                                      ],
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": {
                                        "greedy": true,
                                        "inside": {
                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                          "regex-flags": /\\[a-z\\]\\+\\$/,
                                          "regex-source": {
                                            "alias": "language-regex",
                                            "inside": undefined,
                                            "lookbehind": true,
                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                      },
                                      "script": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-javascript": {
                                                "inside": {
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": [
                                                    {
                                                      "inside": {
                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                    },
                                                  ],
                                                  "comment": [
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                    },
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                    },
                                                  ],
                                                  "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  "function-variable": {
                                                    "alias": "function",
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "keyword": [
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                    },
                                                  ],
                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                  "parameter": [
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                  ],
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "regex": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                      "regex-flags": /\\[a-z\\]\\+\\$/,
                                                      "regex-source": {
                                                        "alias": "language-regex",
                                                        "inside": undefined,
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "template-string": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "interpolation": {
                                                        "inside": {
                                                          "interpolation-punctuation": {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                          },
                                                          "rest": {
                                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                            "class-name": [
                                                              {
                                                                "inside": {
                                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                              },
                                                            ],
                                                            "comment": [
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                              },
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                              },
                                                            ],
                                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                            "function-variable": {
                                                              "alias": "function",
                                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                            },
                                                            "keyword": [
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                              },
                                                            ],
                                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                            "parameter": [
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                              },
                                                            ],
                                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                            "regex": {
                                                              "greedy": true,
                                                              "inside": {
                                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                                "regex-flags": /\\[a-z\\]\\+\\$/,
                                                                "regex-source": {
                                                                  "alias": "language-regex",
                                                                  "inside": undefined,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                                },
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                            },
                                                            "string": {
                                                              "greedy": true,
                                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            },
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-javascript": {
                                            "inside": {
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "class-name": [
                                                {
                                                  "inside": {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                },
                                              ],
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              "function-variable": {
                                                "alias": "function",
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "keyword": [
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": [
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "style": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-css": {
                                                "inside": {
                                                  "atrule": {
                                                    "inside": {
                                                      "keyword": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                      },
                                                      "rest": [Circular],
                                                      "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                      "selector-function-argument": {
                                                        "alias": "selector",
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                  },
                                                  "color": [
                                                    /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                    {
                                                      "inside": {
                                                        "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                        "number": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                        },
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                        "unit": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                        },
                                                      },
                                                      "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                    },
                                                  ],
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "hexcode": {
                                                    "alias": "color",
                                                    "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                  },
                                                  "important": /!important\\\\b/i,
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "operator": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                  },
                                                  "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                  "selector": {
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "unit": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                  },
                                                  "url": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "function": /\\^url/i,
                                                      "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                      "string": {
                                                        "alias": "url",
                                                        "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                      },
                                                    },
                                                    "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                  },
                                                  "variable": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-css": {
                                            "inside": {
                                              "atrule": {
                                                "inside": {
                                                  "keyword": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": {
                                                    "alias": "selector",
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": [
                                                /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                {
                                                  "inside": {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              "hexcode": {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": {
                                                "inside": {
                                                  "attribute": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "attr-name": {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": {
                                                        "inside": {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": [
                                                    {
                                                      "inside": {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "unit": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                              },
                                              "url": {
                                                "greedy": true,
                                                "inside": {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": {
                                                    "alias": "url",
                                                    "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "tag": {
                                        "greedy": true,
                                        "inside": {
                                          "attr-name": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": {
                                            "inside": {
                                              "entity": [
                                                {
                                                  "alias": "named-entity",
                                                  "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                                },
                                                /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                              ],
                                              "punctuation": [
                                                {
                                                  "alias": "attr-equals",
                                                  "pattern": /\\^=/,
                                                },
                                                /"\\|'/,
                                              ],
                                            },
                                            "pattern": /=\\(\\?!\\\\\\{\\)\\(\\?:"\\(\\?:\\\\\\\\\\[\\^\\]\\|\\[\\^\\\\\\\\"\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\[\\^\\]\\|\\[\\^\\\\\\\\'\\]\\)\\*'\\|\\[\\^\\\\s'">\\]\\+\\)/i,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "script": {
                                            "alias": "language-javascript",
                                            "inside": {
                                              "rest": [Circular],
                                              "script-punctuation": {
                                                "alias": "punctuation",
                                                "pattern": /\\^=\\(\\?=\\{\\)/,
                                              },
                                            },
                                            "pattern": /=\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\+\\\\\\}\\)/i,
                                          },
                                          "spread": {
                                            "inside": {
                                              "attr-value": /\\\\w\\+/,
                                              "punctuation": /\\\\\\.\\{3\\}\\|\\[\\{\\}\\.\\]/,
                                            },
                                            "pattern": /\\\\\\{\\\\s\\*\\\\\\.\\{3\\}\\\\s\\*\\[a-z_\\$\\]\\[\\\\w\\$\\]\\*\\(\\?:\\\\\\.\\[a-z_\\$\\]\\[\\\\w\\$\\]\\*\\)\\*\\\\s\\*\\\\\\}/,
                                          },
                                          "style-attr": {
                                            "inside": {
                                              "attr-name": /\\^style/i,
                                              "attr-value": {
                                                "inside": {
                                                  "punctuation": [
                                                    {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "style": {
                                                    "alias": "language-css",
                                                    "inside": {
                                                      "atrule": {
                                                        "inside": {
                                                          "keyword": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": {
                                                            "alias": "selector",
                                                            "inside": {
                                                              "attribute": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "attr-name": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": {
                                                                    "inside": {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": [
                                                                {
                                                                  "inside": {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": [
                                                        /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                        {
                                                          "inside": {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      "hexcode": {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": {
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "unit": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                      },
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": {
                                                            "alias": "url",
                                                            "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\["'\\]\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\["'\\]\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)style\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)/i,
                                          },
                                          "tag": {
                                            "inside": {
                                              "class-name": /\\^\\[A-Z\\]\\\\w\\*\\(\\?:\\\\\\.\\[A-Z\\]\\\\w\\*\\)\\*\\$/,
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\*/i,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?:\\[\\\\w\\.:-\\]\\+\\(\\?:\\\\s\\+\\(\\?:\\[\\\\w\\.:\\$-\\]\\+\\(\\?:=\\(\\?:"\\(\\?:\\\\\\\\\\[\\^\\]\\|\\[\\^\\\\\\\\"\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\[\\^\\]\\|\\[\\^\\\\\\\\'\\]\\)\\*'\\|\\[\\^\\\\s\\{'">=\\]\\+\\|\\\\\\{\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\+\\\\\\}\\)\\)\\?\\|\\\\\\{\\\\s\\*\\\\\\.\\{3\\}\\\\s\\*\\[a-z_\\$\\]\\[\\\\w\\$\\]\\*\\(\\?:\\\\\\.\\[a-z_\\$\\]\\[\\\\w\\$\\]\\*\\)\\*\\\\s\\*\\\\\\}\\)\\)\\*\\\\s\\*\\\\/\\?\\)\\?>/i,
                                      },
                                      "template-string": {
                                        "greedy": true,
                                        "inside": {
                                          "interpolation": {
                                            "inside": {
                                              "interpolation-punctuation": {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                              },
                                              "rest": {
                                                "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                "class-name": [
                                                  {
                                                    "inside": {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                  },
                                                ],
                                                "comment": [
                                                  {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                                  },
                                                  {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                "function-variable": {
                                                  "alias": "function",
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "keyword": [
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": [
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/g,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": {
                                                  "greedy": true,
                                                  "inside": {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\[a-z\\]\\+\\$/,
                                                    "regex-source": {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "string": {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    },
                                    "less": {
                                      "atrule": {
                                        "inside": {
                                          "punctuation": /\\[:\\(\\)\\]/,
                                        },
                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\{\\}\\]\\|\\\\\\(\\[\\^\\(\\)\\{\\}\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\[\\^\\(\\)\\{\\};\\\\s\\]\\|\\\\s\\+\\(\\?!\\\\s\\)\\)\\*\\?\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                      },
                                      "color": [
                                        /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                        {
                                          "inside": {
                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                            "number": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "punctuation": /\\[\\(\\),\\]/,
                                            "unit": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                            },
                                          },
                                          "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                        },
                                      ],
                                      "comment": [
                                        /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "hexcode": {
                                        "alias": "color",
                                        "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                      },
                                      "important": /!important\\\\b/i,
                                      "mixin-usage": {
                                        "alias": "function",
                                        "lookbehind": true,
                                        "pattern": /\\(\\[\\{;\\]\\\\s\\*\\)\\[\\.#\\]\\(\\?!\\\\d\\)\\[\\\\w-\\]\\.\\*\\?\\(\\?=\\[\\(;\\]\\)/,
                                      },
                                      "number": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                      },
                                      "operator": /\\[\\+\\\\-\\*\\\\/\\]/,
                                      "property": /\\(\\?:@\\\\\\{\\[\\\\w-\\]\\+\\\\\\}\\|\\[\\\\w-\\]\\)\\+\\(\\?:\\\\\\+_\\?\\)\\?\\(\\?=\\\\s\\*:\\)/i,
                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                      "selector": {
                                        "inside": {
                                          "variable": /@\\+\\[\\\\w-\\]\\+/,
                                        },
                                        "pattern": /\\(\\?:@\\\\\\{\\[\\\\w-\\]\\+\\\\\\}\\|\\[\\^\\{\\};\\\\s@\\]\\)\\(\\?:@\\\\\\{\\[\\\\w-\\]\\+\\\\\\}\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\{\\}\\]\\|\\\\\\(\\[\\^\\(\\)\\{\\}\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\[\\^\\(\\)\\{\\};@\\\\s\\]\\|\\\\s\\+\\(\\?!\\\\s\\)\\)\\*\\?\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                      },
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "unit": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                      },
                                      "url": {
                                        "greedy": true,
                                        "inside": {
                                          "function": /\\^url/i,
                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                          "string": {
                                            "alias": "url",
                                            "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                          },
                                        },
                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                      },
                                      "variable": [
                                        {
                                          "inside": {
                                            "punctuation": /:/,
                                          },
                                          "pattern": /@\\[\\\\w-\\]\\+\\\\s\\*:/,
                                        },
                                        /@@\\?\\[\\\\w-\\]\\+/,
                                      ],
                                    },
                                    "makefile": {
                                      "builtin": /\\\\\\.\\[A-Z\\]\\[\\^:#=\\\\s\\]\\+\\(\\?=\\\\s\\*:\\(\\?!=\\)\\)/,
                                      "comment": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)#\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*/,
                                      },
                                      "keyword": [
                                        /-include\\\\b\\|\\\\b\\(\\?:define\\|else\\|endef\\|endif\\|export\\|ifn\\?def\\|ifn\\?eq\\|include\\|override\\|private\\|sinclude\\|undefine\\|unexport\\|vpath\\)\\\\b/,
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\(\\)\\(\\?:addsuffix\\|abspath\\|and\\|basename\\|call\\|dir\\|error\\|eval\\|file\\|filter\\(\\?:-out\\)\\?\\|findstring\\|firstword\\|flavor\\|foreach\\|guile\\|if\\|info\\|join\\|lastword\\|load\\|notdir\\|or\\|origin\\|patsubst\\|realpath\\|shell\\|sort\\|strip\\|subst\\|suffix\\|value\\|warning\\|wildcard\\|word\\(\\?:s\\|list\\)\\?\\)\\(\\?=\\[ \\\\t\\]\\)/,
                                        },
                                      ],
                                      "operator": /\\(\\?:::\\|\\[\\?:\\+!\\]\\)\\?=\\|\\[\\|@\\]/,
                                      "punctuation": /\\[:;\\(\\)\\{\\}\\]/,
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "symbol": {
                                        "inside": {
                                          "variable": /\\\\\\$\\+\\(\\?:\\(\\?!\\\\\\$\\)\\[\\^\\(\\)\\{\\}:#=\\\\s\\]\\+\\|\\(\\?=\\[\\(\\{\\]\\)\\)/,
                                        },
                                        "pattern": /\\^\\(\\?:\\[\\^:=\\\\s\\]\\|\\[ \\\\t\\]\\+\\(\\?!\\[\\\\s:\\]\\)\\)\\+\\(\\?=\\\\s\\*:\\(\\?!=\\)\\)/m,
                                      },
                                      "variable": /\\\\\\$\\+\\(\\?:\\(\\?!\\\\\\$\\)\\[\\^\\(\\)\\{\\}:#=\\\\s\\]\\+\\|\\\\\\(\\[@\\*%<\\^\\+\\?\\]\\[DF\\]\\\\\\)\\|\\(\\?=\\[\\(\\{\\]\\)\\)/,
                                    },
                                    "markdown": {
                                      "blockquote": {
                                        "alias": "punctuation",
                                        "pattern": /\\^>\\(\\?:\\[\\\\t \\]\\*>\\)\\*/m,
                                      },
                                      "bold": {
                                        "greedy": true,
                                        "inside": {
                                          "content": {
                                            "inside": {
                                              "italic": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": [Circular],
                                                      "strike": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": [Circular],
                                                              "url": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                                  },
                                                                  "operator": /\\^!/,
                                                                  "string": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                                  },
                                                                  "url": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                                  },
                                                                  "variable": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                          },
                                                          "punctuation": /~~\\?/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                      },
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": [Circular],
                                                              "strike": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                                  },
                                                                  "punctuation": /~~\\?/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                          },
                                                          "operator": /\\^!/,
                                                          "string": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                          },
                                                          "url": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                          },
                                                          "variable": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                  },
                                                  "punctuation": /\\[\\*_\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                              },
                                              "strike": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": [Circular],
                                                      "italic": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "strike": [Circular],
                                                              "url": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                                  },
                                                                  "operator": /\\^!/,
                                                                  "string": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                                  },
                                                                  "url": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                                  },
                                                                  "variable": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\[\\*_\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                      },
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\[\\*_\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                              },
                                                              "strike": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                          },
                                                          "operator": /\\^!/,
                                                          "string": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                          },
                                                          "url": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                          },
                                                          "variable": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                  },
                                                  "punctuation": /~~\\?/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                              },
                                              "url": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": [Circular],
                                                      "italic": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "strike": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                                  },
                                                                  "punctuation": /~~\\?/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                              },
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\[\\*_\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                      },
                                                      "strike": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\[\\*_\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                              },
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                          },
                                                          "punctuation": /~~\\?/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                  },
                                                  "operator": /\\^!/,
                                                  "string": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                  },
                                                  "url": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                  },
                                                  "variable": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                          },
                                          "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                      },
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "code": [
                                        {
                                          "alias": "keyword",
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\\\n\\)\\[ \\\\t\\]\\*\\\\n\\|\\(\\?:\\^\\|\\\\r\\\\n\\?\\)\\[ \\\\t\\]\\*\\\\r\\\\n\\?\\)\\(\\?: \\{4\\}\\|\\\\t\\)\\.\\+\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?: \\{4\\}\\|\\\\t\\)\\.\\+\\)\\*/,
                                        },
                                        {
                                          "alias": "keyword",
                                          "pattern": /\`\`\\.\\+\\?\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`/,
                                        },
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "code-block": {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\`\`\`\\.\\*\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\^\`\`\`\\$\\)/m,
                                            },
                                            "code-language": {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\`\`\`\\)\\.\\+/,
                                            },
                                            "punctuation": /\`\`\`/,
                                          },
                                          "pattern": /\\^\`\`\`\\[\\\\s\\\\S\\]\\*\\?\\^\`\`\`\\$/m,
                                        },
                                      ],
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": {
                                        "greedy": true,
                                        "inside": {
                                          "doctype-tag": /\\^DOCTYPE/,
                                          "internal-subset": {
                                            "greedy": true,
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                          },
                                          "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                          "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                          "string": {
                                            "greedy": true,
                                            "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                          },
                                        },
                                        "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                      },
                                      "entity": [
                                        {
                                          "alias": "named-entity",
                                          "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                        },
                                        /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                      ],
                                      "front-matter-block": {
                                        "greedy": true,
                                        "inside": {
                                          "font-matter": {
                                            "alias": [
                                              "yaml",
                                              "language-yaml",
                                            ],
                                            "inside": undefined,
                                            "pattern": /\\\\S\\+\\(\\?:\\\\s\\+\\\\S\\+\\)\\*/,
                                          },
                                          "punctuation": /\\^---\\|---\\$/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\(\\?:\\\\s\\*\\[\\\\r\\\\n\\]\\)\\?\\)---\\(\\?!\\.\\)\\[\\\\s\\\\S\\]\\*\\?\\[\\\\r\\\\n\\]---\\(\\?!\\.\\)/,
                                      },
                                      "hr": {
                                        "alias": "punctuation",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)\\(\\[\\*-\\]\\)\\(\\?:\\[\\\\t \\]\\*\\\\2\\)\\{2,\\}\\(\\?=\\\\s\\*\\$\\)/m,
                                      },
                                      "italic": {
                                        "greedy": true,
                                        "inside": {
                                          "content": {
                                            "inside": {
                                              "bold": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "italic": [Circular],
                                                      "strike": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": [Circular],
                                                              "url": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                                  },
                                                                  "operator": /\\^!/,
                                                                  "string": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                                  },
                                                                  "url": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                                  },
                                                                  "variable": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                          },
                                                          "punctuation": /~~\\?/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                      },
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": [Circular],
                                                              "strike": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                                  },
                                                                  "punctuation": /~~\\?/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                          },
                                                          "operator": /\\^!/,
                                                          "string": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                          },
                                                          "url": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                          },
                                                          "variable": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                  },
                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                              },
                                              "strike": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "italic": [Circular],
                                                              "strike": [Circular],
                                                              "url": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                                  },
                                                                  "operator": /\\^!/,
                                                                  "string": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                                  },
                                                                  "url": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                                  },
                                                                  "variable": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                      },
                                                      "italic": [Circular],
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                              },
                                                              "italic": [Circular],
                                                              "strike": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                          },
                                                          "operator": /\\^!/,
                                                          "string": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                          },
                                                          "url": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                          },
                                                          "variable": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                  },
                                                  "punctuation": /~~\\?/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                              },
                                              "url": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "italic": [Circular],
                                                              "strike": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                                  },
                                                                  "punctuation": /~~\\?/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                              },
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                      },
                                                      "italic": [Circular],
                                                      "strike": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                              },
                                                              "italic": [Circular],
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                          },
                                                          "punctuation": /~~\\?/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                  },
                                                  "operator": /\\^!/,
                                                  "string": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                  },
                                                  "url": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                  },
                                                  "variable": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                          },
                                          "punctuation": /\\[\\*_\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                      },
                                      "list": {
                                        "alias": "punctuation",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)\\(\\?:\\[\\*\\+-\\]\\|\\\\d\\+\\\\\\.\\)\\(\\?=\\[\\\\t \\]\\.\\)/m,
                                      },
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "script": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-javascript": {
                                                "inside": {
                                                  "arrow": {
                                                    "alias": "operator",
                                                    "pattern": /=>/,
                                                  },
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": [
                                                    {
                                                      "inside": {
                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                    },
                                                  ],
                                                  "comment": [
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                    },
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                    },
                                                  ],
                                                  "console": {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                  },
                                                  "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                  "dom": {
                                                    "alias": "variable",
                                                    "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                                  },
                                                  "exports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                  },
                                                  "function": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "function-variable": {
                                                    "alias": "function",
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "imports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                  },
                                                  "keyword": [
                                                    {
                                                      "alias": "module",
                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": "control-flow",
                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": [
                                                        "null",
                                                        "nil",
                                                      ],
                                                      "pattern": /\\\\bnull\\\\b/,
                                                    },
                                                    {
                                                      "alias": "nil",
                                                      "pattern": /\\\\bundefined\\\\b/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                    },
                                                  ],
                                                  "known-class-name": [
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                    },
                                                  ],
                                                  "maybe-class-name": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                  },
                                                  "method": {
                                                    "alias": [
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "method-variable": {
                                                    "alias": [
                                                      "function-variable",
                                                      "method",
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                  "parameter": [
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                  ],
                                                  "property-access": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                  },
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "regex": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                      "regex-flags": /\\[a-z\\]\\+\\$/,
                                                      "regex-source": {
                                                        "alias": "language-regex",
                                                        "inside": undefined,
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                  },
                                                  "spread": {
                                                    "alias": "operator",
                                                    "pattern": /\\\\\\.\\{3\\}/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "template-string": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "interpolation": {
                                                        "inside": {
                                                          "interpolation-punctuation": {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                          },
                                                          "rest": {
                                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                            "class-name": [
                                                              {
                                                                "inside": {
                                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                              },
                                                            ],
                                                            "comment": [
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                              },
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                              },
                                                            ],
                                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                            "function-variable": {
                                                              "alias": "function",
                                                              "inside": {
                                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                              },
                                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                            },
                                                            "keyword": [
                                                              {
                                                                "alias": "module",
                                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": "control-flow",
                                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": [
                                                                  "null",
                                                                  "nil",
                                                                ],
                                                                "pattern": /\\\\bnull\\\\b/,
                                                              },
                                                              {
                                                                "alias": "nil",
                                                                "pattern": /\\\\bundefined\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                              },
                                                            ],
                                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                            "parameter": [
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                              },
                                                            ],
                                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                            "regex": {
                                                              "greedy": true,
                                                              "inside": {
                                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                                "regex-flags": /\\[a-z\\]\\+\\$/,
                                                                "regex-source": {
                                                                  "alias": "language-regex",
                                                                  "inside": undefined,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                                },
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                            },
                                                            "string": {
                                                              "greedy": true,
                                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            },
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-javascript": {
                                            "inside": {
                                              "arrow": {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "class-name": [
                                                {
                                                  "inside": {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                },
                                              ],
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                              },
                                              "exports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": {
                                                "alias": "function",
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "imports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": [
                                                {
                                                  "alias": "module",
                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "control-flow",
                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                },
                                                {
                                                  "alias": [
                                                    "null",
                                                    "nil",
                                                  ],
                                                  "pattern": /\\\\bnull\\\\b/,
                                                },
                                                {
                                                  "alias": "nil",
                                                  "pattern": /\\\\bundefined\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "known-class-name": [
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "maybe-class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": {
                                                "alias": [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": {
                                                "alias": [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": [
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "property-access": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "inside": {
                                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                          },
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "strike": {
                                        "greedy": true,
                                        "inside": {
                                          "content": {
                                            "inside": {
                                              "bold": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "italic": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "strike": [Circular],
                                                              "url": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                                  },
                                                                  "operator": /\\^!/,
                                                                  "string": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                                  },
                                                                  "url": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                                  },
                                                                  "variable": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\[\\*_\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                      },
                                                      "strike": [Circular],
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\[\\*_\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                              },
                                                              "strike": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                          },
                                                          "operator": /\\^!/,
                                                          "string": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                          },
                                                          "url": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                          },
                                                          "variable": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                  },
                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                              },
                                              "italic": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "italic": [Circular],
                                                              "strike": [Circular],
                                                              "url": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                                  },
                                                                  "operator": /\\^!/,
                                                                  "string": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                                  },
                                                                  "url": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                                  },
                                                                  "variable": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                      },
                                                      "strike": [Circular],
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                              },
                                                              "italic": [Circular],
                                                              "strike": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                          },
                                                          "operator": /\\^!/,
                                                          "string": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                          },
                                                          "url": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                          },
                                                          "variable": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                  },
                                                  "punctuation": /\\[\\*_\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                              },
                                              "url": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "italic": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\[\\*_\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                              },
                                                              "strike": [Circular],
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                      },
                                                      "italic": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                              },
                                                              "strike": [Circular],
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\[\\*_\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                      },
                                                      "strike": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                  },
                                                  "operator": /\\^!/,
                                                  "string": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                  },
                                                  "url": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                  },
                                                  "variable": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                          },
                                          "punctuation": /~~\\?/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                      },
                                      "style": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-css": {
                                                "inside": {
                                                  "atrule": {
                                                    "inside": {
                                                      "keyword": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                      },
                                                      "rest": [Circular],
                                                      "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                      "selector-function-argument": {
                                                        "alias": "selector",
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                  },
                                                  "color": [
                                                    /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                    {
                                                      "inside": {
                                                        "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                        "number": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                        },
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                        "unit": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                        },
                                                      },
                                                      "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                    },
                                                  ],
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "hexcode": {
                                                    "alias": "color",
                                                    "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                  },
                                                  "important": /!important\\\\b/i,
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "operator": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                  },
                                                  "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                  "selector": {
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "unit": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                  },
                                                  "url": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "function": /\\^url/i,
                                                      "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                      "string": {
                                                        "alias": "url",
                                                        "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                      },
                                                    },
                                                    "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                  },
                                                  "variable": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-css": {
                                            "inside": {
                                              "atrule": {
                                                "inside": {
                                                  "keyword": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": {
                                                    "alias": "selector",
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": [
                                                /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                {
                                                  "inside": {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              "hexcode": {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": {
                                                "inside": {
                                                  "attribute": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "attr-name": {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": {
                                                        "inside": {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": [
                                                    {
                                                      "inside": {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "unit": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                              },
                                              "url": {
                                                "greedy": true,
                                                "inside": {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": {
                                                    "alias": "url",
                                                    "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "table": {
                                        "inside": {
                                          "table-data-rows": {
                                            "inside": {
                                              "punctuation": /\\\\\\|/,
                                              "table-data": {
                                                "inside": [Circular],
                                                "pattern": /\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\^\\(\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\\\\\|\\?\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\(\\?:\\\\\\|\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\)\\+\\\\\\|\\?\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\)\\(\\?:\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\*\\$/,
                                          },
                                          "table-header-row": {
                                            "inside": {
                                              "punctuation": /\\\\\\|/,
                                              "table-header": {
                                                "alias": "important",
                                                "inside": [Circular],
                                                "pattern": /\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+/,
                                              },
                                            },
                                            "pattern": /\\^\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\$/,
                                          },
                                          "table-line": {
                                            "inside": {
                                              "punctuation": /\\\\\\|\\|:\\?-\\{3,\\}:\\?/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\^\\(\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\\\\\|\\?\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\(\\?:\\\\\\|\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\)\\+\\\\\\|\\?\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\$/,
                                          },
                                        },
                                        "pattern": /\\^\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\\\\\|\\?\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\(\\?:\\\\\\|\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\)\\+\\\\\\|\\?\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?:\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\*/m,
                                      },
                                      "tag": {
                                        "greedy": true,
                                        "inside": {
                                          "attr-name": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": {
                                            "inside": {
                                              "entity": [
                                                {
                                                  "alias": "named-entity",
                                                  "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                                },
                                                /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                              ],
                                              "punctuation": [
                                                {
                                                  "alias": "attr-equals",
                                                  "pattern": /\\^=/,
                                                },
                                                /"\\|'/,
                                              ],
                                            },
                                            "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "style-attr": {
                                            "inside": {
                                              "attr-name": /\\^style/i,
                                              "attr-value": {
                                                "inside": {
                                                  "punctuation": [
                                                    {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "style": {
                                                    "alias": "language-css",
                                                    "inside": {
                                                      "atrule": {
                                                        "inside": {
                                                          "keyword": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": {
                                                            "alias": "selector",
                                                            "inside": {
                                                              "attribute": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "attr-name": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": {
                                                                    "inside": {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": [
                                                                {
                                                                  "inside": {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": [
                                                        /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                        {
                                                          "inside": {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      "hexcode": {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": {
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "unit": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                      },
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": {
                                                            "alias": "url",
                                                            "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\["'\\]\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\["'\\]\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)style\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)/i,
                                          },
                                          "tag": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                      },
                                      "title": [
                                        {
                                          "alias": "important",
                                          "inside": {
                                            "punctuation": /==\\+\\$\\|--\\+\\$/,
                                          },
                                          "pattern": /\\\\S\\.\\*\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?:==\\+\\|--\\+\\)\\(\\?=\\[ \\\\t\\]\\*\\$\\)/m,
                                        },
                                        {
                                          "alias": "important",
                                          "inside": {
                                            "punctuation": /\\^#\\+\\|#\\+\\$/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\s\\*\\)#\\.\\+/m,
                                        },
                                      ],
                                      "url": {
                                        "greedy": true,
                                        "inside": {
                                          "content": {
                                            "inside": {
                                              "bold": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "italic": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "strike": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                                  },
                                                                  "punctuation": /~~\\?/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                              },
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\[\\*_\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                      },
                                                      "strike": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\[\\*_\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                              },
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                          },
                                                          "punctuation": /~~\\?/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                      },
                                                      "url": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                  },
                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                              },
                                              "italic": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "italic": [Circular],
                                                              "strike": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                                  },
                                                                  "punctuation": /~~\\?/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                              },
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                      },
                                                      "strike": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                              },
                                                              "italic": [Circular],
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                          },
                                                          "punctuation": /~~\\?/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                      },
                                                      "url": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                  },
                                                  "punctuation": /\\[\\*_\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                              },
                                              "strike": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "italic": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\[\\*_\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                              },
                                                              "strike": [Circular],
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                      },
                                                      "italic": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                              },
                                                              "strike": [Circular],
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\[\\*_\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                      },
                                                      "url": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                  },
                                                  "punctuation": /~~\\?/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                          },
                                          "operator": /\\^!/,
                                          "string": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                          },
                                          "url": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                          },
                                          "variable": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                      },
                                      "url-reference": {
                                        "alias": "url",
                                        "inside": {
                                          "punctuation": /\\^\\[\\\\\\[\\\\\\]!:\\]\\|\\[<>\\]/,
                                          "string": /\\(\\?:"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\.\\|\\[\\^'\\\\\\\\\\]\\)\\*'\\|\\\\\\(\\(\\?:\\\\\\\\\\.\\|\\[\\^\\)\\\\\\\\\\]\\)\\*\\\\\\)\\)\\$/,
                                          "variable": {
                                            "lookbehind": true,
                                            "pattern": /\\^\\(!\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+/,
                                          },
                                        },
                                        "pattern": /!\\?\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]:\\[\\\\t \\]\\+\\(\\?:\\\\S\\+\\|<\\(\\?:\\\\\\\\\\.\\|\\[\\^>\\\\\\\\\\]\\)\\+>\\)\\(\\?:\\[\\\\t \\]\\+\\(\\?:"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\.\\|\\[\\^'\\\\\\\\\\]\\)\\*'\\|\\\\\\(\\(\\?:\\\\\\\\\\.\\|\\[\\^\\)\\\\\\\\\\]\\)\\*\\\\\\)\\)\\)\\?/,
                                      },
                                    },
                                    "markup": {
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": {
                                        "greedy": true,
                                        "inside": {
                                          "doctype-tag": /\\^DOCTYPE/,
                                          "internal-subset": {
                                            "greedy": true,
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                          },
                                          "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                          "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                          "string": {
                                            "greedy": true,
                                            "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                          },
                                        },
                                        "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                      },
                                      "entity": [
                                        {
                                          "alias": "named-entity",
                                          "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                        },
                                        /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                      ],
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "script": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-javascript": {
                                                "inside": {
                                                  "arrow": {
                                                    "alias": "operator",
                                                    "pattern": /=>/,
                                                  },
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": [
                                                    {
                                                      "inside": {
                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                    },
                                                  ],
                                                  "comment": [
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                    },
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                    },
                                                  ],
                                                  "console": {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                  },
                                                  "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                  "dom": {
                                                    "alias": "variable",
                                                    "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                                  },
                                                  "exports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                  },
                                                  "function": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "function-variable": {
                                                    "alias": "function",
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "imports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                  },
                                                  "keyword": [
                                                    {
                                                      "alias": "module",
                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": "control-flow",
                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": [
                                                        "null",
                                                        "nil",
                                                      ],
                                                      "pattern": /\\\\bnull\\\\b/,
                                                    },
                                                    {
                                                      "alias": "nil",
                                                      "pattern": /\\\\bundefined\\\\b/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                    },
                                                  ],
                                                  "known-class-name": [
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                    },
                                                  ],
                                                  "maybe-class-name": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                  },
                                                  "method": {
                                                    "alias": [
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "method-variable": {
                                                    "alias": [
                                                      "function-variable",
                                                      "method",
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                  "parameter": [
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                  ],
                                                  "property-access": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                  },
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "regex": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                      "regex-flags": /\\[a-z\\]\\+\\$/,
                                                      "regex-source": {
                                                        "alias": "language-regex",
                                                        "inside": undefined,
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                  },
                                                  "spread": {
                                                    "alias": "operator",
                                                    "pattern": /\\\\\\.\\{3\\}/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "template-string": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "interpolation": {
                                                        "inside": {
                                                          "interpolation-punctuation": {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                          },
                                                          "rest": {
                                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                            "class-name": [
                                                              {
                                                                "inside": {
                                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                              },
                                                            ],
                                                            "comment": [
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                              },
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                              },
                                                            ],
                                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                            "function-variable": {
                                                              "alias": "function",
                                                              "inside": {
                                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                              },
                                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                            },
                                                            "keyword": [
                                                              {
                                                                "alias": "module",
                                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": "control-flow",
                                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": [
                                                                  "null",
                                                                  "nil",
                                                                ],
                                                                "pattern": /\\\\bnull\\\\b/,
                                                              },
                                                              {
                                                                "alias": "nil",
                                                                "pattern": /\\\\bundefined\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                              },
                                                            ],
                                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                            "parameter": [
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                              },
                                                            ],
                                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                            "regex": {
                                                              "greedy": true,
                                                              "inside": {
                                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                                "regex-flags": /\\[a-z\\]\\+\\$/,
                                                                "regex-source": {
                                                                  "alias": "language-regex",
                                                                  "inside": undefined,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                                },
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                            },
                                                            "string": {
                                                              "greedy": true,
                                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            },
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-javascript": {
                                            "inside": {
                                              "arrow": {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "class-name": [
                                                {
                                                  "inside": {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                },
                                              ],
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                              },
                                              "exports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": {
                                                "alias": "function",
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "imports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": [
                                                {
                                                  "alias": "module",
                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "control-flow",
                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                },
                                                {
                                                  "alias": [
                                                    "null",
                                                    "nil",
                                                  ],
                                                  "pattern": /\\\\bnull\\\\b/,
                                                },
                                                {
                                                  "alias": "nil",
                                                  "pattern": /\\\\bundefined\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "known-class-name": [
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "maybe-class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": {
                                                "alias": [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": {
                                                "alias": [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": [
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "property-access": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "inside": {
                                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                          },
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "style": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-css": {
                                                "inside": {
                                                  "atrule": {
                                                    "inside": {
                                                      "keyword": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                      },
                                                      "rest": [Circular],
                                                      "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                      "selector-function-argument": {
                                                        "alias": "selector",
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                  },
                                                  "color": [
                                                    /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                    {
                                                      "inside": {
                                                        "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                        "number": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                        },
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                        "unit": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                        },
                                                      },
                                                      "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                    },
                                                  ],
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "hexcode": {
                                                    "alias": "color",
                                                    "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                  },
                                                  "important": /!important\\\\b/i,
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "operator": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                  },
                                                  "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                  "selector": {
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "unit": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                  },
                                                  "url": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "function": /\\^url/i,
                                                      "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                      "string": {
                                                        "alias": "url",
                                                        "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                      },
                                                    },
                                                    "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                  },
                                                  "variable": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-css": {
                                            "inside": {
                                              "atrule": {
                                                "inside": {
                                                  "keyword": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": {
                                                    "alias": "selector",
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": [
                                                /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                {
                                                  "inside": {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              "hexcode": {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": {
                                                "inside": {
                                                  "attribute": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "attr-name": {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": {
                                                        "inside": {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": [
                                                    {
                                                      "inside": {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "unit": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                              },
                                              "url": {
                                                "greedy": true,
                                                "inside": {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": {
                                                    "alias": "url",
                                                    "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "tag": {
                                        "greedy": true,
                                        "inside": {
                                          "attr-name": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": {
                                            "inside": {
                                              "entity": [
                                                {
                                                  "alias": "named-entity",
                                                  "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                                },
                                                /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                              ],
                                              "punctuation": [
                                                {
                                                  "alias": "attr-equals",
                                                  "pattern": /\\^=/,
                                                },
                                                /"\\|'/,
                                              ],
                                            },
                                            "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "style-attr": {
                                            "inside": {
                                              "attr-name": /\\^style/i,
                                              "attr-value": {
                                                "inside": {
                                                  "punctuation": [
                                                    {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "style": {
                                                    "alias": "language-css",
                                                    "inside": {
                                                      "atrule": {
                                                        "inside": {
                                                          "keyword": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": {
                                                            "alias": "selector",
                                                            "inside": {
                                                              "attribute": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "attr-name": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": {
                                                                    "inside": {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": [
                                                                {
                                                                  "inside": {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": [
                                                        /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                        {
                                                          "inside": {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      "hexcode": {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": {
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "unit": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                      },
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": {
                                                            "alias": "url",
                                                            "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\["'\\]\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\["'\\]\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)style\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)/i,
                                          },
                                          "tag": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                      },
                                    },
                                    "markup-templating": {},
                                    "mathml": {
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": {
                                        "greedy": true,
                                        "inside": {
                                          "doctype-tag": /\\^DOCTYPE/,
                                          "internal-subset": {
                                            "greedy": true,
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                          },
                                          "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                          "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                          "string": {
                                            "greedy": true,
                                            "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                          },
                                        },
                                        "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                      },
                                      "entity": [
                                        {
                                          "alias": "named-entity",
                                          "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                        },
                                        /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                      ],
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "script": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-javascript": {
                                                "inside": {
                                                  "arrow": {
                                                    "alias": "operator",
                                                    "pattern": /=>/,
                                                  },
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": [
                                                    {
                                                      "inside": {
                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                    },
                                                  ],
                                                  "comment": [
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                    },
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                    },
                                                  ],
                                                  "console": {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                  },
                                                  "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                  "dom": {
                                                    "alias": "variable",
                                                    "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                                  },
                                                  "exports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                  },
                                                  "function": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "function-variable": {
                                                    "alias": "function",
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "imports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                  },
                                                  "keyword": [
                                                    {
                                                      "alias": "module",
                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": "control-flow",
                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": [
                                                        "null",
                                                        "nil",
                                                      ],
                                                      "pattern": /\\\\bnull\\\\b/,
                                                    },
                                                    {
                                                      "alias": "nil",
                                                      "pattern": /\\\\bundefined\\\\b/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                    },
                                                  ],
                                                  "known-class-name": [
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                    },
                                                  ],
                                                  "maybe-class-name": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                  },
                                                  "method": {
                                                    "alias": [
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "method-variable": {
                                                    "alias": [
                                                      "function-variable",
                                                      "method",
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                  "parameter": [
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                  ],
                                                  "property-access": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                  },
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "regex": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                      "regex-flags": /\\[a-z\\]\\+\\$/,
                                                      "regex-source": {
                                                        "alias": "language-regex",
                                                        "inside": undefined,
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                  },
                                                  "spread": {
                                                    "alias": "operator",
                                                    "pattern": /\\\\\\.\\{3\\}/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "template-string": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "interpolation": {
                                                        "inside": {
                                                          "interpolation-punctuation": {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                          },
                                                          "rest": {
                                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                            "class-name": [
                                                              {
                                                                "inside": {
                                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                              },
                                                            ],
                                                            "comment": [
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                              },
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                              },
                                                            ],
                                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                            "function-variable": {
                                                              "alias": "function",
                                                              "inside": {
                                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                              },
                                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                            },
                                                            "keyword": [
                                                              {
                                                                "alias": "module",
                                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": "control-flow",
                                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": [
                                                                  "null",
                                                                  "nil",
                                                                ],
                                                                "pattern": /\\\\bnull\\\\b/,
                                                              },
                                                              {
                                                                "alias": "nil",
                                                                "pattern": /\\\\bundefined\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                              },
                                                            ],
                                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                            "parameter": [
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                              },
                                                            ],
                                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                            "regex": {
                                                              "greedy": true,
                                                              "inside": {
                                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                                "regex-flags": /\\[a-z\\]\\+\\$/,
                                                                "regex-source": {
                                                                  "alias": "language-regex",
                                                                  "inside": undefined,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                                },
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                            },
                                                            "string": {
                                                              "greedy": true,
                                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            },
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-javascript": {
                                            "inside": {
                                              "arrow": {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "class-name": [
                                                {
                                                  "inside": {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                },
                                              ],
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                              },
                                              "exports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": {
                                                "alias": "function",
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "imports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": [
                                                {
                                                  "alias": "module",
                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "control-flow",
                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                },
                                                {
                                                  "alias": [
                                                    "null",
                                                    "nil",
                                                  ],
                                                  "pattern": /\\\\bnull\\\\b/,
                                                },
                                                {
                                                  "alias": "nil",
                                                  "pattern": /\\\\bundefined\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "known-class-name": [
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "maybe-class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": {
                                                "alias": [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": {
                                                "alias": [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": [
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "property-access": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "inside": {
                                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                          },
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "style": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-css": {
                                                "inside": {
                                                  "atrule": {
                                                    "inside": {
                                                      "keyword": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                      },
                                                      "rest": [Circular],
                                                      "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                      "selector-function-argument": {
                                                        "alias": "selector",
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                  },
                                                  "color": [
                                                    /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                    {
                                                      "inside": {
                                                        "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                        "number": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                        },
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                        "unit": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                        },
                                                      },
                                                      "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                    },
                                                  ],
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "hexcode": {
                                                    "alias": "color",
                                                    "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                  },
                                                  "important": /!important\\\\b/i,
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "operator": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                  },
                                                  "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                  "selector": {
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "unit": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                  },
                                                  "url": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "function": /\\^url/i,
                                                      "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                      "string": {
                                                        "alias": "url",
                                                        "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                      },
                                                    },
                                                    "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                  },
                                                  "variable": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-css": {
                                            "inside": {
                                              "atrule": {
                                                "inside": {
                                                  "keyword": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": {
                                                    "alias": "selector",
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": [
                                                /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                {
                                                  "inside": {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              "hexcode": {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": {
                                                "inside": {
                                                  "attribute": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "attr-name": {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": {
                                                        "inside": {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": [
                                                    {
                                                      "inside": {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "unit": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                              },
                                              "url": {
                                                "greedy": true,
                                                "inside": {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": {
                                                    "alias": "url",
                                                    "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "tag": {
                                        "greedy": true,
                                        "inside": {
                                          "attr-name": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": {
                                            "inside": {
                                              "entity": [
                                                {
                                                  "alias": "named-entity",
                                                  "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                                },
                                                /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                              ],
                                              "punctuation": [
                                                {
                                                  "alias": "attr-equals",
                                                  "pattern": /\\^=/,
                                                },
                                                /"\\|'/,
                                              ],
                                            },
                                            "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "style-attr": {
                                            "inside": {
                                              "attr-name": /\\^style/i,
                                              "attr-value": {
                                                "inside": {
                                                  "punctuation": [
                                                    {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "style": {
                                                    "alias": "language-css",
                                                    "inside": {
                                                      "atrule": {
                                                        "inside": {
                                                          "keyword": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": {
                                                            "alias": "selector",
                                                            "inside": {
                                                              "attribute": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "attr-name": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": {
                                                                    "inside": {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": [
                                                                {
                                                                  "inside": {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": [
                                                        /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                        {
                                                          "inside": {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      "hexcode": {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": {
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "unit": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                      },
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": {
                                                            "alias": "url",
                                                            "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\["'\\]\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\["'\\]\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)style\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)/i,
                                          },
                                          "tag": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                      },
                                    },
                                    "md": {
                                      "blockquote": {
                                        "alias": "punctuation",
                                        "pattern": /\\^>\\(\\?:\\[\\\\t \\]\\*>\\)\\*/m,
                                      },
                                      "bold": {
                                        "greedy": true,
                                        "inside": {
                                          "content": {
                                            "inside": {
                                              "italic": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": [Circular],
                                                      "strike": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": [Circular],
                                                              "url": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                                  },
                                                                  "operator": /\\^!/,
                                                                  "string": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                                  },
                                                                  "url": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                                  },
                                                                  "variable": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                          },
                                                          "punctuation": /~~\\?/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                      },
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": [Circular],
                                                              "strike": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                                  },
                                                                  "punctuation": /~~\\?/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                          },
                                                          "operator": /\\^!/,
                                                          "string": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                          },
                                                          "url": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                          },
                                                          "variable": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                  },
                                                  "punctuation": /\\[\\*_\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                              },
                                              "strike": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": [Circular],
                                                      "italic": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "strike": [Circular],
                                                              "url": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                                  },
                                                                  "operator": /\\^!/,
                                                                  "string": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                                  },
                                                                  "url": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                                  },
                                                                  "variable": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\[\\*_\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                      },
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\[\\*_\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                              },
                                                              "strike": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                          },
                                                          "operator": /\\^!/,
                                                          "string": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                          },
                                                          "url": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                          },
                                                          "variable": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                  },
                                                  "punctuation": /~~\\?/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                              },
                                              "url": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": [Circular],
                                                      "italic": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "strike": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                                  },
                                                                  "punctuation": /~~\\?/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                              },
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\[\\*_\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                      },
                                                      "strike": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\[\\*_\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                              },
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                          },
                                                          "punctuation": /~~\\?/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                  },
                                                  "operator": /\\^!/,
                                                  "string": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                  },
                                                  "url": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                  },
                                                  "variable": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                          },
                                          "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                      },
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "code": [
                                        {
                                          "alias": "keyword",
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\\\n\\)\\[ \\\\t\\]\\*\\\\n\\|\\(\\?:\\^\\|\\\\r\\\\n\\?\\)\\[ \\\\t\\]\\*\\\\r\\\\n\\?\\)\\(\\?: \\{4\\}\\|\\\\t\\)\\.\\+\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?: \\{4\\}\\|\\\\t\\)\\.\\+\\)\\*/,
                                        },
                                        {
                                          "alias": "keyword",
                                          "pattern": /\`\`\\.\\+\\?\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`/,
                                        },
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "code-block": {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\`\`\`\\.\\*\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\^\`\`\`\\$\\)/m,
                                            },
                                            "code-language": {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(\`\`\`\\)\\.\\+/,
                                            },
                                            "punctuation": /\`\`\`/,
                                          },
                                          "pattern": /\\^\`\`\`\\[\\\\s\\\\S\\]\\*\\?\\^\`\`\`\\$/m,
                                        },
                                      ],
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": {
                                        "greedy": true,
                                        "inside": {
                                          "doctype-tag": /\\^DOCTYPE/,
                                          "internal-subset": {
                                            "greedy": true,
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                          },
                                          "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                          "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                          "string": {
                                            "greedy": true,
                                            "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                          },
                                        },
                                        "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                      },
                                      "entity": [
                                        {
                                          "alias": "named-entity",
                                          "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                        },
                                        /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                      ],
                                      "front-matter-block": {
                                        "greedy": true,
                                        "inside": {
                                          "font-matter": {
                                            "alias": [
                                              "yaml",
                                              "language-yaml",
                                            ],
                                            "inside": undefined,
                                            "pattern": /\\\\S\\+\\(\\?:\\\\s\\+\\\\S\\+\\)\\*/,
                                          },
                                          "punctuation": /\\^---\\|---\\$/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\(\\?:\\\\s\\*\\[\\\\r\\\\n\\]\\)\\?\\)---\\(\\?!\\.\\)\\[\\\\s\\\\S\\]\\*\\?\\[\\\\r\\\\n\\]---\\(\\?!\\.\\)/,
                                      },
                                      "hr": {
                                        "alias": "punctuation",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)\\(\\[\\*-\\]\\)\\(\\?:\\[\\\\t \\]\\*\\\\2\\)\\{2,\\}\\(\\?=\\\\s\\*\\$\\)/m,
                                      },
                                      "italic": {
                                        "greedy": true,
                                        "inside": {
                                          "content": {
                                            "inside": {
                                              "bold": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "italic": [Circular],
                                                      "strike": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": [Circular],
                                                              "url": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                                  },
                                                                  "operator": /\\^!/,
                                                                  "string": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                                  },
                                                                  "url": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                                  },
                                                                  "variable": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                          },
                                                          "punctuation": /~~\\?/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                      },
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": [Circular],
                                                              "strike": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                                  },
                                                                  "punctuation": /~~\\?/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                          },
                                                          "operator": /\\^!/,
                                                          "string": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                          },
                                                          "url": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                          },
                                                          "variable": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                  },
                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                              },
                                              "strike": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "italic": [Circular],
                                                              "strike": [Circular],
                                                              "url": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                                  },
                                                                  "operator": /\\^!/,
                                                                  "string": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                                  },
                                                                  "url": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                                  },
                                                                  "variable": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                      },
                                                      "italic": [Circular],
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                              },
                                                              "italic": [Circular],
                                                              "strike": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                          },
                                                          "operator": /\\^!/,
                                                          "string": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                          },
                                                          "url": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                          },
                                                          "variable": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                  },
                                                  "punctuation": /~~\\?/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                              },
                                              "url": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "italic": [Circular],
                                                              "strike": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                                  },
                                                                  "punctuation": /~~\\?/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                              },
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                      },
                                                      "italic": [Circular],
                                                      "strike": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                              },
                                                              "italic": [Circular],
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                          },
                                                          "punctuation": /~~\\?/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                  },
                                                  "operator": /\\^!/,
                                                  "string": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                  },
                                                  "url": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                  },
                                                  "variable": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                          },
                                          "punctuation": /\\[\\*_\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                      },
                                      "list": {
                                        "alias": "punctuation",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)\\(\\?:\\[\\*\\+-\\]\\|\\\\d\\+\\\\\\.\\)\\(\\?=\\[\\\\t \\]\\.\\)/m,
                                      },
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "script": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-javascript": {
                                                "inside": {
                                                  "arrow": {
                                                    "alias": "operator",
                                                    "pattern": /=>/,
                                                  },
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": [
                                                    {
                                                      "inside": {
                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                    },
                                                  ],
                                                  "comment": [
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                    },
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                    },
                                                  ],
                                                  "console": {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                  },
                                                  "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                  "dom": {
                                                    "alias": "variable",
                                                    "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                                  },
                                                  "exports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                  },
                                                  "function": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "function-variable": {
                                                    "alias": "function",
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "imports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                  },
                                                  "keyword": [
                                                    {
                                                      "alias": "module",
                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": "control-flow",
                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": [
                                                        "null",
                                                        "nil",
                                                      ],
                                                      "pattern": /\\\\bnull\\\\b/,
                                                    },
                                                    {
                                                      "alias": "nil",
                                                      "pattern": /\\\\bundefined\\\\b/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                    },
                                                  ],
                                                  "known-class-name": [
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                    },
                                                  ],
                                                  "maybe-class-name": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                  },
                                                  "method": {
                                                    "alias": [
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "method-variable": {
                                                    "alias": [
                                                      "function-variable",
                                                      "method",
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                  "parameter": [
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                  ],
                                                  "property-access": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                  },
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "regex": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                      "regex-flags": /\\[a-z\\]\\+\\$/,
                                                      "regex-source": {
                                                        "alias": "language-regex",
                                                        "inside": undefined,
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                  },
                                                  "spread": {
                                                    "alias": "operator",
                                                    "pattern": /\\\\\\.\\{3\\}/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "template-string": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "interpolation": {
                                                        "inside": {
                                                          "interpolation-punctuation": {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                          },
                                                          "rest": {
                                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                            "class-name": [
                                                              {
                                                                "inside": {
                                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                              },
                                                            ],
                                                            "comment": [
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                              },
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                              },
                                                            ],
                                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                            "function-variable": {
                                                              "alias": "function",
                                                              "inside": {
                                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                              },
                                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                            },
                                                            "keyword": [
                                                              {
                                                                "alias": "module",
                                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": "control-flow",
                                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": [
                                                                  "null",
                                                                  "nil",
                                                                ],
                                                                "pattern": /\\\\bnull\\\\b/,
                                                              },
                                                              {
                                                                "alias": "nil",
                                                                "pattern": /\\\\bundefined\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                              },
                                                            ],
                                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                            "parameter": [
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                              },
                                                            ],
                                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                            "regex": {
                                                              "greedy": true,
                                                              "inside": {
                                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                                "regex-flags": /\\[a-z\\]\\+\\$/,
                                                                "regex-source": {
                                                                  "alias": "language-regex",
                                                                  "inside": undefined,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                                },
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                            },
                                                            "string": {
                                                              "greedy": true,
                                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            },
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-javascript": {
                                            "inside": {
                                              "arrow": {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "class-name": [
                                                {
                                                  "inside": {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                },
                                              ],
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                              },
                                              "exports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": {
                                                "alias": "function",
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "imports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": [
                                                {
                                                  "alias": "module",
                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "control-flow",
                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                },
                                                {
                                                  "alias": [
                                                    "null",
                                                    "nil",
                                                  ],
                                                  "pattern": /\\\\bnull\\\\b/,
                                                },
                                                {
                                                  "alias": "nil",
                                                  "pattern": /\\\\bundefined\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "known-class-name": [
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "maybe-class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": {
                                                "alias": [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": {
                                                "alias": [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": [
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "property-access": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "inside": {
                                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                          },
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "strike": {
                                        "greedy": true,
                                        "inside": {
                                          "content": {
                                            "inside": {
                                              "bold": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "italic": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "strike": [Circular],
                                                              "url": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                                  },
                                                                  "operator": /\\^!/,
                                                                  "string": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                                  },
                                                                  "url": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                                  },
                                                                  "variable": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\[\\*_\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                      },
                                                      "strike": [Circular],
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\[\\*_\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                              },
                                                              "strike": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                          },
                                                          "operator": /\\^!/,
                                                          "string": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                          },
                                                          "url": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                          },
                                                          "variable": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                  },
                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                              },
                                              "italic": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "italic": [Circular],
                                                              "strike": [Circular],
                                                              "url": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                                  },
                                                                  "operator": /\\^!/,
                                                                  "string": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                                  },
                                                                  "url": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                                  },
                                                                  "variable": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                      },
                                                      "strike": [Circular],
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                              },
                                                              "italic": [Circular],
                                                              "strike": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                          },
                                                          "operator": /\\^!/,
                                                          "string": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                          },
                                                          "url": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                          },
                                                          "variable": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                  },
                                                  "punctuation": /\\[\\*_\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                              },
                                              "url": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "italic": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\[\\*_\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                              },
                                                              "strike": [Circular],
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                      },
                                                      "italic": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                              },
                                                              "strike": [Circular],
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\[\\*_\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                      },
                                                      "strike": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                                  },
                                                  "operator": /\\^!/,
                                                  "string": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                  },
                                                  "url": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                                  },
                                                  "variable": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                          },
                                          "punctuation": /~~\\?/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                      },
                                      "style": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-css": {
                                                "inside": {
                                                  "atrule": {
                                                    "inside": {
                                                      "keyword": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                      },
                                                      "rest": [Circular],
                                                      "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                      "selector-function-argument": {
                                                        "alias": "selector",
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                  },
                                                  "color": [
                                                    /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                    {
                                                      "inside": {
                                                        "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                        "number": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                        },
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                        "unit": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                        },
                                                      },
                                                      "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                    },
                                                  ],
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "hexcode": {
                                                    "alias": "color",
                                                    "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                  },
                                                  "important": /!important\\\\b/i,
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "operator": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                  },
                                                  "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                  "selector": {
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "unit": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                  },
                                                  "url": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "function": /\\^url/i,
                                                      "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                      "string": {
                                                        "alias": "url",
                                                        "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                      },
                                                    },
                                                    "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                  },
                                                  "variable": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-css": {
                                            "inside": {
                                              "atrule": {
                                                "inside": {
                                                  "keyword": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": {
                                                    "alias": "selector",
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": [
                                                /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                {
                                                  "inside": {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              "hexcode": {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": {
                                                "inside": {
                                                  "attribute": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "attr-name": {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": {
                                                        "inside": {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": [
                                                    {
                                                      "inside": {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "unit": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                              },
                                              "url": {
                                                "greedy": true,
                                                "inside": {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": {
                                                    "alias": "url",
                                                    "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "table": {
                                        "inside": {
                                          "table-data-rows": {
                                            "inside": {
                                              "punctuation": /\\\\\\|/,
                                              "table-data": {
                                                "inside": [Circular],
                                                "pattern": /\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\^\\(\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\\\\\|\\?\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\(\\?:\\\\\\|\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\)\\+\\\\\\|\\?\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\)\\(\\?:\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\*\\$/,
                                          },
                                          "table-header-row": {
                                            "inside": {
                                              "punctuation": /\\\\\\|/,
                                              "table-header": {
                                                "alias": "important",
                                                "inside": [Circular],
                                                "pattern": /\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+/,
                                              },
                                            },
                                            "pattern": /\\^\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\$/,
                                          },
                                          "table-line": {
                                            "inside": {
                                              "punctuation": /\\\\\\|\\|:\\?-\\{3,\\}:\\?/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\^\\(\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\\\\\|\\?\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\(\\?:\\\\\\|\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\)\\+\\\\\\|\\?\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\$/,
                                          },
                                        },
                                        "pattern": /\\^\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\\\\\|\\?\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\(\\?:\\\\\\|\\[ \\\\t\\]\\*:\\?-\\{3,\\}:\\?\\[ \\\\t\\]\\*\\)\\+\\\\\\|\\?\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?:\\\\\\|\\?\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\(\\?:\\\\\\|\\(\\?:\\\\\\\\\\.\\|\`\`\\(\\?:\\[\\^\`\\\\r\\\\n\\]\\|\`\\(\\?!\`\\)\\)\\+\`\`\\|\`\\[\\^\`\\\\r\\\\n\\]\\+\`\\|\\[\\^\\\\\\\\\\|\\\\r\\\\n\`\\]\\)\\+\\)\\+\\\\\\|\\?\\(\\?:\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\|\\(\\?!\\[\\\\s\\\\S\\]\\)\\)\\)\\*/m,
                                      },
                                      "tag": {
                                        "greedy": true,
                                        "inside": {
                                          "attr-name": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": {
                                            "inside": {
                                              "entity": [
                                                {
                                                  "alias": "named-entity",
                                                  "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                                },
                                                /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                              ],
                                              "punctuation": [
                                                {
                                                  "alias": "attr-equals",
                                                  "pattern": /\\^=/,
                                                },
                                                /"\\|'/,
                                              ],
                                            },
                                            "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "style-attr": {
                                            "inside": {
                                              "attr-name": /\\^style/i,
                                              "attr-value": {
                                                "inside": {
                                                  "punctuation": [
                                                    {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "style": {
                                                    "alias": "language-css",
                                                    "inside": {
                                                      "atrule": {
                                                        "inside": {
                                                          "keyword": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": {
                                                            "alias": "selector",
                                                            "inside": {
                                                              "attribute": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "attr-name": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": {
                                                                    "inside": {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": [
                                                                {
                                                                  "inside": {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": [
                                                        /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                        {
                                                          "inside": {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      "hexcode": {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": {
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "unit": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                      },
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": {
                                                            "alias": "url",
                                                            "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\["'\\]\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\["'\\]\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)style\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)/i,
                                          },
                                          "tag": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                      },
                                      "title": [
                                        {
                                          "alias": "important",
                                          "inside": {
                                            "punctuation": /==\\+\\$\\|--\\+\\$/,
                                          },
                                          "pattern": /\\\\S\\.\\*\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?:==\\+\\|--\\+\\)\\(\\?=\\[ \\\\t\\]\\*\\$\\)/m,
                                        },
                                        {
                                          "alias": "important",
                                          "inside": {
                                            "punctuation": /\\^#\\+\\|#\\+\\$/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\s\\*\\)#\\.\\+/m,
                                        },
                                      ],
                                      "url": {
                                        "greedy": true,
                                        "inside": {
                                          "content": {
                                            "inside": {
                                              "bold": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "italic": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "strike": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                                  },
                                                                  "punctuation": /~~\\?/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                              },
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\[\\*_\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                      },
                                                      "strike": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": [Circular],
                                                              "italic": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\[\\*_\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                              },
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                          },
                                                          "punctuation": /~~\\?/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                      },
                                                      "url": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                  },
                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                              },
                                              "italic": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "italic": [Circular],
                                                              "strike": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "italic": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                                  },
                                                                  "punctuation": /~~\\?/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                              },
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                      },
                                                      "strike": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                              },
                                                              "italic": [Circular],
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                          },
                                                          "punctuation": /~~\\?/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                                      },
                                                      "url": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                  },
                                                  "punctuation": /\\[\\*_\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                              },
                                              "strike": {
                                                "greedy": true,
                                                "inside": {
                                                  "content": {
                                                    "inside": {
                                                      "bold": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "italic": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "bold": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\[\\*_\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                              },
                                                              "strike": [Circular],
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                      },
                                                      "italic": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "content": {
                                                            "inside": {
                                                              "bold": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "content": {
                                                                    "inside": {
                                                                      "italic": [Circular],
                                                                      "strike": [Circular],
                                                                      "url": [Circular],
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\^\\.\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\.\\$\\)/,
                                                                  },
                                                                  "punctuation": /\\\\\\*\\\\\\*\\|__/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+_\\)\\+__\\\\b\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\)\\+\\\\\\*\\\\\\*\\)/,
                                                              },
                                                              "strike": [Circular],
                                                              "url": [Circular],
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\.\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\.\\$\\)/,
                                                          },
                                                          "punctuation": /\\[\\*_\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\\\b_\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|__\\(\\?:\\(\\?!_\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+__\\)\\+_\\\\b\\|\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\|\\\\\\*\\\\\\*\\(\\?:\\(\\?!\\\\\\*\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\*\\\\\\*\\)\\+\\\\\\*\\)/,
                                                      },
                                                      "url": [Circular],
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^~~\\?\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\1\\$\\)/,
                                                  },
                                                  "punctuation": /~~\\?/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:\\(~~\\?\\)\\(\\?:\\(\\?!~\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\?\\\\2\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\)/,
                                          },
                                          "operator": /\\^!/,
                                          "string": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\[ \\\\t\\]\\+\\)"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                          },
                                          "url": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\\\\\]\\\\\\(\\)\\[\\^\\\\s\\)\\]\\+/,
                                          },
                                          "variable": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\\\\\]\\[ \\\\t\\]\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\(\\?:!\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\|\\[ \\\\t\\]\\?\\\\\\[\\(\\?:\\(\\?!\\\\\\]\\)\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\n\\\\r\\]\\|\\(\\?:\\\\n\\|\\\\r\\\\n\\?\\)\\(\\?!\\\\n\\|\\\\r\\\\n\\?\\)\\)\\)\\+\\\\\\]\\)\\)/,
                                      },
                                      "url-reference": {
                                        "alias": "url",
                                        "inside": {
                                          "punctuation": /\\^\\[\\\\\\[\\\\\\]!:\\]\\|\\[<>\\]/,
                                          "string": /\\(\\?:"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\.\\|\\[\\^'\\\\\\\\\\]\\)\\*'\\|\\\\\\(\\(\\?:\\\\\\\\\\.\\|\\[\\^\\)\\\\\\\\\\]\\)\\*\\\\\\)\\)\\$/,
                                          "variable": {
                                            "lookbehind": true,
                                            "pattern": /\\^\\(!\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+/,
                                          },
                                        },
                                        "pattern": /!\\?\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]:\\[\\\\t \\]\\+\\(\\?:\\\\S\\+\\|<\\(\\?:\\\\\\\\\\.\\|\\[\\^>\\\\\\\\\\]\\)\\+>\\)\\(\\?:\\[\\\\t \\]\\+\\(\\?:"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\.\\|\\[\\^'\\\\\\\\\\]\\)\\*'\\|\\\\\\(\\(\\?:\\\\\\\\\\.\\|\\[\\^\\)\\\\\\\\\\]\\)\\*\\\\\\)\\)\\)\\?/,
                                      },
                                    },
                                    "objc": {
                                      "comment": {
                                        "greedy": true,
                                        "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      "constant": /\\\\b\\(\\?:__FILE__\\|__LINE__\\|__DATE__\\|__TIME__\\|__TIMESTAMP__\\|__func__\\|EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|stdin\\|stdout\\|stderr\\)\\\\b/,
                                      "function": /\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                      "keyword": /\\\\b\\(\\?:asm\\|typeof\\|inline\\|auto\\|break\\|case\\|char\\|const\\|continue\\|default\\|do\\|double\\|else\\|enum\\|extern\\|float\\|for\\|goto\\|if\\|int\\|long\\|register\\|return\\|short\\|signed\\|sizeof\\|static\\|struct\\|switch\\|typedef\\|union\\|unsigned\\|void\\|volatile\\|while\\|in\\|self\\|super\\)\\\\b\\|\\(\\?:@interface\\|@end\\|@implementation\\|@protocol\\|@class\\|@public\\|@protected\\|@private\\|@property\\|@try\\|@catch\\|@finally\\|@throw\\|@synthesize\\|@dynamic\\|@selector\\)\\\\b/,
                                      "macro": {
                                        "alias": "property",
                                        "greedy": true,
                                        "inside": {
                                          "comment": {
                                            "greedy": true,
                                            "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          "directive": {
                                            "alias": "keyword",
                                            "lookbehind": true,
                                            "pattern": /\\^\\(#\\\\s\\*\\)\\[a-z\\]\\+/,
                                          },
                                          "directive-hash": /\\^#/,
                                          "expression": {
                                            "inside": {
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:enum\\|struct\\)\\\\s\\+\\(\\?:__attribute__\\\\s\\*\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\)\\\\\\)\\\\s\\*\\)\\?\\)\\\\w\\+\\|\\\\b\\[a-z\\]\\\\w\\*_t\\\\b/,
                                              },
                                              "comment": {
                                                "greedy": true,
                                                "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              "function": /\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                              "keyword": /\\\\b\\(\\?:__attribute__\\|_Alignas\\|_Alignof\\|_Atomic\\|_Bool\\|_Complex\\|_Generic\\|_Imaginary\\|_Noreturn\\|_Static_assert\\|_Thread_local\\|asm\\|typeof\\|inline\\|auto\\|break\\|case\\|char\\|const\\|continue\\|default\\|do\\|double\\|else\\|enum\\|extern\\|float\\|for\\|goto\\|if\\|int\\|long\\|register\\|return\\|short\\|signed\\|sizeof\\|static\\|struct\\|switch\\|typedef\\|union\\|unsigned\\|void\\|volatile\\|while\\)\\\\b/,
                                              "number": /\\(\\?:\\\\b0x\\(\\?:\\[\\\\da-f\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                                              "operator": />>=\\?\\|<<=\\?\\|->\\|\\(\\[-\\+&\\|:\\]\\)\\\\1\\|\\[\\?:~\\]\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?/,
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                            },
                                            "pattern": /\\\\S\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "macro-name": [
                                            {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?!\\\\\\(\\)/i,
                                            },
                                            {
                                              "alias": "function",
                                              "lookbehind": true,
                                              "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?=\\\\\\(\\)/i,
                                            },
                                          ],
                                          "punctuation": /##\\|\\\\\\\\\\(\\?=\\[\\\\r\\\\n\\]\\)/,
                                          "string": [
                                            {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(#\\\\s\\*include\\\\s\\*\\)<\\[\\^>\\]\\+>/,
                                            },
                                            {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          ],
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)#\\\\s\\*\\[a-z\\]\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\/\\]\\|\\\\/\\(\\?!\\\\\\*\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*/im,
                                      },
                                      "number": /\\(\\?:\\\\b0x\\(\\?:\\[\\\\da-f\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                                      "operator": /-\\[->\\]\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?\\|<<\\?=\\?\\|>>\\?=\\?\\|==\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\[~\\^%\\?\\*\\\\/@\\]/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|@"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                                    },
                                    "objectivec": {
                                      "comment": {
                                        "greedy": true,
                                        "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      "constant": /\\\\b\\(\\?:__FILE__\\|__LINE__\\|__DATE__\\|__TIME__\\|__TIMESTAMP__\\|__func__\\|EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|stdin\\|stdout\\|stderr\\)\\\\b/,
                                      "function": /\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                      "keyword": /\\\\b\\(\\?:asm\\|typeof\\|inline\\|auto\\|break\\|case\\|char\\|const\\|continue\\|default\\|do\\|double\\|else\\|enum\\|extern\\|float\\|for\\|goto\\|if\\|int\\|long\\|register\\|return\\|short\\|signed\\|sizeof\\|static\\|struct\\|switch\\|typedef\\|union\\|unsigned\\|void\\|volatile\\|while\\|in\\|self\\|super\\)\\\\b\\|\\(\\?:@interface\\|@end\\|@implementation\\|@protocol\\|@class\\|@public\\|@protected\\|@private\\|@property\\|@try\\|@catch\\|@finally\\|@throw\\|@synthesize\\|@dynamic\\|@selector\\)\\\\b/,
                                      "macro": {
                                        "alias": "property",
                                        "greedy": true,
                                        "inside": {
                                          "comment": {
                                            "greedy": true,
                                            "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                          },
                                          "directive": {
                                            "alias": "keyword",
                                            "lookbehind": true,
                                            "pattern": /\\^\\(#\\\\s\\*\\)\\[a-z\\]\\+/,
                                          },
                                          "directive-hash": /\\^#/,
                                          "expression": {
                                            "inside": {
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:enum\\|struct\\)\\\\s\\+\\(\\?:__attribute__\\\\s\\*\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\)\\\\\\)\\\\s\\*\\)\\?\\)\\\\w\\+\\|\\\\b\\[a-z\\]\\\\w\\*_t\\\\b/,
                                              },
                                              "comment": {
                                                "greedy": true,
                                                "pattern": /\\\\/\\\\/\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\|\\(\\?!\\[\\\\r\\\\n\\]\\)\\)\\)\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              "function": /\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                              "keyword": /\\\\b\\(\\?:__attribute__\\|_Alignas\\|_Alignof\\|_Atomic\\|_Bool\\|_Complex\\|_Generic\\|_Imaginary\\|_Noreturn\\|_Static_assert\\|_Thread_local\\|asm\\|typeof\\|inline\\|auto\\|break\\|case\\|char\\|const\\|continue\\|default\\|do\\|double\\|else\\|enum\\|extern\\|float\\|for\\|goto\\|if\\|int\\|long\\|register\\|return\\|short\\|signed\\|sizeof\\|static\\|struct\\|switch\\|typedef\\|union\\|unsigned\\|void\\|volatile\\|while\\)\\\\b/,
                                              "number": /\\(\\?:\\\\b0x\\(\\?:\\[\\\\da-f\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                                              "operator": />>=\\?\\|<<=\\?\\|->\\|\\(\\[-\\+&\\|:\\]\\)\\\\1\\|\\[\\?:~\\]\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?/,
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                            },
                                            "pattern": /\\\\S\\[\\\\s\\\\S\\]\\*/,
                                          },
                                          "macro-name": [
                                            {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?!\\\\\\(\\)/i,
                                            },
                                            {
                                              "alias": "function",
                                              "lookbehind": true,
                                              "pattern": /\\(\\^#\\\\s\\*define\\\\s\\+\\)\\\\w\\+\\\\b\\(\\?=\\\\\\(\\)/i,
                                            },
                                          ],
                                          "punctuation": /##\\|\\\\\\\\\\(\\?=\\[\\\\r\\\\n\\]\\)/,
                                          "string": [
                                            {
                                              "lookbehind": true,
                                              "pattern": /\\^\\(#\\\\s\\*include\\\\s\\*\\)<\\[\\^>\\]\\+>/,
                                            },
                                            {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          ],
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)#\\\\s\\*\\[a-z\\]\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\/\\]\\|\\\\/\\(\\?!\\\\\\*\\)\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*/im,
                                      },
                                      "number": /\\(\\?:\\\\b0x\\(\\?:\\[\\\\da-f\\]\\+\\(\\?:\\\\\\.\\[\\\\da-f\\]\\*\\)\\?\\|\\\\\\.\\[\\\\da-f\\]\\+\\)\\(\\?:p\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\[ful\\]\\{0,4\\}/i,
                                      "operator": /-\\[->\\]\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?\\|<<\\?=\\?\\|>>\\?=\\?\\|==\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\[~\\^%\\?\\*\\\\/@\\]/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|@"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                                    },
                                    "ocaml": {
                                      "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                      "comment": /\\\\\\(\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\\\)/,
                                      "directive": {
                                        "alias": "important",
                                        "pattern": /\\\\B#\\\\w\\+/,
                                      },
                                      "keyword": /\\\\b\\(\\?:as\\|assert\\|begin\\|class\\|constraint\\|do\\|done\\|downto\\|else\\|end\\|exception\\|external\\|for\\|fun\\|function\\|functor\\|if\\|in\\|include\\|inherit\\|initializer\\|lazy\\|let\\|match\\|method\\|module\\|mutable\\|new\\|nonrec\\|object\\|of\\|open\\|private\\|rec\\|sig\\|struct\\|then\\|to\\|try\\|type\\|val\\|value\\|virtual\\|when\\|where\\|while\\|with\\)\\\\b/,
                                      "label": {
                                        "alias": "function",
                                        "pattern": /\\\\B~\\\\w\\+/,
                                      },
                                      "module": {
                                        "alias": "variable",
                                        "pattern": /\\\\b\\[A-Z\\]\\\\w\\+/,
                                      },
                                      "number": /\\\\b\\(\\?:0x\\[\\\\da-f\\]\\[\\\\da-f_\\]\\+\\|\\(\\?:0\\[bo\\]\\)\\?\\\\d\\[\\\\d_\\]\\*\\(\\?:\\\\\\.\\[\\\\d_\\]\\*\\)\\?\\(\\?:e\\[\\+-\\]\\?\\[\\\\d_\\]\\+\\)\\?\\)/i,
                                      "operator": /:=\\|\\[=<>@\\^\\|&\\+\\\\-\\*\\\\/\\$%!\\?~\\]\\[!\\$%&\\*\\+\\\\-\\.\\\\/:<=>\\?@\\^\\|~\\]\\*\\|\\\\b\\(\\?:and\\|asr\\|land\\|lor\\|lsl\\|lsr\\|lxor\\|mod\\|or\\)\\\\b/,
                                      "punctuation": /\\[\\(\\)\\{\\}\\\\\\[\\\\\\]\\|\\.,:;\\]\\|\\\\b_\\\\b/,
                                      "string": [
                                        {
                                          "greedy": true,
                                          "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\r\\\\n"\\]\\)\\*"/,
                                        },
                                        {
                                          "greedy": true,
                                          "pattern": /\\(\\['\`\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\d\\+\\|x\\[\\\\da-f\\]\\+\\|\\.\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\\\1/i,
                                        },
                                      ],
                                      "type-variable": {
                                        "alias": "function",
                                        "pattern": /\\\\B'\\\\w\\+/,
                                      },
                                      "variant": {
                                        "alias": "variable",
                                        "pattern": /\`\\\\w\\+/,
                                      },
                                    },
                                    "py": {
                                      "boolean": /\\\\b\\(\\?:True\\|False\\|None\\)\\\\b/,
                                      "builtin": /\\\\b\\(\\?:__import__\\|abs\\|all\\|any\\|apply\\|ascii\\|basestring\\|bin\\|bool\\|buffer\\|bytearray\\|bytes\\|callable\\|chr\\|classmethod\\|cmp\\|coerce\\|compile\\|complex\\|delattr\\|dict\\|dir\\|divmod\\|enumerate\\|eval\\|execfile\\|file\\|filter\\|float\\|format\\|frozenset\\|getattr\\|globals\\|hasattr\\|hash\\|help\\|hex\\|id\\|input\\|int\\|intern\\|isinstance\\|issubclass\\|iter\\|len\\|list\\|locals\\|long\\|map\\|max\\|memoryview\\|min\\|next\\|object\\|oct\\|open\\|ord\\|pow\\|property\\|range\\|raw_input\\|reduce\\|reload\\|repr\\|reversed\\|round\\|set\\|setattr\\|slice\\|sorted\\|staticmethod\\|str\\|sum\\|super\\|tuple\\|type\\|unichr\\|unicode\\|vars\\|xrange\\|zip\\)\\\\b/,
                                      "class-name": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bclass\\\\s\\+\\)\\\\w\\+/i,
                                      },
                                      "comment": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)#\\.\\*/,
                                      },
                                      "decorator": {
                                        "alias": [
                                          "annotation",
                                          "punctuation",
                                        ],
                                        "inside": {
                                          "punctuation": /\\\\\\./,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)@\\\\w\\+\\(\\?:\\\\\\.\\\\w\\+\\)\\*/im,
                                      },
                                      "function": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\s\\)def\\[ \\\\t\\]\\+\\)\\[a-zA-Z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/g,
                                      },
                                      "keyword": /\\\\b\\(\\?:and\\|as\\|assert\\|async\\|await\\|break\\|class\\|continue\\|def\\|del\\|elif\\|else\\|except\\|exec\\|finally\\|for\\|from\\|global\\|if\\|import\\|in\\|is\\|lambda\\|nonlocal\\|not\\|or\\|pass\\|print\\|raise\\|return\\|try\\|while\\|with\\|yield\\)\\\\b/,
                                      "number": /\\(\\?:\\\\b\\(\\?=\\\\d\\)\\|\\\\B\\(\\?=\\\\\\.\\)\\)\\(\\?:0\\[bo\\]\\)\\?\\(\\?:\\(\\?:\\\\d\\|0x\\[\\\\da-f\\]\\)\\[\\\\da-f\\]\\*\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?j\\?\\\\b/i,
                                      "operator": /\\[-\\+%=\\]=\\?\\|!=\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/\\\\/\\?=\\?\\|<\\[<=>\\]\\?\\|>\\[=>\\]\\?\\|\\[&\\|\\^~\\]/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\(\\?:\\[rub\\]\\|rb\\|br\\)\\?\\("\\|'\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/i,
                                      },
                                      "string-interpolation": {
                                        "greedy": true,
                                        "inside": {
                                          "interpolation": {
                                            "inside": {
                                              "conversion-option": {
                                                "alias": "punctuation",
                                                "pattern": /!\\[sra\\]\\(\\?=\\[:\\}\\]\\$\\)/,
                                              },
                                              "format-spec": {
                                                "lookbehind": true,
                                                "pattern": /\\(:\\)\\[\\^:\\(\\)\\{\\}\\]\\+\\(\\?=\\}\\$\\)/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\{\\]\\)\\(\\?:\\{\\{\\)\\*\\)\\{\\(\\?!\\{\\)\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?!\\{\\)\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?!\\{\\)\\(\\?:\\[\\^\\{\\}\\]\\)\\+\\}\\)\\+\\}\\)\\+\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                        "pattern": /\\(\\?:f\\|rf\\|fr\\)\\(\\?:\\("""\\|'''\\)\\[\\\\s\\\\S\\]\\*\\?\\\\1\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\)/i,
                                      },
                                      "triple-quoted-string": {
                                        "alias": "string",
                                        "greedy": true,
                                        "pattern": /\\(\\?:\\[rub\\]\\|rb\\|br\\)\\?\\("""\\|'''\\)\\[\\\\s\\\\S\\]\\*\\?\\\\1/i,
                                      },
                                    },
                                    "python": {
                                      "boolean": /\\\\b\\(\\?:True\\|False\\|None\\)\\\\b/,
                                      "builtin": /\\\\b\\(\\?:__import__\\|abs\\|all\\|any\\|apply\\|ascii\\|basestring\\|bin\\|bool\\|buffer\\|bytearray\\|bytes\\|callable\\|chr\\|classmethod\\|cmp\\|coerce\\|compile\\|complex\\|delattr\\|dict\\|dir\\|divmod\\|enumerate\\|eval\\|execfile\\|file\\|filter\\|float\\|format\\|frozenset\\|getattr\\|globals\\|hasattr\\|hash\\|help\\|hex\\|id\\|input\\|int\\|intern\\|isinstance\\|issubclass\\|iter\\|len\\|list\\|locals\\|long\\|map\\|max\\|memoryview\\|min\\|next\\|object\\|oct\\|open\\|ord\\|pow\\|property\\|range\\|raw_input\\|reduce\\|reload\\|repr\\|reversed\\|round\\|set\\|setattr\\|slice\\|sorted\\|staticmethod\\|str\\|sum\\|super\\|tuple\\|type\\|unichr\\|unicode\\|vars\\|xrange\\|zip\\)\\\\b/,
                                      "class-name": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bclass\\\\s\\+\\)\\\\w\\+/i,
                                      },
                                      "comment": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)#\\.\\*/,
                                      },
                                      "decorator": {
                                        "alias": [
                                          "annotation",
                                          "punctuation",
                                        ],
                                        "inside": {
                                          "punctuation": /\\\\\\./,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)@\\\\w\\+\\(\\?:\\\\\\.\\\\w\\+\\)\\*/im,
                                      },
                                      "function": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\s\\)def\\[ \\\\t\\]\\+\\)\\[a-zA-Z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/g,
                                      },
                                      "keyword": /\\\\b\\(\\?:and\\|as\\|assert\\|async\\|await\\|break\\|class\\|continue\\|def\\|del\\|elif\\|else\\|except\\|exec\\|finally\\|for\\|from\\|global\\|if\\|import\\|in\\|is\\|lambda\\|nonlocal\\|not\\|or\\|pass\\|print\\|raise\\|return\\|try\\|while\\|with\\|yield\\)\\\\b/,
                                      "number": /\\(\\?:\\\\b\\(\\?=\\\\d\\)\\|\\\\B\\(\\?=\\\\\\.\\)\\)\\(\\?:0\\[bo\\]\\)\\?\\(\\?:\\(\\?:\\\\d\\|0x\\[\\\\da-f\\]\\)\\[\\\\da-f\\]\\*\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?j\\?\\\\b/i,
                                      "operator": /\\[-\\+%=\\]=\\?\\|!=\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/\\\\/\\?=\\?\\|<\\[<=>\\]\\?\\|>\\[=>\\]\\?\\|\\[&\\|\\^~\\]/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\(\\?:\\[rub\\]\\|rb\\|br\\)\\?\\("\\|'\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/i,
                                      },
                                      "string-interpolation": {
                                        "greedy": true,
                                        "inside": {
                                          "interpolation": {
                                            "inside": {
                                              "conversion-option": {
                                                "alias": "punctuation",
                                                "pattern": /!\\[sra\\]\\(\\?=\\[:\\}\\]\\$\\)/,
                                              },
                                              "format-spec": {
                                                "lookbehind": true,
                                                "pattern": /\\(:\\)\\[\\^:\\(\\)\\{\\}\\]\\+\\(\\?=\\}\\$\\)/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\{\\]\\)\\(\\?:\\{\\{\\)\\*\\)\\{\\(\\?!\\{\\)\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?!\\{\\)\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?!\\{\\)\\(\\?:\\[\\^\\{\\}\\]\\)\\+\\}\\)\\+\\}\\)\\+\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                        "pattern": /\\(\\?:f\\|rf\\|fr\\)\\(\\?:\\("""\\|'''\\)\\[\\\\s\\\\S\\]\\*\\?\\\\1\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\2\\)/i,
                                      },
                                      "triple-quoted-string": {
                                        "alias": "string",
                                        "greedy": true,
                                        "pattern": /\\(\\?:\\[rub\\]\\|rb\\|br\\)\\?\\("""\\|'''\\)\\[\\\\s\\\\S\\]\\*\\?\\\\1/i,
                                      },
                                    },
                                    "reason": {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "character": {
                                        "alias": "string",
                                        "pattern": /'\\(\\?:\\\\\\\\x\\[\\\\da-f\\]\\{2\\}\\|\\\\\\\\o\\[0-3\\]\\[0-7\\]\\[0-7\\]\\|\\\\\\\\\\\\d\\{3\\}\\|\\\\\\\\\\.\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)'/,
                                      },
                                      "class-name": /\\\\b\\[A-Z\\]\\\\w\\*/,
                                      "comment": [
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "constructor": {
                                        "alias": "variable",
                                        "pattern": /\\\\b\\[A-Z\\]\\\\w\\*\\\\b\\(\\?!\\\\s\\*\\\\\\.\\)/,
                                      },
                                      "keyword": /\\\\b\\(\\?:and\\|as\\|assert\\|begin\\|class\\|constraint\\|do\\|done\\|downto\\|else\\|end\\|exception\\|external\\|for\\|fun\\|function\\|functor\\|if\\|in\\|include\\|inherit\\|initializer\\|lazy\\|let\\|method\\|module\\|mutable\\|new\\|nonrec\\|object\\|of\\|open\\|or\\|private\\|rec\\|sig\\|struct\\|switch\\|then\\|to\\|try\\|type\\|val\\|virtual\\|when\\|while\\|with\\)\\\\b/,
                                      "label": {
                                        "alias": "symbol",
                                        "pattern": /\\\\b\\[a-z\\]\\\\w\\*\\(\\?=::\\)/,
                                      },
                                      "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                      "operator": /\\\\\\.\\{3\\}\\|:\\[:=\\]\\|\\\\\\|>\\|->\\|=\\(\\?:==\\?\\|>\\)\\?\\|<=\\?\\|>=\\?\\|\\[\\|\\^\\?'#!~\`\\]\\|\\[\\+\\\\-\\*\\\\/\\]\\\\\\.\\?\\|\\\\b\\(\\?:mod\\|land\\|lor\\|lxor\\|lsl\\|lsr\\|asr\\)\\\\b/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": {
                                        "greedy": true,
                                        "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^\\\\\\\\\\\\r\\\\n"\\]\\)\\*"/,
                                      },
                                    },
                                    "rss": {
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": {
                                        "greedy": true,
                                        "inside": {
                                          "doctype-tag": /\\^DOCTYPE/,
                                          "internal-subset": {
                                            "greedy": true,
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                          },
                                          "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                          "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                          "string": {
                                            "greedy": true,
                                            "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                          },
                                        },
                                        "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                      },
                                      "entity": [
                                        {
                                          "alias": "named-entity",
                                          "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                        },
                                        /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                      ],
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "tag": {
                                        "greedy": true,
                                        "inside": {
                                          "attr-name": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": {
                                            "inside": {
                                              "entity": [
                                                {
                                                  "alias": "named-entity",
                                                  "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                                },
                                                /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                              ],
                                              "punctuation": [
                                                {
                                                  "alias": "attr-equals",
                                                  "pattern": /\\^=/,
                                                },
                                                /"\\|'/,
                                              ],
                                            },
                                            "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "tag": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                      },
                                    },
                                    "sass": {
                                      "atrule-line": {
                                        "inside": {
                                          "atrule": /\\(\\?:@\\[\\\\w-\\]\\+\\|\\[\\+=\\]\\)/m,
                                        },
                                        "pattern": /\\^\\(\\?:\\[ \\\\t\\]\\*\\)\\[@\\+=\\]\\.\\+/m,
                                      },
                                      "color": [
                                        /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                        {
                                          "inside": {
                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                            "number": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "punctuation": /\\[\\(\\),\\]/,
                                            "unit": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                            },
                                          },
                                          "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                        },
                                      ],
                                      "comment": {
                                        "lookbehind": true,
                                        "pattern": /\\^\\(\\[ \\\\t\\]\\*\\)\\\\/\\[\\\\/\\*\\]\\.\\*\\(\\?:\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\1\\[ \\\\t\\]\\.\\+\\)\\*/m,
                                      },
                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "hexcode": {
                                        "alias": "color",
                                        "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                      },
                                      "number": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                      },
                                      "operator": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                      },
                                      "property-line": {
                                        "inside": {
                                          "important": /!important\\\\b/i,
                                          "operator": [
                                            /\\[\\+\\*\\\\/%\\]\\|\\[=!\\]=\\|<=\\?\\|>=\\?\\|\\\\b\\(\\?:and\\|or\\|not\\)\\\\b/,
                                            {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\+\\)-\\(\\?=\\\\s\\)/,
                                            },
                                          ],
                                          "property": [
                                            /\\[\\^:\\\\s\\]\\+\\(\\?=\\\\s\\*:\\)/,
                                            {
                                              "lookbehind": true,
                                              "pattern": /\\(:\\)\\[\\^:\\\\s\\]\\+/,
                                            },
                                          ],
                                          "punctuation": /:/,
                                          "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                                        },
                                        "pattern": /\\^\\[ \\\\t\\]\\*\\(\\?:\\[\\^:\\\\s\\]\\+ \\*:\\.\\*\\|:\\[\\^:\\\\s\\]\\.\\*\\)/m,
                                      },
                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                      "selector": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\[ \\\\t\\]\\*\\)\\\\S\\(\\?:,\\[\\^,\\\\r\\\\n\\]\\+\\|\\[\\^,\\\\r\\\\n\\]\\*\\)\\(\\?:,\\[\\^,\\\\r\\\\n\\]\\+\\)\\*\\(\\?:,\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\1\\[ \\\\t\\]\\+\\\\S\\(\\?:,\\[\\^,\\\\r\\\\n\\]\\+\\|\\[\\^,\\\\r\\\\n\\]\\*\\)\\(\\?:,\\[\\^,\\\\r\\\\n\\]\\+\\)\\*\\)\\*/,
                                      },
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "unit": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                      },
                                      "url": {
                                        "greedy": true,
                                        "inside": {
                                          "function": /\\^url/i,
                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                          "string": {
                                            "alias": "url",
                                            "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                          },
                                        },
                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                      },
                                      "variable": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                      },
                                      "variable-line": {
                                        "inside": {
                                          "operator": [
                                            /\\[\\+\\*\\\\/%\\]\\|\\[=!\\]=\\|<=\\?\\|>=\\?\\|\\\\b\\(\\?:and\\|or\\|not\\)\\\\b/,
                                            {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\+\\)-\\(\\?=\\\\s\\)/,
                                            },
                                          ],
                                          "punctuation": /:/,
                                          "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                                        },
                                        "pattern": /\\^\\[ \\\\t\\]\\*\\\\\\$\\.\\+/m,
                                      },
                                    },
                                    "scss": {
                                      "atrule": {
                                        "inside": {
                                          "rest": [Circular],
                                          "rule": /@\\[\\\\w-\\]\\+/,
                                        },
                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\\\s\\)\\)\\*\\?\\(\\?=\\\\s\\+\\[\\{;\\]\\)/,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "color": [
                                        /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                        {
                                          "inside": {
                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                            "number": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "punctuation": /\\[\\(\\),\\]/,
                                            "unit": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                            },
                                          },
                                          "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                        },
                                      ],
                                      "comment": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                      },
                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "hexcode": {
                                        "alias": "color",
                                        "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                      },
                                      "important": /!important\\\\b/i,
                                      "keyword": [
                                        /@\\(\\?:if\\|else\\(\\?: if\\)\\?\\|forward\\|for\\|each\\|while\\|import\\|use\\|extend\\|debug\\|warn\\|mixin\\|include\\|function\\|return\\|content\\)\\\\b/i,
                                        {
                                          "lookbehind": true,
                                          "pattern": /\\( \\+\\)\\(\\?:from\\|through\\)\\(\\?= \\)/,
                                        },
                                      ],
                                      "module-modifier": {
                                        "alias": "keyword",
                                        "pattern": /\\\\b\\(\\?:as\\|with\\|show\\|hide\\)\\\\b/i,
                                      },
                                      "null": {
                                        "alias": "keyword",
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      "number": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                      },
                                      "operator": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\s\\)\\(\\?:\\[-\\+\\*\\\\/%\\]\\|\\[=!\\]=\\|<=\\?\\|>=\\?\\|and\\|or\\|not\\)\\(\\?=\\\\s\\)/,
                                      },
                                      "placeholder": {
                                        "alias": "selector",
                                        "pattern": /%\\[-\\\\w\\]\\+/,
                                      },
                                      "property": {
                                        "inside": {
                                          "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                                        },
                                        "pattern": /\\(\\?:\\[-\\\\w\\]\\|\\\\\\$\\[-\\\\w\\]\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}\\)\\+\\(\\?=\\\\s\\*:\\)/,
                                      },
                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                      "selector": {
                                        "inside": {
                                          "parent": {
                                            "alias": "important",
                                            "pattern": /&/,
                                          },
                                          "placeholder": /%\\[-\\\\w\\]\\+/,
                                          "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                                        },
                                        "pattern": /\\(\\?=\\\\S\\)\\[\\^@;\\{\\}\\(\\)\\]\\?\\(\\?:\\[\\^@;\\{\\}\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\\\s\\)\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}\\)\\+\\(\\?=\\\\s\\*\\\\\\{\\(\\?:\\\\\\}\\|\\\\s\\|\\[\\^\\}\\]\\[\\^:\\{\\}\\]\\*\\[:\\{\\]\\[\\^\\}\\]\\+\\)\\)/m,
                                      },
                                      "statement": {
                                        "alias": "keyword",
                                        "pattern": /\\\\B!\\(\\?:default\\|optional\\)\\\\b/i,
                                      },
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "unit": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                      },
                                      "url": /\\(\\?:\\[-a-z\\]\\+-\\)\\?url\\(\\?=\\\\\\(\\)/i,
                                      "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                                    },
                                    "shell": {
                                      "assign-left": {
                                        "alias": "variable",
                                        "inside": {
                                          "environment": {
                                            "alias": "constant",
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                                      },
                                      "boolean": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                      },
                                      "builtin": {
                                        "alias": "class-name",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|break\\|cd\\|continue\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|pwd\\|readonly\\|return\\|shift\\|test\\|times\\|trap\\|umask\\|unset\\|alias\\|bind\\|builtin\\|caller\\|command\\|declare\\|echo\\|enable\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|read\\|readarray\\|source\\|type\\|typeset\\|ulimit\\|unalias\\|set\\|shopt\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                      },
                                      "comment": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                                      },
                                      "environment": {
                                        "alias": "constant",
                                        "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                      },
                                      "file-descriptor": {
                                        "alias": "important",
                                        "pattern": /\\\\B&\\\\d\\\\b/,
                                      },
                                      "for-or-select": {
                                        "alias": "variable",
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                                      },
                                      "function": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|aptitude\\|apt-cache\\|apt-get\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                      },
                                      "function-name": [
                                        {
                                          "alias": "function",
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\\\w\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                                        },
                                        {
                                          "alias": "function",
                                          "pattern": /\\\\b\\\\w\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                        },
                                      ],
                                      "keyword": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:if\\|then\\|else\\|elif\\|fi\\|for\\|while\\|in\\|case\\|esac\\|function\\|select\\|do\\|done\\|until\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                      },
                                      "number": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                                      },
                                      "operator": {
                                        "inside": {
                                          "file-descriptor": {
                                            "alias": "important",
                                            "pattern": /\\^\\\\d/,
                                          },
                                        },
                                        "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|==\\?\\|!=\\?\\|=~\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\?\\[<>\\]&\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?\\|<=\\?\\|>=\\?/,
                                      },
                                      "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                                      "shebang": {
                                        "alias": "important",
                                        "pattern": /\\^#!\\\\s\\*\\\\/\\.\\*/,
                                      },
                                      "string": [
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "bash": {
                                              "alias": "punctuation",
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                            },
                                            "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\)/,
                                            "environment": {
                                              "alias": "constant",
                                              "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                            },
                                            "variable": [
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                                  "operator": /--\\?\\|-=\\|\\\\\\+\\\\\\+\\?\\|\\\\\\+=\\|!=\\?\\|~\\|\\\\\\*\\\\\\*\\?\\|\\\\\\*=\\|\\\\/=\\?\\|%=\\?\\|<<=\\?\\|>>=\\?\\|<=\\?\\|>=\\?\\|==\\?\\|&&\\?\\|&=\\|\\\\\\^=\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\|=\\|\\\\\\?\\|:/,
                                                  "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                                  "variable": [
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                                    },
                                                    /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                                  ],
                                                },
                                                "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "assign-left": {
                                                    "alias": "variable",
                                                    "inside": {
                                                      "environment": {
                                                        "alias": "constant",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                                                  },
                                                  "boolean": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "builtin": {
                                                    "alias": "class-name",
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|break\\|cd\\|continue\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|pwd\\|readonly\\|return\\|shift\\|test\\|times\\|trap\\|umask\\|unset\\|alias\\|bind\\|builtin\\|caller\\|command\\|declare\\|echo\\|enable\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|read\\|readarray\\|source\\|type\\|typeset\\|ulimit\\|unalias\\|set\\|shopt\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "comment": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                                                  },
                                                  "environment": {
                                                    "alias": "constant",
                                                    "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                  },
                                                  "file-descriptor": {
                                                    "alias": "important",
                                                    "pattern": /\\\\B&\\\\d\\\\b/,
                                                  },
                                                  "for-or-select": {
                                                    "alias": "variable",
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                                                  },
                                                  "function": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|aptitude\\|apt-cache\\|apt-get\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "function-name": [
                                                    {
                                                      "alias": "function",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\\\w\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                    {
                                                      "alias": "function",
                                                      "pattern": /\\\\b\\\\w\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                  ],
                                                  "keyword": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:if\\|then\\|else\\|elif\\|fi\\|for\\|while\\|in\\|case\\|esac\\|function\\|select\\|do\\|done\\|until\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                                                  },
                                                  "operator": {
                                                    "inside": {
                                                      "file-descriptor": {
                                                        "alias": "important",
                                                        "pattern": /\\^\\\\d/,
                                                      },
                                                    },
                                                    "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|==\\?\\|!=\\?\\|=~\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\?\\[<>\\]&\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?\\|<=\\?\\|>=\\?/,
                                                  },
                                                  "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                                                  "string": [Circular],
                                                  "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                                },
                                                "pattern": /\\\\\\$\\\\\\(\\(\\?:\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\]\\)\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                              },
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "environment": {
                                                    "alias": "constant",
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\{\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                  },
                                                  "operator": /:\\[-=\\?\\+\\]\\?\\|\\[!\\\\/\\]\\|##\\?\\|%%\\?\\|\\\\\\^\\\\\\^\\?\\|,,\\?/,
                                                  "punctuation": /\\[\\\\\\[\\\\\\]\\]/,
                                                },
                                                "pattern": /\\\\\\$\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                              },
                                              /\\\\\\$\\(\\?:\\\\w\\+\\|\\[#\\?\\*!@\\$\\]\\)/,
                                            ],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\\\w\\+\\?\\)\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\2/,
                                        },
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "bash": {
                                              "alias": "punctuation",
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\["'\\]\\)\\(\\\\w\\+\\)\\\\2\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\3/,
                                        },
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "bash": {
                                              "alias": "punctuation",
                                              "inside": [Circular],
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                            },
                                            "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\)/,
                                            "environment": {
                                              "alias": "constant",
                                              "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                            },
                                            "variable": [
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                                  "operator": /--\\?\\|-=\\|\\\\\\+\\\\\\+\\?\\|\\\\\\+=\\|!=\\?\\|~\\|\\\\\\*\\\\\\*\\?\\|\\\\\\*=\\|\\\\/=\\?\\|%=\\?\\|<<=\\?\\|>>=\\?\\|<=\\?\\|>=\\?\\|==\\?\\|&&\\?\\|&=\\|\\\\\\^=\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\|=\\|\\\\\\?\\|:/,
                                                  "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                                  "variable": [
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                                    },
                                                    /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                                  ],
                                                },
                                                "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "assign-left": {
                                                    "alias": "variable",
                                                    "inside": {
                                                      "environment": {
                                                        "alias": "constant",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                                                  },
                                                  "boolean": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "builtin": {
                                                    "alias": "class-name",
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|break\\|cd\\|continue\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|pwd\\|readonly\\|return\\|shift\\|test\\|times\\|trap\\|umask\\|unset\\|alias\\|bind\\|builtin\\|caller\\|command\\|declare\\|echo\\|enable\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|read\\|readarray\\|source\\|type\\|typeset\\|ulimit\\|unalias\\|set\\|shopt\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "comment": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                                                  },
                                                  "environment": {
                                                    "alias": "constant",
                                                    "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                  },
                                                  "file-descriptor": {
                                                    "alias": "important",
                                                    "pattern": /\\\\B&\\\\d\\\\b/,
                                                  },
                                                  "for-or-select": {
                                                    "alias": "variable",
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                                                  },
                                                  "function": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|aptitude\\|apt-cache\\|apt-get\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "function-name": [
                                                    {
                                                      "alias": "function",
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\\\w\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                    {
                                                      "alias": "function",
                                                      "pattern": /\\\\b\\\\w\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                  ],
                                                  "keyword": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:if\\|then\\|else\\|elif\\|fi\\|for\\|while\\|in\\|case\\|esac\\|function\\|select\\|do\\|done\\|until\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                                                  },
                                                  "operator": {
                                                    "inside": {
                                                      "file-descriptor": {
                                                        "alias": "important",
                                                        "pattern": /\\^\\\\d/,
                                                      },
                                                    },
                                                    "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|==\\?\\|!=\\?\\|=~\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\?\\[<>\\]&\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?\\|<=\\?\\|>=\\?/,
                                                  },
                                                  "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                                                  "string": [Circular],
                                                  "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                                },
                                                "pattern": /\\\\\\$\\\\\\(\\(\\?:\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\]\\)\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                              },
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "environment": {
                                                    "alias": "constant",
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\{\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                  },
                                                  "operator": /:\\[-=\\?\\+\\]\\?\\|\\[!\\\\/\\]\\|##\\?\\|%%\\?\\|\\\\\\^\\\\\\^\\?\\|,,\\?/,
                                                  "punctuation": /\\[\\\\\\[\\\\\\]\\]/,
                                                },
                                                "pattern": /\\\\\\$\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                              },
                                              /\\\\\\$\\(\\?:\\\\w\\+\\|\\[#\\?\\*!@\\$\\]\\)/,
                                            ],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\(\\?:\\\\\\\\\\\\\\\\\\)\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\\\\\$\\(\\?!\\\\\\(\\)\\|\`\\[\\^\`\\]\\+\`\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\`\\$\\]\\)\\*\\\\2/,
                                        },
                                      ],
                                      "variable": [
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                            "operator": /--\\?\\|-=\\|\\\\\\+\\\\\\+\\?\\|\\\\\\+=\\|!=\\?\\|~\\|\\\\\\*\\\\\\*\\?\\|\\\\\\*=\\|\\\\/=\\?\\|%=\\?\\|<<=\\?\\|>>=\\?\\|<=\\?\\|>=\\?\\|==\\?\\|&&\\?\\|&=\\|\\\\\\^=\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\|=\\|\\\\\\?\\|:/,
                                            "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                            "variable": [
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                              },
                                              /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                            ],
                                          },
                                          "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                        },
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "assign-left": {
                                              "alias": "variable",
                                              "inside": {
                                                "environment": {
                                                  "alias": "constant",
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\\\w\\+\\(\\?=\\\\\\+\\?=\\)/,
                                            },
                                            "boolean": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                            },
                                            "builtin": {
                                              "alias": "class-name",
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:\\\\\\.\\|:\\|break\\|cd\\|continue\\|eval\\|exec\\|exit\\|export\\|getopts\\|hash\\|pwd\\|readonly\\|return\\|shift\\|test\\|times\\|trap\\|umask\\|unset\\|alias\\|bind\\|builtin\\|caller\\|command\\|declare\\|echo\\|enable\\|help\\|let\\|local\\|logout\\|mapfile\\|printf\\|read\\|readarray\\|source\\|type\\|typeset\\|ulimit\\|unalias\\|set\\|shopt\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                            },
                                            "comment": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\$\\]\\)#\\.\\*/,
                                            },
                                            "environment": {
                                              "alias": "constant",
                                              "pattern": /\\\\\\$\\?\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                            },
                                            "file-descriptor": {
                                              "alias": "important",
                                              "pattern": /\\\\B&\\\\d\\\\b/,
                                            },
                                            "for-or-select": {
                                              "alias": "variable",
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\(\\?:for\\|select\\)\\\\s\\+\\)\\\\w\\+\\(\\?=\\\\s\\+in\\\\s\\)/,
                                            },
                                            "function": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:add\\|apropos\\|apt\\|aptitude\\|apt-cache\\|apt-get\\|aspell\\|automysqlbackup\\|awk\\|basename\\|bash\\|bc\\|bconsole\\|bg\\|bzip2\\|cal\\|cat\\|cfdisk\\|chgrp\\|chkconfig\\|chmod\\|chown\\|chroot\\|cksum\\|clear\\|cmp\\|column\\|comm\\|composer\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|debootstrap\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|env\\|ethtool\\|expand\\|expect\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|git\\|gparted\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|grub-mkconfig\\|gzip\\|halt\\|head\\|hg\\|history\\|host\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|ip\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logrotate\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|lynx\\|make\\|man\\|mc\\|mdadm\\|mkconfig\\|mkdir\\|mke2fs\\|mkfifo\\|mkfs\\|mkisofs\\|mknod\\|mkswap\\|mmv\\|more\\|most\\|mount\\|mtools\\|mtr\\|mutt\\|mv\\|nano\\|nc\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|op\\|open\\|parted\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|pnpm\\|popd\\|pr\\|printcap\\|printenv\\|ps\\|pushd\\|pv\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|reboot\\|remsync\\|rename\\|renice\\|rev\\|rm\\|rmdir\\|rpm\\|rsync\\|scp\\|screen\\|sdiff\\|sed\\|sendmail\\|seq\\|service\\|sftp\\|sh\\|shellcheck\\|shuf\\|shutdown\\|sleep\\|slocate\\|sort\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|swapon\\|sync\\|tac\\|tail\\|tar\\|tee\\|time\\|timeout\\|top\\|touch\\|tr\\|traceroute\\|tsort\\|tty\\|umount\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|unzip\\|update-grub\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uudecode\\|uuencode\\|v\\|vdir\\|vi\\|vim\\|virsh\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yarn\\|yes\\|zenity\\|zip\\|zsh\\|zypper\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                            },
                                            "function-name": [
                                              {
                                                "alias": "function",
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bfunction\\\\s\\+\\)\\\\w\\+\\(\\?=\\(\\?:\\\\s\\*\\\\\\(\\?:\\\\s\\*\\\\\\)\\)\\?\\\\s\\*\\\\\\{\\)/,
                                              },
                                              {
                                                "alias": "function",
                                                "pattern": /\\\\b\\\\w\\+\\(\\?=\\\\s\\*\\\\\\(\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                              },
                                            ],
                                            "keyword": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\|\\[<>\\]\\\\\\(\\)\\(\\?:if\\|then\\|else\\|elif\\|fi\\|for\\|while\\|in\\|case\\|esac\\|function\\|select\\|do\\|done\\|until\\)\\(\\?=\\$\\|\\[\\)\\\\s;\\|&\\]\\)/,
                                            },
                                            "number": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\\\s\\)\\(\\?:\\[1-9\\]\\\\d\\*\\|0\\)\\(\\?:\\[\\.,\\]\\\\d\\+\\)\\?\\\\b/,
                                            },
                                            "operator": {
                                              "inside": {
                                                "file-descriptor": {
                                                  "alias": "important",
                                                  "pattern": /\\^\\\\d/,
                                                },
                                              },
                                              "pattern": /\\\\d\\?<>\\|>\\\\\\|\\|\\\\\\+=\\|==\\?\\|!=\\?\\|=~\\|<<\\[<-\\]\\?\\|\\[&\\\\d\\]\\?>>\\|\\\\d\\?\\[<>\\]&\\?\\|&\\[>&\\]\\?\\|\\\\\\|\\[&\\|\\]\\?\\|<=\\?\\|>=\\?/,
                                            },
                                            "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\\\\\\\\\]/,
                                            "string": [
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "bash": {
                                                    "alias": "punctuation",
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                                  },
                                                  "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\)/,
                                                  "environment": {
                                                    "alias": "constant",
                                                    "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                  },
                                                  "variable": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\\\w\\+\\?\\)\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\2/,
                                              },
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "bash": {
                                                    "alias": "punctuation",
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<-\\?\\\\s\\*\\)\\(\\["'\\]\\)\\(\\\\w\\+\\)\\\\2\\\\s\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\3/,
                                              },
                                              {
                                                "greedy": true,
                                                "inside": {
                                                  "bash": {
                                                    "alias": "punctuation",
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\(\\["'\\]\\?\\)\\\\w\\+\\\\2\\)\\[ \\\\t\\]\\+\\\\S\\.\\*/,
                                                  },
                                                  "entity": /\\\\\\\\\\(\\?:\\[abceEfnrtv\\\\\\\\"\\]\\|O\\?\\[0-7\\]\\{1,3\\}\\|x\\[0-9a-fA-F\\]\\{1,2\\}\\|u\\[0-9a-fA-F\\]\\{4\\}\\|U\\[0-9a-fA-F\\]\\{8\\}\\)/,
                                                  "environment": {
                                                    "alias": "constant",
                                                    "pattern": /\\\\\\$\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                                  },
                                                  "variable": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\(\\?:\\\\\\\\\\\\\\\\\\)\\*\\)\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\\\\\$\\(\\?!\\\\\\(\\)\\|\`\\[\\^\`\\]\\+\`\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\`\\$\\]\\)\\*\\\\2/,
                                              },
                                            ],
                                            "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                          },
                                          "pattern": /\\\\\\$\\\\\\(\\(\\?:\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\]\\)\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                        },
                                        {
                                          "greedy": true,
                                          "inside": {
                                            "environment": {
                                              "alias": "constant",
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\\\{\\)\\\\b\\(\\?:BASH\\|BASHOPTS\\|BASH_ALIASES\\|BASH_ARGC\\|BASH_ARGV\\|BASH_CMDS\\|BASH_COMPLETION_COMPAT_DIR\\|BASH_LINENO\\|BASH_REMATCH\\|BASH_SOURCE\\|BASH_VERSINFO\\|BASH_VERSION\\|COLORTERM\\|COLUMNS\\|COMP_WORDBREAKS\\|DBUS_SESSION_BUS_ADDRESS\\|DEFAULTS_PATH\\|DESKTOP_SESSION\\|DIRSTACK\\|DISPLAY\\|EUID\\|GDMSESSION\\|GDM_LANG\\|GNOME_KEYRING_CONTROL\\|GNOME_KEYRING_PID\\|GPG_AGENT_INFO\\|GROUPS\\|HISTCONTROL\\|HISTFILE\\|HISTFILESIZE\\|HISTSIZE\\|HOME\\|HOSTNAME\\|HOSTTYPE\\|IFS\\|INSTANCE\\|JOB\\|LANG\\|LANGUAGE\\|LC_ADDRESS\\|LC_ALL\\|LC_IDENTIFICATION\\|LC_MEASUREMENT\\|LC_MONETARY\\|LC_NAME\\|LC_NUMERIC\\|LC_PAPER\\|LC_TELEPHONE\\|LC_TIME\\|LESSCLOSE\\|LESSOPEN\\|LINES\\|LOGNAME\\|LS_COLORS\\|MACHTYPE\\|MAILCHECK\\|MANDATORY_PATH\\|NO_AT_BRIDGE\\|OLDPWD\\|OPTERR\\|OPTIND\\|ORBIT_SOCKETDIR\\|OSTYPE\\|PAPERSIZE\\|PATH\\|PIPESTATUS\\|PPID\\|PS1\\|PS2\\|PS3\\|PS4\\|PWD\\|RANDOM\\|REPLY\\|SECONDS\\|SELINUX_INIT\\|SESSION\\|SESSIONTYPE\\|SESSION_MANAGER\\|SHELL\\|SHELLOPTS\\|SHLVL\\|SSH_AUTH_SOCK\\|TERM\\|UID\\|UPSTART_EVENTS\\|UPSTART_INSTANCE\\|UPSTART_JOB\\|UPSTART_SESSION\\|USER\\|WINDOWID\\|XAUTHORITY\\|XDG_CONFIG_DIRS\\|XDG_CURRENT_DESKTOP\\|XDG_DATA_DIRS\\|XDG_GREETER_DATA_DIR\\|XDG_MENU_PREFIX\\|XDG_RUNTIME_DIR\\|XDG_SEAT\\|XDG_SEAT_PATH\\|XDG_SESSION_DESKTOP\\|XDG_SESSION_ID\\|XDG_SESSION_PATH\\|XDG_SESSION_TYPE\\|XDG_VTNR\\|XMODIFIERS\\)\\\\b/,
                                            },
                                            "operator": /:\\[-=\\?\\+\\]\\?\\|\\[!\\\\/\\]\\|##\\?\\|%%\\?\\|\\\\\\^\\\\\\^\\?\\|,,\\?/,
                                            "punctuation": /\\[\\\\\\[\\\\\\]\\]/,
                                          },
                                          "pattern": /\\\\\\$\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                        },
                                        /\\\\\\$\\(\\?:\\\\w\\+\\|\\[#\\?\\*!@\\$\\]\\)/,
                                      ],
                                    },
                                    "sql": {
                                      "boolean": /\\\\b\\(\\?:TRUE\\|FALSE\\|NULL\\)\\\\b/i,
                                      "comment": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\(\\?:--\\|\\\\/\\\\/\\|#\\)\\.\\*\\)/,
                                      },
                                      "function": /\\\\b\\(\\?:AVG\\|COUNT\\|FIRST\\|FORMAT\\|LAST\\|LCASE\\|LEN\\|MAX\\|MID\\|MIN\\|MOD\\|NOW\\|ROUND\\|SUM\\|UCASE\\)\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                      "keyword": /\\\\b\\(\\?:ACTION\\|ADD\\|AFTER\\|ALGORITHM\\|ALL\\|ALTER\\|ANALYZE\\|ANY\\|APPLY\\|AS\\|ASC\\|AUTHORIZATION\\|AUTO_INCREMENT\\|BACKUP\\|BDB\\|BEGIN\\|BERKELEYDB\\|BIGINT\\|BINARY\\|BIT\\|BLOB\\|BOOL\\|BOOLEAN\\|BREAK\\|BROWSE\\|BTREE\\|BULK\\|BY\\|CALL\\|CASCADED\\?\\|CASE\\|CHAIN\\|CHAR\\(\\?:ACTER\\|SET\\)\\?\\|CHECK\\(\\?:POINT\\)\\?\\|CLOSE\\|CLUSTERED\\|COALESCE\\|COLLATE\\|COLUMNS\\?\\|COMMENT\\|COMMIT\\(\\?:TED\\)\\?\\|COMPUTE\\|CONNECT\\|CONSISTENT\\|CONSTRAINT\\|CONTAINS\\(\\?:TABLE\\)\\?\\|CONTINUE\\|CONVERT\\|CREATE\\|CROSS\\|CURRENT\\(\\?:_DATE\\|_TIME\\|_TIMESTAMP\\|_USER\\)\\?\\|CURSOR\\|CYCLE\\|DATA\\(\\?:BASES\\?\\)\\?\\|DATE\\(\\?:TIME\\)\\?\\|DAY\\|DBCC\\|DEALLOCATE\\|DEC\\|DECIMAL\\|DECLARE\\|DEFAULT\\|DEFINER\\|DELAYED\\|DELETE\\|DELIMITERS\\?\\|DENY\\|DESC\\|DESCRIBE\\|DETERMINISTIC\\|DISABLE\\|DISCARD\\|DISK\\|DISTINCT\\|DISTINCTROW\\|DISTRIBUTED\\|DO\\|DOUBLE\\|DROP\\|DUMMY\\|DUMP\\(\\?:FILE\\)\\?\\|DUPLICATE\\|ELSE\\(\\?:IF\\)\\?\\|ENABLE\\|ENCLOSED\\|END\\|ENGINE\\|ENUM\\|ERRLVL\\|ERRORS\\|ESCAPED\\?\\|EXCEPT\\|EXEC\\(\\?:UTE\\)\\?\\|EXISTS\\|EXIT\\|EXPLAIN\\|EXTENDED\\|FETCH\\|FIELDS\\|FILE\\|FILLFACTOR\\|FIRST\\|FIXED\\|FLOAT\\|FOLLOWING\\|FOR\\(\\?: EACH ROW\\)\\?\\|FORCE\\|FOREIGN\\|FREETEXT\\(\\?:TABLE\\)\\?\\|FROM\\|FULL\\|FUNCTION\\|GEOMETRY\\(\\?:COLLECTION\\)\\?\\|GLOBAL\\|GOTO\\|GRANT\\|GROUP\\|HANDLER\\|HASH\\|HAVING\\|HOLDLOCK\\|HOUR\\|IDENTITY\\(\\?:_INSERT\\|COL\\)\\?\\|IF\\|IGNORE\\|IMPORT\\|INDEX\\|INFILE\\|INNER\\|INNODB\\|INOUT\\|INSERT\\|INT\\|INTEGER\\|INTERSECT\\|INTERVAL\\|INTO\\|INVOKER\\|ISOLATION\\|ITERATE\\|JOIN\\|KEYS\\?\\|KILL\\|LANGUAGE\\|LAST\\|LEAVE\\|LEFT\\|LEVEL\\|LIMIT\\|LINENO\\|LINES\\|LINESTRING\\|LOAD\\|LOCAL\\|LOCK\\|LONG\\(\\?:BLOB\\|TEXT\\)\\|LOOP\\|MATCH\\(\\?:ED\\)\\?\\|MEDIUM\\(\\?:BLOB\\|INT\\|TEXT\\)\\|MERGE\\|MIDDLEINT\\|MINUTE\\|MODE\\|MODIFIES\\|MODIFY\\|MONTH\\|MULTI\\(\\?:LINESTRING\\|POINT\\|POLYGON\\)\\|NATIONAL\\|NATURAL\\|NCHAR\\|NEXT\\|NO\\|NONCLUSTERED\\|NULLIF\\|NUMERIC\\|OFF\\?\\|OFFSETS\\?\\|ON\\|OPEN\\(\\?:DATASOURCE\\|QUERY\\|ROWSET\\)\\?\\|OPTIMIZE\\|OPTION\\(\\?:ALLY\\)\\?\\|ORDER\\|OUT\\(\\?:ER\\|FILE\\)\\?\\|OVER\\|PARTIAL\\|PARTITION\\|PERCENT\\|PIVOT\\|PLAN\\|POINT\\|POLYGON\\|PRECEDING\\|PRECISION\\|PREPARE\\|PREV\\|PRIMARY\\|PRINT\\|PRIVILEGES\\|PROC\\(\\?:EDURE\\)\\?\\|PUBLIC\\|PURGE\\|QUICK\\|RAISERROR\\|READS\\?\\|REAL\\|RECONFIGURE\\|REFERENCES\\|RELEASE\\|RENAME\\|REPEAT\\(\\?:ABLE\\)\\?\\|REPLACE\\|REPLICATION\\|REQUIRE\\|RESIGNAL\\|RESTORE\\|RESTRICT\\|RETURN\\(\\?:S\\|ING\\)\\?\\|REVOKE\\|RIGHT\\|ROLLBACK\\|ROUTINE\\|ROW\\(\\?:COUNT\\|GUIDCOL\\|S\\)\\?\\|RTREE\\|RULE\\|SAVE\\(\\?:POINT\\)\\?\\|SCHEMA\\|SECOND\\|SELECT\\|SERIAL\\(\\?:IZABLE\\)\\?\\|SESSION\\(\\?:_USER\\)\\?\\|SET\\(\\?:USER\\)\\?\\|SHARE\\|SHOW\\|SHUTDOWN\\|SIMPLE\\|SMALLINT\\|SNAPSHOT\\|SOME\\|SONAME\\|SQL\\|START\\(\\?:ING\\)\\?\\|STATISTICS\\|STATUS\\|STRIPED\\|SYSTEM_USER\\|TABLES\\?\\|TABLESPACE\\|TEMP\\(\\?:ORARY\\|TABLE\\)\\?\\|TERMINATED\\|TEXT\\(\\?:SIZE\\)\\?\\|THEN\\|TIME\\(\\?:STAMP\\)\\?\\|TINY\\(\\?:BLOB\\|INT\\|TEXT\\)\\|TOP\\?\\|TRAN\\(\\?:SACTIONS\\?\\)\\?\\|TRIGGER\\|TRUNCATE\\|TSEQUAL\\|TYPES\\?\\|UNBOUNDED\\|UNCOMMITTED\\|UNDEFINED\\|UNION\\|UNIQUE\\|UNLOCK\\|UNPIVOT\\|UNSIGNED\\|UPDATE\\(\\?:TEXT\\)\\?\\|USAGE\\|USE\\|USER\\|USING\\|VALUES\\?\\|VAR\\(\\?:BINARY\\|CHAR\\|CHARACTER\\|YING\\)\\|VIEW\\|WAITFOR\\|WARNINGS\\|WHEN\\|WHERE\\|WHILE\\|WITH\\(\\?: ROLLUP\\|IN\\)\\?\\|WORK\\|WRITE\\(\\?:TEXT\\)\\?\\|YEAR\\)\\\\b/i,
                                      "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\B\\\\\\.\\\\d\\+\\\\b/i,
                                      "operator": /\\[-\\+\\*\\\\/=%\\^~\\]\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|!=\\?\\|<\\(\\?:=>\\?\\|<\\|>\\)\\?\\|>\\[>=\\]\\?\\|\\\\b\\(\\?:AND\\|BETWEEN\\|IN\\|LIKE\\|NOT\\|OR\\|IS\\|DIV\\|REGEXP\\|RLIKE\\|SOUNDS LIKE\\|XOR\\)\\\\b/i,
                                      "punctuation": /\\[;\\[\\\\\\]\\(\\)\`,\\.\\]/,
                                      "string": {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^@\\\\\\\\\\]\\)\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\]\\|\\\\2\\\\2\\)\\*\\\\2/,
                                      },
                                      "variable": [
                                        {
                                          "greedy": true,
                                          "pattern": /@\\(\\["'\`\\]\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\+\\\\1/,
                                        },
                                        /@\\[\\\\w\\.\\$\\]\\+/,
                                      ],
                                    },
                                    "ssml": {
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": {
                                        "greedy": true,
                                        "inside": {
                                          "doctype-tag": /\\^DOCTYPE/,
                                          "internal-subset": {
                                            "greedy": true,
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                          },
                                          "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                          "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                          "string": {
                                            "greedy": true,
                                            "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                          },
                                        },
                                        "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                      },
                                      "entity": [
                                        {
                                          "alias": "named-entity",
                                          "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                        },
                                        /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                      ],
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "tag": {
                                        "greedy": true,
                                        "inside": {
                                          "attr-name": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": {
                                            "inside": {
                                              "entity": [
                                                {
                                                  "alias": "named-entity",
                                                  "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                                },
                                                /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                              ],
                                              "punctuation": [
                                                {
                                                  "alias": "attr-equals",
                                                  "pattern": /\\^=/,
                                                },
                                                /"\\|'/,
                                              ],
                                            },
                                            "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "tag": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                      },
                                    },
                                    "stylus": {
                                      "atrule-declaration": {
                                        "inside": {
                                          "atrule": /\\^@\\[\\\\w-\\]\\+/,
                                          "rest": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "color": [
                                              /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                              {
                                                "inside": {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                            },
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "func": {
                                              "inside": {
                                                "function": /\\^\\[\\^\\(\\]\\+/,
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                            },
                                            "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                            "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                            "interpolation": {
                                              "alias": "variable",
                                              "inside": {
                                                "delimiter": {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^\\{\\|\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                            },
                                            "keyword": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                            },
                                            "number": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": [
                                              /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                            ],
                                            "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                            },
                                            "unit": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                            },
                                            "url": {
                                              "greedy": true,
                                              "pattern": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                            },
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)@\\.\\+/m,
                                      },
                                      "comment": {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                      },
                                      "func": {
                                        "inside": {
                                          "function": /\\^\\[\\^\\(\\]\\+/,
                                          "rest": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "color": [
                                              /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                              {
                                                "inside": {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                            },
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "func": [Circular],
                                            "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                            "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                            "interpolation": {
                                              "alias": "variable",
                                              "inside": {
                                                "delimiter": {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^\\{\\|\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                            },
                                            "keyword": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                            },
                                            "number": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": [
                                              /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                            ],
                                            "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                            },
                                            "unit": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                            },
                                            "url": {
                                              "greedy": true,
                                              "pattern": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                            },
                                          },
                                        },
                                        "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                      },
                                      "interpolation": {
                                        "alias": "variable",
                                        "inside": {
                                          "delimiter": {
                                            "alias": "punctuation",
                                            "pattern": /\\^\\{\\|\\}\\$/,
                                          },
                                          "rest": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "color": [
                                              /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                              {
                                                "inside": {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                            },
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "func": {
                                              "inside": {
                                                "function": /\\^\\[\\^\\(\\]\\+/,
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                            },
                                            "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                            "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                            "interpolation": [Circular],
                                            "keyword": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                            },
                                            "number": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": [
                                              /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                            ],
                                            "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                            },
                                            "unit": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                            },
                                            "url": {
                                              "greedy": true,
                                              "pattern": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                            },
                                          },
                                        },
                                        "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                      },
                                      "property-declaration": {
                                        "inside": {
                                          "property": {
                                            "inside": {
                                              "interpolation": {
                                                "alias": "variable",
                                                "inside": {
                                                  "delimiter": {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\{\\|\\}\\$/,
                                                  },
                                                  "rest": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "color": [
                                                      /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                      {
                                                        "inside": {
                                                          "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                          "number": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                          },
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                          "unit": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                                          },
                                                        },
                                                        "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                      },
                                                    ],
                                                    "comment": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                                    },
                                                    "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                    "func": {
                                                      "inside": {
                                                        "function": /\\^\\[\\^\\(\\]\\+/,
                                                        "rest": [Circular],
                                                      },
                                                      "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                                    },
                                                    "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                                    "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                                    "interpolation": [Circular],
                                                    "keyword": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                                    },
                                                    "number": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "operator": [
                                                      /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                                    ],
                                                    "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                                    },
                                                    "unit": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                                    },
                                                    "url": {
                                                      "greedy": true,
                                                      "pattern": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                                    },
                                                  },
                                                },
                                                "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                              },
                                            },
                                            "pattern": /\\^\\[\\^\\\\s:\\]\\+/,
                                          },
                                          "rest": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "color": [
                                              /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                              {
                                                "inside": {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                            },
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "func": {
                                              "inside": {
                                                "function": /\\^\\[\\^\\(\\]\\+/,
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                            },
                                            "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                            "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                            "interpolation": {
                                              "alias": "variable",
                                              "inside": {
                                                "delimiter": {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^\\{\\|\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                            },
                                            "keyword": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                            },
                                            "number": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": [
                                              /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                            ],
                                            "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                            },
                                            "unit": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                            },
                                            "url": {
                                              "greedy": true,
                                              "pattern": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                            },
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\{\\)\\(\\[ \\\\t\\]\\*\\)\\)\\(\\?:\\[\\\\w-\\]\\|\\\\\\{\\[\\^\\}\\\\r\\\\n\\]\\+\\\\\\}\\)\\+\\(\\?:\\\\s\\*:\\\\s\\*\\|\\[ \\\\t\\]\\+\\)\\(\\?!\\\\s\\)\\[\\^\\{\\\\r\\\\n\\]\\*\\(\\?:;\\|\\[\\^\\{\\\\r\\\\n,\\]\\(\\?=\\$\\)\\(\\?!\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\\\\\{\\|\\\\2\\[ \\\\t\\]\\+\\)\\)\\)/m,
                                      },
                                      "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:\\.\\]/,
                                      "selector": {
                                        "inside": {
                                          "comment": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                          },
                                          "interpolation": {
                                            "alias": "variable",
                                            "inside": {
                                              "delimiter": {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\{\\|\\}\\$/,
                                              },
                                              "rest": {
                                                "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                "color": [
                                                  /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                  {
                                                    "inside": {
                                                      "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                      "number": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                      "unit": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                                      },
                                                    },
                                                    "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                  },
                                                ],
                                                "comment": {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                                },
                                                "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                "func": {
                                                  "inside": {
                                                    "function": /\\^\\[\\^\\(\\]\\+/,
                                                    "rest": [Circular],
                                                  },
                                                  "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                                },
                                                "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                                "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                                "interpolation": [Circular],
                                                "keyword": {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                                },
                                                "number": {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                },
                                                "operator": [
                                                  /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                                ],
                                                "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                                "string": {
                                                  "greedy": true,
                                                  "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                                },
                                                "unit": {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                                },
                                                "url": {
                                                  "greedy": true,
                                                  "pattern": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                                },
                                              },
                                            },
                                            "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                          },
                                          "punctuation": /\\[\\{\\},\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)\\(\\?:\\(\\?=\\\\S\\)\\(\\?:\\[\\^\\{\\}\\\\r\\\\n:\\(\\)\\]\\|::\\?\\[\\\\w-\\]\\+\\(\\?:\\\\\\(\\[\\^\\)\\\\r\\\\n\\]\\*\\\\\\)\\|\\(\\?!\\[\\\\w-\\]\\)\\)\\|\\\\\\{\\[\\^\\}\\\\r\\\\n\\]\\+\\\\\\}\\)\\+\\)\\(\\?:\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\\\1\\(\\?:\\(\\?=\\\\S\\)\\(\\?:\\[\\^\\{\\}\\\\r\\\\n:\\(\\)\\]\\|::\\?\\[\\\\w-\\]\\+\\(\\?:\\\\\\(\\[\\^\\)\\\\r\\\\n\\]\\*\\\\\\)\\|\\(\\?!\\[\\\\w-\\]\\)\\)\\|\\\\\\{\\[\\^\\}\\\\r\\\\n\\]\\+\\\\\\}\\)\\+\\)\\)\\)\\*\\(\\?:,\\$\\|\\\\\\{\\|\\(\\?=\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\\\\\{\\|\\\\1\\[ \\\\t\\]\\+\\)\\)\\)/m,
                                      },
                                      "statement": {
                                        "inside": {
                                          "keyword": /\\^\\\\S\\+/,
                                          "rest": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "color": [
                                              /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                              {
                                                "inside": {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                            },
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "func": {
                                              "inside": {
                                                "function": /\\^\\[\\^\\(\\]\\+/,
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                            },
                                            "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                            "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                            "interpolation": {
                                              "alias": "variable",
                                              "inside": {
                                                "delimiter": {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^\\{\\|\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                            },
                                            "keyword": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                            },
                                            "number": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": [
                                              /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                            ],
                                            "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                            },
                                            "unit": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                            },
                                            "url": {
                                              "greedy": true,
                                              "pattern": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                            },
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\[ \\\\t\\]\\.\\+/m,
                                      },
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                      },
                                      "variable-declaration": {
                                        "inside": {
                                          "rest": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "color": [
                                              /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                              {
                                                "inside": {
                                                  "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                  "unit": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                                  },
                                                },
                                                "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                              },
                                            ],
                                            "comment": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                            },
                                            "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                            "func": {
                                              "inside": {
                                                "function": /\\^\\[\\^\\(\\]\\+/,
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                            },
                                            "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                            "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                            "interpolation": {
                                              "alias": "variable",
                                              "inside": {
                                                "delimiter": {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^\\{\\|\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                            },
                                            "keyword": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                            },
                                            "number": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                            },
                                            "operator": [
                                              /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\{2,3\\}\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                            ],
                                            "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                            },
                                            "unit": {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\)/,
                                            },
                                            "url": {
                                              "greedy": true,
                                              "pattern": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                            },
                                          },
                                          "variable": /\\^\\\\S\\+/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)\\[\\\\w\\$-\\]\\+\\\\s\\*\\.\\?=\\[ \\\\t\\]\\*\\(\\?:\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\|\\\\S\\.\\*\\|\\$\\)/m,
                                      },
                                    },
                                    "svg": {
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": {
                                        "greedy": true,
                                        "inside": {
                                          "doctype-tag": /\\^DOCTYPE/,
                                          "internal-subset": {
                                            "greedy": true,
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                          },
                                          "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                          "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                          "string": {
                                            "greedy": true,
                                            "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                          },
                                        },
                                        "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                      },
                                      "entity": [
                                        {
                                          "alias": "named-entity",
                                          "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                        },
                                        /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                      ],
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "script": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-javascript": {
                                                "inside": {
                                                  "arrow": {
                                                    "alias": "operator",
                                                    "pattern": /=>/,
                                                  },
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": [
                                                    {
                                                      "inside": {
                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                    },
                                                  ],
                                                  "comment": [
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                    },
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                    },
                                                  ],
                                                  "console": {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                  },
                                                  "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                  "dom": {
                                                    "alias": "variable",
                                                    "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                                  },
                                                  "exports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                  },
                                                  "function": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "function-variable": {
                                                    "alias": "function",
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "imports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                  },
                                                  "keyword": [
                                                    {
                                                      "alias": "module",
                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": "control-flow",
                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": [
                                                        "null",
                                                        "nil",
                                                      ],
                                                      "pattern": /\\\\bnull\\\\b/,
                                                    },
                                                    {
                                                      "alias": "nil",
                                                      "pattern": /\\\\bundefined\\\\b/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                    },
                                                  ],
                                                  "known-class-name": [
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                    },
                                                  ],
                                                  "maybe-class-name": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                  },
                                                  "method": {
                                                    "alias": [
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "method-variable": {
                                                    "alias": [
                                                      "function-variable",
                                                      "method",
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                  "parameter": [
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                  ],
                                                  "property-access": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                  },
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "regex": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                      "regex-flags": /\\[a-z\\]\\+\\$/,
                                                      "regex-source": {
                                                        "alias": "language-regex",
                                                        "inside": undefined,
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                  },
                                                  "spread": {
                                                    "alias": "operator",
                                                    "pattern": /\\\\\\.\\{3\\}/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "template-string": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "interpolation": {
                                                        "inside": {
                                                          "interpolation-punctuation": {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                          },
                                                          "rest": {
                                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                            "class-name": [
                                                              {
                                                                "inside": {
                                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                              },
                                                            ],
                                                            "comment": [
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                              },
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                              },
                                                            ],
                                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                            "function-variable": {
                                                              "alias": "function",
                                                              "inside": {
                                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                              },
                                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                            },
                                                            "keyword": [
                                                              {
                                                                "alias": "module",
                                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": "control-flow",
                                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": [
                                                                  "null",
                                                                  "nil",
                                                                ],
                                                                "pattern": /\\\\bnull\\\\b/,
                                                              },
                                                              {
                                                                "alias": "nil",
                                                                "pattern": /\\\\bundefined\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                              },
                                                            ],
                                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                            "parameter": [
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                              },
                                                            ],
                                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                            "regex": {
                                                              "greedy": true,
                                                              "inside": {
                                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                                "regex-flags": /\\[a-z\\]\\+\\$/,
                                                                "regex-source": {
                                                                  "alias": "language-regex",
                                                                  "inside": undefined,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                                },
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                            },
                                                            "string": {
                                                              "greedy": true,
                                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            },
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-javascript": {
                                            "inside": {
                                              "arrow": {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "class-name": [
                                                {
                                                  "inside": {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                },
                                              ],
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                              },
                                              "exports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": {
                                                "alias": "function",
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "imports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": [
                                                {
                                                  "alias": "module",
                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "control-flow",
                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                },
                                                {
                                                  "alias": [
                                                    "null",
                                                    "nil",
                                                  ],
                                                  "pattern": /\\\\bnull\\\\b/,
                                                },
                                                {
                                                  "alias": "nil",
                                                  "pattern": /\\\\bundefined\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "known-class-name": [
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "maybe-class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": {
                                                "alias": [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": {
                                                "alias": [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": [
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "property-access": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "inside": {
                                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                          },
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "style": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-css": {
                                                "inside": {
                                                  "atrule": {
                                                    "inside": {
                                                      "keyword": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                      },
                                                      "rest": [Circular],
                                                      "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                      "selector-function-argument": {
                                                        "alias": "selector",
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                  },
                                                  "color": [
                                                    /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                    {
                                                      "inside": {
                                                        "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                        "number": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                        },
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                        "unit": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                        },
                                                      },
                                                      "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                    },
                                                  ],
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "hexcode": {
                                                    "alias": "color",
                                                    "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                  },
                                                  "important": /!important\\\\b/i,
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "operator": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                  },
                                                  "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                  "selector": {
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "unit": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                  },
                                                  "url": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "function": /\\^url/i,
                                                      "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                      "string": {
                                                        "alias": "url",
                                                        "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                      },
                                                    },
                                                    "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                  },
                                                  "variable": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-css": {
                                            "inside": {
                                              "atrule": {
                                                "inside": {
                                                  "keyword": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": {
                                                    "alias": "selector",
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": [
                                                /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                {
                                                  "inside": {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              "hexcode": {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": {
                                                "inside": {
                                                  "attribute": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "attr-name": {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": {
                                                        "inside": {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": [
                                                    {
                                                      "inside": {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "unit": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                              },
                                              "url": {
                                                "greedy": true,
                                                "inside": {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": {
                                                    "alias": "url",
                                                    "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "tag": {
                                        "greedy": true,
                                        "inside": {
                                          "attr-name": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": {
                                            "inside": {
                                              "entity": [
                                                {
                                                  "alias": "named-entity",
                                                  "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                                },
                                                /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                              ],
                                              "punctuation": [
                                                {
                                                  "alias": "attr-equals",
                                                  "pattern": /\\^=/,
                                                },
                                                /"\\|'/,
                                              ],
                                            },
                                            "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "style-attr": {
                                            "inside": {
                                              "attr-name": /\\^style/i,
                                              "attr-value": {
                                                "inside": {
                                                  "punctuation": [
                                                    {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "style": {
                                                    "alias": "language-css",
                                                    "inside": {
                                                      "atrule": {
                                                        "inside": {
                                                          "keyword": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": {
                                                            "alias": "selector",
                                                            "inside": {
                                                              "attribute": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "attr-name": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": {
                                                                    "inside": {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": [
                                                                {
                                                                  "inside": {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": [
                                                        /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                        {
                                                          "inside": {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      "hexcode": {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": {
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "unit": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                      },
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": {
                                                            "alias": "url",
                                                            "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\["'\\]\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\["'\\]\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)style\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)/i,
                                          },
                                          "tag": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                      },
                                    },
                                    "ts": {
                                      "arrow": {
                                        "alias": "operator",
                                        "pattern": /=>/,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                      "class-name": {
                                        "greedy": true,
                                        "inside": {
                                          "arrow": {
                                            "alias": "operator",
                                            "pattern": /=>/,
                                          },
                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                          "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                          "comment": [
                                            {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                            },
                                            {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                            },
                                          ],
                                          "console": {
                                            "alias": "class-name",
                                            "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                          },
                                          "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                          "dom": {
                                            "alias": "variable",
                                            "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                          },
                                          "exports": {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                          },
                                          "function": {
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                          },
                                          "function-variable": {
                                            "alias": "function",
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                          },
                                          "imports": {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                          },
                                          "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          "known-class-name": [
                                            {
                                              "alias": "class-name",
                                              "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                            },
                                            {
                                              "alias": "class-name",
                                              "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                            },
                                          ],
                                          "maybe-class-name": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                          },
                                          "method": {
                                            "alias": [
                                              "function",
                                              "property-access",
                                            ],
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                          },
                                          "method-variable": {
                                            "alias": [
                                              "function-variable",
                                              "method",
                                              "function",
                                              "property-access",
                                            ],
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                          },
                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                          "property-access": {
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                          },
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": {
                                            "greedy": true,
                                            "inside": {
                                              "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                              "regex-flags": /\\[a-z\\]\\+\\$/,
                                              "regex-source": {
                                                "alias": "language-regex",
                                                "inside": undefined,
                                                "lookbehind": true,
                                                "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                          },
                                          "spread": {
                                            "alias": "operator",
                                            "pattern": /\\\\\\.\\{3\\}/,
                                          },
                                          "string": {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "template-string": {
                                            "greedy": true,
                                            "inside": {
                                              "interpolation": {
                                                "inside": {
                                                  "interpolation-punctuation": {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                  },
                                                  "rest": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "function-variable": {
                                                      "alias": "function",
                                                      "inside": {
                                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                      },
                                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                    },
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "parameter": [
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                    ],
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "regex": {
                                                      "greedy": true,
                                                      "inside": {
                                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                        "regex-flags": /\\[a-z\\]\\+\\$/,
                                                        "regex-source": {
                                                          "alias": "language-regex",
                                                          "inside": undefined,
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                    },
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\|type\\)\\\\s\\+\\)\\(\\?!keyof\\\\b\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\)\\?/,
                                      },
                                      "comment": [
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "console": {
                                        "alias": "class-name",
                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                      },
                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                      "dom": {
                                        "alias": "variable",
                                        "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                      },
                                      "exports": {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                      },
                                      "function": {
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      },
                                      "function-variable": {
                                        "alias": "function",
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "generic-function": {
                                        "greedy": true,
                                        "inside": {
                                          "function": /\\^#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                          "generic": {
                                            "alias": "class-name",
                                            "inside": {
                                              "arrow": {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                              },
                                              "exports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": {
                                                "alias": "function",
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "imports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              "known-class-name": [
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "maybe-class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": {
                                                "alias": [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": {
                                                "alias": [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "property-access": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "inside": {
                                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                          },
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "pattern": /<\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\(\\?=\\\\s\\*\\\\\\(\\)/,
                                      },
                                      "imports": {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                      },
                                      "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      "known-class-name": [
                                        {
                                          "alias": "class-name",
                                          "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                        },
                                        {
                                          "alias": "class-name",
                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                        },
                                      ],
                                      "maybe-class-name": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                      },
                                      "method": {
                                        "alias": [
                                          "function",
                                          "property-access",
                                        ],
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      },
                                      "method-variable": {
                                        "alias": [
                                          "function-variable",
                                          "method",
                                          "function",
                                          "property-access",
                                        ],
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                      "property-access": {
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                      },
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": {
                                        "greedy": true,
                                        "inside": {
                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                          "regex-flags": /\\[a-z\\]\\+\\$/,
                                          "regex-source": {
                                            "alias": "language-regex",
                                            "inside": undefined,
                                            "lookbehind": true,
                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                      },
                                      "spread": {
                                        "alias": "operator",
                                        "pattern": /\\\\\\.\\{3\\}/,
                                      },
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "template-string": {
                                        "greedy": true,
                                        "inside": {
                                          "interpolation": {
                                            "inside": {
                                              "interpolation-punctuation": {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                              },
                                              "rest": {
                                                "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                "class-name": [
                                                  {
                                                    "inside": {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                  },
                                                ],
                                                "comment": [
                                                  {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                "function-variable": {
                                                  "alias": "function",
                                                  "inside": {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "keyword": [
                                                  {
                                                    "alias": "module",
                                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                  },
                                                  {
                                                    "alias": "control-flow",
                                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                  },
                                                  {
                                                    "alias": [
                                                      "null",
                                                      "nil",
                                                    ],
                                                    "pattern": /\\\\bnull\\\\b/,
                                                  },
                                                  {
                                                    "alias": "nil",
                                                    "pattern": /\\\\bundefined\\\\b/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": [
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": {
                                                  "greedy": true,
                                                  "inside": {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\[a-z\\]\\+\\$/,
                                                    "regex-source": {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "string": {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    },
                                    "tsx": {
                                      "arrow": {
                                        "alias": "operator",
                                        "pattern": /=>/,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "class-name": {
                                        "greedy": true,
                                        "inside": {
                                          "arrow": {
                                            "alias": "operator",
                                            "pattern": /=>/,
                                          },
                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                          "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                          "comment": [
                                            {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                            },
                                            {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                            },
                                          ],
                                          "console": {
                                            "alias": "class-name",
                                            "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                          },
                                          "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                          "dom": {
                                            "alias": "variable",
                                            "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                          },
                                          "exports": {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                          },
                                          "function": {
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                          },
                                          "function-variable": {
                                            "alias": "function",
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                          },
                                          "imports": {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                          },
                                          "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          "known-class-name": [
                                            {
                                              "alias": "class-name",
                                              "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                            },
                                            {
                                              "alias": "class-name",
                                              "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                            },
                                          ],
                                          "maybe-class-name": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                          },
                                          "method": {
                                            "alias": [
                                              "function",
                                              "property-access",
                                            ],
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                          },
                                          "method-variable": {
                                            "alias": [
                                              "function-variable",
                                              "method",
                                              "function",
                                              "property-access",
                                            ],
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                          },
                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                          "property-access": {
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                          },
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": {
                                            "greedy": true,
                                            "inside": {
                                              "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                              "regex-flags": /\\[a-z\\]\\+\\$/,
                                              "regex-source": {
                                                "alias": "language-regex",
                                                "inside": undefined,
                                                "lookbehind": true,
                                                "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                          },
                                          "spread": {
                                            "alias": "operator",
                                            "pattern": /\\\\\\.\\{3\\}/,
                                          },
                                          "string": {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "template-string": {
                                            "greedy": true,
                                            "inside": {
                                              "interpolation": {
                                                "inside": {
                                                  "interpolation-punctuation": {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                  },
                                                  "rest": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "function-variable": {
                                                      "alias": "function",
                                                      "inside": {
                                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                      },
                                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                    },
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "parameter": [
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                    ],
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "regex": {
                                                      "greedy": true,
                                                      "inside": {
                                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                        "regex-flags": /\\[a-z\\]\\+\\$/,
                                                        "regex-source": {
                                                          "alias": "language-regex",
                                                          "inside": undefined,
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                    },
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\|type\\)\\\\s\\+\\)\\(\\?!keyof\\\\b\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\)\\?/,
                                      },
                                      "comment": [
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "console": {
                                        "alias": "class-name",
                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                      },
                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                      "doctype": {
                                        "greedy": true,
                                        "inside": {
                                          "doctype-tag": /\\^DOCTYPE/,
                                          "internal-subset": {
                                            "greedy": true,
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                          },
                                          "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                          "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                          "string": {
                                            "greedy": true,
                                            "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                          },
                                        },
                                        "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                      },
                                      "dom": {
                                        "alias": "variable",
                                        "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                      },
                                      "entity": [
                                        {
                                          "alias": "named-entity",
                                          "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                        },
                                        /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                      ],
                                      "exports": {
                                        "inside": {
                                          "arrow": {
                                            "alias": "operator",
                                            "pattern": /=>/,
                                          },
                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                          "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                          "class-name": {
                                            "greedy": true,
                                            "inside": {
                                              "arrow": {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                              },
                                              "exports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": {
                                                "alias": "function",
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "imports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              "known-class-name": [
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "maybe-class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": {
                                                "alias": [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": {
                                                "alias": [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "property-access": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "inside": {
                                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                          },
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\|type\\)\\\\s\\+\\)\\(\\?!keyof\\\\b\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\)\\?/,
                                          },
                                          "comment": [
                                            {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                            },
                                            {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                            },
                                          ],
                                          "console": {
                                            "alias": "class-name",
                                            "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                          },
                                          "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                          "dom": {
                                            "alias": "variable",
                                            "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                          },
                                          "exports": [Circular],
                                          "function": {
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                          },
                                          "function-variable": {
                                            "alias": "function",
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                          },
                                          "generic-function": {
                                            "greedy": true,
                                            "inside": {
                                              "function": /\\^#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              "generic": {
                                                "alias": "class-name",
                                                "inside": {
                                                  "arrow": {
                                                    "alias": "operator",
                                                    "pattern": /=>/,
                                                  },
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                                  "comment": [
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                    },
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                    },
                                                  ],
                                                  "console": {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                  },
                                                  "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                  "dom": {
                                                    "alias": "variable",
                                                    "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                                  },
                                                  "exports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                  },
                                                  "function": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "function-variable": {
                                                    "alias": "function",
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "imports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                  },
                                                  "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  "known-class-name": [
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                    },
                                                  ],
                                                  "maybe-class-name": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                  },
                                                  "method": {
                                                    "alias": [
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "method-variable": {
                                                    "alias": [
                                                      "function-variable",
                                                      "method",
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                  "property-access": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                  },
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "regex": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                      "regex-flags": /\\[a-z\\]\\+\\$/,
                                                      "regex-source": {
                                                        "alias": "language-regex",
                                                        "inside": undefined,
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                  },
                                                  "spread": {
                                                    "alias": "operator",
                                                    "pattern": /\\\\\\.\\{3\\}/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "template-string": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "interpolation": {
                                                        "inside": {
                                                          "interpolation-punctuation": {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                          },
                                                          "rest": {
                                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                            "class-name": [
                                                              {
                                                                "inside": {
                                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                              },
                                                            ],
                                                            "comment": [
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                              },
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                              },
                                                            ],
                                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                            "function-variable": {
                                                              "alias": "function",
                                                              "inside": {
                                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                              },
                                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                            },
                                                            "keyword": [
                                                              {
                                                                "alias": "module",
                                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": "control-flow",
                                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": [
                                                                  "null",
                                                                  "nil",
                                                                ],
                                                                "pattern": /\\\\bnull\\\\b/,
                                                              },
                                                              {
                                                                "alias": "nil",
                                                                "pattern": /\\\\bundefined\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                              },
                                                            ],
                                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                            "parameter": [
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                              },
                                                            ],
                                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                            "regex": {
                                                              "greedy": true,
                                                              "inside": {
                                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                                "regex-flags": /\\[a-z\\]\\+\\$/,
                                                                "regex-source": {
                                                                  "alias": "language-regex",
                                                                  "inside": undefined,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                                },
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                            },
                                                            "string": {
                                                              "greedy": true,
                                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            },
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                },
                                                "pattern": /<\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\(\\?=\\\\s\\*\\\\\\(\\)/,
                                          },
                                          "imports": {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                          },
                                          "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          "known-class-name": [
                                            {
                                              "alias": "class-name",
                                              "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                            },
                                            {
                                              "alias": "class-name",
                                              "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                            },
                                          ],
                                          "maybe-class-name": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                          },
                                          "method": {
                                            "alias": [
                                              "function",
                                              "property-access",
                                            ],
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                          },
                                          "method-variable": {
                                            "alias": [
                                              "function-variable",
                                              "method",
                                              "function",
                                              "property-access",
                                            ],
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                          },
                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                          "property-access": {
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                          },
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": {
                                            "greedy": true,
                                            "inside": {
                                              "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                              "regex-flags": /\\[a-z\\]\\+\\$/,
                                              "regex-source": {
                                                "alias": "language-regex",
                                                "inside": undefined,
                                                "lookbehind": true,
                                                "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                          },
                                          "spread": {
                                            "alias": "operator",
                                            "pattern": /\\\\\\.\\{3\\}/,
                                          },
                                          "string": {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "template-string": {
                                            "greedy": true,
                                            "inside": {
                                              "interpolation": {
                                                "inside": {
                                                  "interpolation-punctuation": {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                  },
                                                  "rest": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "function-variable": {
                                                      "alias": "function",
                                                      "inside": {
                                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                      },
                                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                    },
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "parameter": [
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                    ],
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "regex": {
                                                      "greedy": true,
                                                      "inside": {
                                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                        "regex-flags": /\\[a-z\\]\\+\\$/,
                                                        "regex-source": {
                                                          "alias": "language-regex",
                                                          "inside": undefined,
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                    },
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                      },
                                      "function": {
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      },
                                      "function-variable": {
                                        "alias": "function",
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "generic-function": {
                                        "greedy": true,
                                        "inside": {
                                          "function": /\\^#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                          "generic": {
                                            "alias": "class-name",
                                            "inside": {
                                              "arrow": {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                              },
                                              "exports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": {
                                                "alias": "function",
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "imports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              "known-class-name": [
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "maybe-class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": {
                                                "alias": [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": {
                                                "alias": [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "property-access": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "inside": {
                                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                          },
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "pattern": /<\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\(\\?=\\\\s\\*\\\\\\(\\)/,
                                      },
                                      "imports": {
                                        "inside": {
                                          "arrow": {
                                            "alias": "operator",
                                            "pattern": /=>/,
                                          },
                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                          "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                          "class-name": {
                                            "greedy": true,
                                            "inside": {
                                              "arrow": {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                              },
                                              "exports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": {
                                                "alias": "function",
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "imports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              "known-class-name": [
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "maybe-class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": {
                                                "alias": [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": {
                                                "alias": [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "property-access": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "inside": {
                                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                          },
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\|type\\)\\\\s\\+\\)\\(\\?!keyof\\\\b\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\)\\?/,
                                          },
                                          "comment": [
                                            {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                            },
                                            {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                            },
                                          ],
                                          "console": {
                                            "alias": "class-name",
                                            "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                          },
                                          "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                          "dom": {
                                            "alias": "variable",
                                            "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                          },
                                          "exports": {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                          },
                                          "function": {
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                          },
                                          "function-variable": {
                                            "alias": "function",
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                          },
                                          "generic-function": {
                                            "greedy": true,
                                            "inside": {
                                              "function": /\\^#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              "generic": {
                                                "alias": "class-name",
                                                "inside": {
                                                  "arrow": {
                                                    "alias": "operator",
                                                    "pattern": /=>/,
                                                  },
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                                  "comment": [
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                    },
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                    },
                                                  ],
                                                  "console": {
                                                    "alias": "class-name",
                                                    "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                                  },
                                                  "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                  "dom": {
                                                    "alias": "variable",
                                                    "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                                  },
                                                  "exports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                                  },
                                                  "function": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "function-variable": {
                                                    "alias": "function",
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "imports": {
                                                    "inside": [Circular],
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                                  },
                                                  "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  "known-class-name": [
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                    },
                                                    {
                                                      "alias": "class-name",
                                                      "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                    },
                                                  ],
                                                  "maybe-class-name": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                                  },
                                                  "method": {
                                                    "alias": [
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  },
                                                  "method-variable": {
                                                    "alias": [
                                                      "function-variable",
                                                      "method",
                                                      "function",
                                                      "property-access",
                                                    ],
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                  "property-access": {
                                                    "inside": {
                                                      "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                                  },
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "regex": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                      "regex-flags": /\\[a-z\\]\\+\\$/,
                                                      "regex-source": {
                                                        "alias": "language-regex",
                                                        "inside": undefined,
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                  },
                                                  "spread": {
                                                    "alias": "operator",
                                                    "pattern": /\\\\\\.\\{3\\}/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "template-string": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "interpolation": {
                                                        "inside": {
                                                          "interpolation-punctuation": {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                          },
                                                          "rest": {
                                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                            "class-name": [
                                                              {
                                                                "inside": {
                                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                              },
                                                            ],
                                                            "comment": [
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                              },
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                              },
                                                            ],
                                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                            "function-variable": {
                                                              "alias": "function",
                                                              "inside": {
                                                                "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                              },
                                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                            },
                                                            "keyword": [
                                                              {
                                                                "alias": "module",
                                                                "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": "control-flow",
                                                                "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                              },
                                                              {
                                                                "alias": [
                                                                  "null",
                                                                  "nil",
                                                                ],
                                                                "pattern": /\\\\bnull\\\\b/,
                                                              },
                                                              {
                                                                "alias": "nil",
                                                                "pattern": /\\\\bundefined\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                              },
                                                            ],
                                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                            "parameter": [
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "alias": "module",
                                                                      "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "control-flow",
                                                                      "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": [
                                                                        "null",
                                                                        "nil",
                                                                      ],
                                                                      "pattern": /\\\\bnull\\\\b/,
                                                                    },
                                                                    {
                                                                      "alias": "nil",
                                                                      "pattern": /\\\\bundefined\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                              },
                                                            ],
                                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                            "regex": {
                                                              "greedy": true,
                                                              "inside": {
                                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                                "regex-flags": /\\[a-z\\]\\+\\$/,
                                                                "regex-source": {
                                                                  "alias": "language-regex",
                                                                  "inside": undefined,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                                },
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                            },
                                                            "string": {
                                                              "greedy": true,
                                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            },
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                },
                                                "pattern": /<\\[\\\\s\\\\S\\]\\+/,
                                              },
                                            },
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\(\\?=\\\\s\\*\\\\\\(\\)/,
                                          },
                                          "imports": [Circular],
                                          "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          "known-class-name": [
                                            {
                                              "alias": "class-name",
                                              "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                            },
                                            {
                                              "alias": "class-name",
                                              "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                            },
                                          ],
                                          "maybe-class-name": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                          },
                                          "method": {
                                            "alias": [
                                              "function",
                                              "property-access",
                                            ],
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                          },
                                          "method-variable": {
                                            "alias": [
                                              "function-variable",
                                              "method",
                                              "function",
                                              "property-access",
                                            ],
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                          },
                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                          "property-access": {
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                          },
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": {
                                            "greedy": true,
                                            "inside": {
                                              "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                              "regex-flags": /\\[a-z\\]\\+\\$/,
                                              "regex-source": {
                                                "alias": "language-regex",
                                                "inside": undefined,
                                                "lookbehind": true,
                                                "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                          },
                                          "spread": {
                                            "alias": "operator",
                                            "pattern": /\\\\\\.\\{3\\}/,
                                          },
                                          "string": {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "template-string": {
                                            "greedy": true,
                                            "inside": {
                                              "interpolation": {
                                                "inside": {
                                                  "interpolation-punctuation": {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                  },
                                                  "rest": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "function-variable": {
                                                      "alias": "function",
                                                      "inside": {
                                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                      },
                                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                    },
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "parameter": [
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                    ],
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "regex": {
                                                      "greedy": true,
                                                      "inside": {
                                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                        "regex-flags": /\\[a-z\\]\\+\\$/,
                                                        "regex-source": {
                                                          "alias": "language-regex",
                                                          "inside": undefined,
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                    },
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                      },
                                      "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      "known-class-name": [
                                        {
                                          "alias": "class-name",
                                          "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                        },
                                        {
                                          "alias": "class-name",
                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                        },
                                      ],
                                      "maybe-class-name": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                      },
                                      "method": {
                                        "alias": [
                                          "function",
                                          "property-access",
                                        ],
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      },
                                      "method-variable": {
                                        "alias": [
                                          "function-variable",
                                          "method",
                                          "function",
                                          "property-access",
                                        ],
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                      "parameter": [
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                        },
                                        {
                                          "inside": {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": [
                                              {
                                                "inside": {
                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                              },
                                            ],
                                            "comment": [
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                            "keyword": [
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                              },
                                              {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              },
                                            ],
                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "string": {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                        },
                                      ],
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "property-access": {
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                      },
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": {
                                        "greedy": true,
                                        "inside": {
                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                          "regex-flags": /\\[a-z\\]\\+\\$/,
                                          "regex-source": {
                                            "alias": "language-regex",
                                            "inside": undefined,
                                            "lookbehind": true,
                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                      },
                                      "script": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-javascript": {
                                                "inside": {
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": [
                                                    {
                                                      "inside": {
                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                    },
                                                  ],
                                                  "comment": [
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                    },
                                                    {
                                                      "greedy": true,
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                    },
                                                  ],
                                                  "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                  "function-variable": {
                                                    "alias": "function",
                                                    "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                  },
                                                  "keyword": [
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                    },
                                                  ],
                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                  "parameter": [
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                    },
                                                    {
                                                      "inside": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "keyword": [
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                    },
                                                  ],
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "regex": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                      "regex-flags": /\\[a-z\\]\\+\\$/,
                                                      "regex-source": {
                                                        "alias": "language-regex",
                                                        "inside": undefined,
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "template-string": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "interpolation": {
                                                        "inside": {
                                                          "interpolation-punctuation": {
                                                            "alias": "punctuation",
                                                            "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                          },
                                                          "rest": {
                                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                            "class-name": [
                                                              {
                                                                "inside": {
                                                                  "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                              },
                                                            ],
                                                            "comment": [
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                              },
                                                              {
                                                                "greedy": true,
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                              },
                                                            ],
                                                            "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                            "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                            "function-variable": {
                                                              "alias": "function",
                                                              "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                            },
                                                            "keyword": [
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                              },
                                                              {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                              },
                                                            ],
                                                            "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                            "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                            "parameter": [
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                              },
                                                              {
                                                                "inside": {
                                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                                  "class-name": [
                                                                    {
                                                                      "inside": {
                                                                        "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                      },
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                    },
                                                                  ],
                                                                  "comment": [
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                    },
                                                                    {
                                                                      "greedy": true,
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                    },
                                                                  ],
                                                                  "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                                  "keyword": [
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                    },
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                    },
                                                                  ],
                                                                  "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                                  "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                                  "string": {
                                                                    "greedy": true,
                                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                  },
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                              },
                                                            ],
                                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                            "regex": {
                                                              "greedy": true,
                                                              "inside": {
                                                                "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                                "regex-flags": /\\[a-z\\]\\+\\$/,
                                                                "regex-source": {
                                                                  "alias": "language-regex",
                                                                  "inside": undefined,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                                },
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                            },
                                                            "string": {
                                                              "greedy": true,
                                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            },
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                      },
                                                      "string": /\\[\\\\s\\\\S\\]\\+/,
                                                      "template-punctuation": {
                                                        "alias": "string",
                                                        "pattern": /\\^\`\\|\`\\$/,
                                                      },
                                                    },
                                                    "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-javascript": {
                                            "inside": {
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "class-name": [
                                                {
                                                  "inside": {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                },
                                              ],
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              "function-variable": {
                                                "alias": "function",
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "keyword": [
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                },
                                                {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                },
                                              ],
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "parameter": [
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                },
                                                {
                                                  "inside": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "keyword": [
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                },
                                              ],
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "spread": {
                                        "alias": "operator",
                                        "pattern": /\\\\\\.\\{3\\}/,
                                      },
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "style": {
                                        "greedy": true,
                                        "inside": {
                                          "included-cdata": {
                                            "inside": {
                                              "cdata": /\\^<!\\\\\\[CDATA\\\\\\[\\|\\\\\\]\\\\\\]>\\$/i,
                                              "language-css": {
                                                "inside": {
                                                  "atrule": {
                                                    "inside": {
                                                      "keyword": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                      },
                                                      "rest": [Circular],
                                                      "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                      "selector-function-argument": {
                                                        "alias": "selector",
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                  },
                                                  "color": [
                                                    /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                    {
                                                      "inside": {
                                                        "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                        "number": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                        },
                                                        "punctuation": /\\[\\(\\),\\]/,
                                                        "unit": {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                        },
                                                      },
                                                      "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                    },
                                                  ],
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "hexcode": {
                                                    "alias": "color",
                                                    "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                  },
                                                  "important": /!important\\\\b/i,
                                                  "number": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                  },
                                                  "operator": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                  },
                                                  "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                  "selector": {
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                  "string": {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "unit": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                  },
                                                  "url": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "function": /\\^url/i,
                                                      "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                      "string": {
                                                        "alias": "url",
                                                        "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                      },
                                                    },
                                                    "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                  },
                                                  "variable": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\^<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\?\\(\\?=\\\\\\]\\\\\\]>\\$\\)/i,
                                              },
                                            },
                                            "pattern": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\]\\\\\\]>/i,
                                          },
                                          "language-css": {
                                            "inside": {
                                              "atrule": {
                                                "inside": {
                                                  "keyword": {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                  },
                                                  "rest": [Circular],
                                                  "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                  "selector-function-argument": {
                                                    "alias": "selector",
                                                    "inside": {
                                                      "attribute": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "attr-name": {
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                          },
                                                          "attr-value": [
                                                            /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                            },
                                                          ],
                                                          "case-sensitivity": {
                                                            "alias": "keyword",
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                          },
                                                          "namespace": {
                                                            "inside": {
                                                              "punctuation": /\\\\\\|\\$/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                          },
                                                          "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                          "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                        },
                                                        "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                      },
                                                      "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                      "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                      "id": /#\\[-\\\\w\\]\\+/,
                                                      "n-th": [
                                                        {
                                                          "inside": {
                                                            "number": /\\[\\\\dn\\]\\+/,
                                                            "operator": /\\[\\+-\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                        },
                                                      ],
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                      "punctuation": /\\[\\(\\),\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                },
                                                "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                              },
                                              "color": [
                                                /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                {
                                                  "inside": {
                                                    "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                    "number": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                    },
                                                    "punctuation": /\\[\\(\\),\\]/,
                                                    "unit": {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                    },
                                                  },
                                                  "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                },
                                              ],
                                              "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                              "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                              "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                              "hexcode": {
                                                "alias": "color",
                                                "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                              },
                                              "important": /!important\\\\b/i,
                                              "number": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                              },
                                              "operator": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                              },
                                              "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                              "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                              "selector": {
                                                "inside": {
                                                  "attribute": {
                                                    "greedy": true,
                                                    "inside": {
                                                      "attr-name": {
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                      },
                                                      "attr-value": [
                                                        /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                        },
                                                      ],
                                                      "case-sensitivity": {
                                                        "alias": "keyword",
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                      },
                                                      "namespace": {
                                                        "inside": {
                                                          "punctuation": /\\\\\\|\\$/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                      },
                                                      "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                      "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                    },
                                                    "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                  },
                                                  "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                  "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                  "id": /#\\[-\\\\w\\]\\+/,
                                                  "n-th": [
                                                    {
                                                      "inside": {
                                                        "number": /\\[\\\\dn\\]\\+/,
                                                        "operator": /\\[\\+-\\]/,
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                    },
                                                    {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                    },
                                                  ],
                                                  "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                  "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  "punctuation": /\\[\\(\\),\\]/,
                                                },
                                                "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "unit": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                              },
                                              "url": {
                                                "greedy": true,
                                                "inside": {
                                                  "function": /\\^url/i,
                                                  "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                  "string": {
                                                    "alias": "url",
                                                    "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                  },
                                                },
                                                "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                              },
                                              "variable": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                              },
                                            },
                                            "pattern": /\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\^>\\]\\*>\\)\\(\\?:<!\\\\\\[CDATA\\\\\\[\\(\\?:\\[\\^\\\\\\]\\]\\|\\\\\\]\\(\\?!\\\\\\]>\\)\\)\\*\\\\\\]\\\\\\]>\\|\\(\\?!<!\\\\\\[CDATA\\\\\\[\\)\\[\\\\s\\\\S\\]\\)\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "tag": {
                                        "greedy": true,
                                        "inside": {
                                          "attr-name": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": {
                                            "inside": {
                                              "entity": [
                                                {
                                                  "alias": "named-entity",
                                                  "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                                },
                                                /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                              ],
                                              "punctuation": [
                                                {
                                                  "alias": "attr-equals",
                                                  "pattern": /\\^=/,
                                                },
                                                /"\\|'/,
                                              ],
                                            },
                                            "pattern": /=\\(\\?!\\\\\\{\\)\\(\\?:"\\(\\?:\\\\\\\\\\[\\^\\]\\|\\[\\^\\\\\\\\"\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\[\\^\\]\\|\\[\\^\\\\\\\\'\\]\\)\\*'\\|\\[\\^\\\\s'">\\]\\+\\)/i,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "script": {
                                            "alias": "language-javascript",
                                            "inside": {
                                              "rest": [Circular],
                                              "script-punctuation": {
                                                "alias": "punctuation",
                                                "pattern": /\\^=\\(\\?=\\{\\)/,
                                              },
                                            },
                                            "pattern": /=\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\+\\\\\\}\\)/i,
                                          },
                                          "spread": {
                                            "inside": {
                                              "attr-value": /\\\\w\\+/,
                                              "punctuation": /\\\\\\.\\{3\\}\\|\\[\\{\\}\\.\\]/,
                                            },
                                            "pattern": /\\\\\\{\\\\s\\*\\\\\\.\\{3\\}\\\\s\\*\\[a-z_\\$\\]\\[\\\\w\\$\\]\\*\\(\\?:\\\\\\.\\[a-z_\\$\\]\\[\\\\w\\$\\]\\*\\)\\*\\\\s\\*\\\\\\}/,
                                          },
                                          "style-attr": {
                                            "inside": {
                                              "attr-name": /\\^style/i,
                                              "attr-value": {
                                                "inside": {
                                                  "punctuation": [
                                                    {
                                                      "alias": "attr-equals",
                                                      "pattern": /\\^=/,
                                                    },
                                                    /"\\|'/,
                                                  ],
                                                  "style": {
                                                    "alias": "language-css",
                                                    "inside": {
                                                      "atrule": {
                                                        "inside": {
                                                          "keyword": {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\w-\\]\\)\\(\\?:and\\|not\\|only\\|or\\)\\(\\?!\\[\\\\w-\\]\\)/,
                                                          },
                                                          "rest": [Circular],
                                                          "rule": /\\^@\\[\\\\w-\\]\\+/,
                                                          "selector-function-argument": {
                                                            "alias": "selector",
                                                            "inside": {
                                                              "attribute": {
                                                                "greedy": true,
                                                                "inside": {
                                                                  "attr-name": {
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                                  },
                                                                  "attr-value": [
                                                                    /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                    {
                                                                      "lookbehind": true,
                                                                      "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                    },
                                                                  ],
                                                                  "case-sensitivity": {
                                                                    "alias": "keyword",
                                                                    "lookbehind": true,
                                                                    "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                                  },
                                                                  "namespace": {
                                                                    "inside": {
                                                                      "punctuation": /\\\\\\|\\$/,
                                                                    },
                                                                    "lookbehind": true,
                                                                    "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                                  },
                                                                  "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                                  "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                                },
                                                                "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                              },
                                                              "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                              "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                              "id": /#\\[-\\\\w\\]\\+/,
                                                              "n-th": [
                                                                {
                                                                  "inside": {
                                                                    "number": /\\[\\\\dn\\]\\+/,
                                                                    "operator": /\\[\\+-\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                                },
                                                              ],
                                                              "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                              "punctuation": /\\[\\(\\),\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\bselector\\\\s\\*\\\\\\(\\\\s\\*\\(\\?!\\[\\\\s\\)\\]\\)\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                        },
                                                        "pattern": /@\\[\\\\w-\\]\\(\\?:\\[\\^;\\{\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\)\\*\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/,
                                                      },
                                                      "color": [
                                                        /\\\\b\\(\\?:AliceBlue\\|AntiqueWhite\\|Aqua\\|Aquamarine\\|Azure\\|Beige\\|Bisque\\|Black\\|BlanchedAlmond\\|Blue\\|BlueViolet\\|Brown\\|BurlyWood\\|CadetBlue\\|Chartreuse\\|Chocolate\\|Coral\\|CornflowerBlue\\|Cornsilk\\|Crimson\\|Cyan\\|DarkBlue\\|DarkCyan\\|DarkGoldenRod\\|DarkGr\\[ae\\]y\\|DarkGreen\\|DarkKhaki\\|DarkMagenta\\|DarkOliveGreen\\|DarkOrange\\|DarkOrchid\\|DarkRed\\|DarkSalmon\\|DarkSeaGreen\\|DarkSlateBlue\\|DarkSlateGr\\[ae\\]y\\|DarkTurquoise\\|DarkViolet\\|DeepPink\\|DeepSkyBlue\\|DimGr\\[ae\\]y\\|DodgerBlue\\|FireBrick\\|FloralWhite\\|ForestGreen\\|Fuchsia\\|Gainsboro\\|GhostWhite\\|Gold\\|GoldenRod\\|Gr\\[ae\\]y\\|Green\\|GreenYellow\\|HoneyDew\\|HotPink\\|IndianRed\\|Indigo\\|Ivory\\|Khaki\\|Lavender\\|LavenderBlush\\|LawnGreen\\|LemonChiffon\\|LightBlue\\|LightCoral\\|LightCyan\\|LightGoldenRodYellow\\|LightGr\\[ae\\]y\\|LightGreen\\|LightPink\\|LightSalmon\\|LightSeaGreen\\|LightSkyBlue\\|LightSlateGr\\[ae\\]y\\|LightSteelBlue\\|LightYellow\\|Lime\\|LimeGreen\\|Linen\\|Magenta\\|Maroon\\|MediumAquaMarine\\|MediumBlue\\|MediumOrchid\\|MediumPurple\\|MediumSeaGreen\\|MediumSlateBlue\\|MediumSpringGreen\\|MediumTurquoise\\|MediumVioletRed\\|MidnightBlue\\|MintCream\\|MistyRose\\|Moccasin\\|NavajoWhite\\|Navy\\|OldLace\\|Olive\\|OliveDrab\\|Orange\\|OrangeRed\\|Orchid\\|PaleGoldenRod\\|PaleGreen\\|PaleTurquoise\\|PaleVioletRed\\|PapayaWhip\\|PeachPuff\\|Peru\\|Pink\\|Plum\\|PowderBlue\\|Purple\\|Red\\|RosyBrown\\|RoyalBlue\\|SaddleBrown\\|Salmon\\|SandyBrown\\|SeaGreen\\|SeaShell\\|Sienna\\|Silver\\|SkyBlue\\|SlateBlue\\|SlateGr\\[ae\\]y\\|Snow\\|SpringGreen\\|SteelBlue\\|Tan\\|Teal\\|Thistle\\|Tomato\\|Transparent\\|Turquoise\\|Violet\\|Wheat\\|White\\|WhiteSmoke\\|Yellow\\|YellowGreen\\)\\\\b/i,
                                                        {
                                                          "inside": {
                                                            "function": /\\[\\\\w-\\]\\+\\(\\?=\\\\\\(\\)/,
                                                            "number": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                            },
                                                            "punctuation": /\\[\\(\\),\\]/,
                                                            "unit": {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                            },
                                                          },
                                                          "pattern": /\\\\b\\(\\?:rgb\\|hsl\\)\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*\\\\\\)\\\\B\\|\\\\b\\(\\?:rgb\\|hsl\\)a\\\\\\(\\\\s\\*\\\\d\\{1,3\\}\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\\\d\\{1,3\\}%\\?\\\\s\\*,\\\\s\\*\\(\\?:0\\|0\\?\\\\\\.\\\\d\\+\\|1\\)\\\\s\\*\\\\\\)\\\\B/i,
                                                        },
                                                      ],
                                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                      "hexcode": {
                                                        "alias": "color",
                                                        "pattern": /\\\\B#\\(\\?:\\[\\\\da-f\\]\\{1,2\\}\\)\\{3,4\\}\\\\b/i,
                                                      },
                                                      "important": /!important\\\\b/i,
                                                      "number": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\.-\\]\\)-\\?\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\|\\\\\\.\\\\d\\+\\)/,
                                                      },
                                                      "operator": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\s\\)\\[\\+\\\\-\\*\\\\/\\]\\(\\?=\\\\s\\)/,
                                                      },
                                                      "property": /\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*:\\)/i,
                                                      "punctuation": /\\[\\(\\)\\{\\};:,\\]/,
                                                      "selector": {
                                                        "inside": {
                                                          "attribute": {
                                                            "greedy": true,
                                                            "inside": {
                                                              "attr-name": {
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+/,
                                                              },
                                                              "attr-value": [
                                                                /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(=\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\+\\(\\?=\\\\s\\*\\$\\)/,
                                                                },
                                                              ],
                                                              "case-sensitivity": {
                                                                "alias": "keyword",
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\\\s\\)\\[si\\]\\$/i,
                                                              },
                                                              "namespace": {
                                                                "inside": {
                                                                  "punctuation": /\\\\\\|\\$/,
                                                                },
                                                                "lookbehind": true,
                                                                "pattern": /\\^\\(\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[-\\*\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\\\|\\(\\?!=\\)/,
                                                              },
                                                              "operator": /\\[\\|~\\*\\^\\$\\]\\?=/,
                                                              "punctuation": /\\^\\\\\\[\\|\\\\\\]\\$/,
                                                            },
                                                            "pattern": /\\\\\\[\\(\\?:\\[\\^\\[\\\\\\]"'\\]\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\\\\\]/,
                                                          },
                                                          "class": /\\\\\\.\\[-\\\\w\\]\\+/,
                                                          "combinator": />\\|\\\\\\+\\|~\\|\\\\\\|\\\\\\|/,
                                                          "id": /#\\[-\\\\w\\]\\+/,
                                                          "n-th": [
                                                            {
                                                              "inside": {
                                                                "number": /\\[\\\\dn\\]\\+/,
                                                                "operator": /\\[\\+-\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\[\\+-\\]\\?\\\\d\\*\\[\\\\dn\\]\\(\\?:\\\\s\\*\\[\\+-\\]\\\\s\\*\\\\d\\+\\)\\?\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?:even\\|odd\\)\\(\\?=\\\\s\\*\\\\\\)\\)/i,
                                                            },
                                                          ],
                                                          "pseudo-class": /:\\[-\\\\w\\]\\+/,
                                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          "punctuation": /\\[\\(\\),\\]/,
                                                        },
                                                        "pattern": /\\[\\^\\{\\}\\\\s\\]\\(\\?:\\[\\^\\{\\};"'\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\{\\]\\)\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\)\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                      "unit": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\\\d\\+\\)\\(\\?:%\\|\\[a-z\\]\\+\\\\b\\)/,
                                                      },
                                                      "url": {
                                                        "greedy": true,
                                                        "inside": {
                                                          "function": /\\^url/i,
                                                          "punctuation": /\\^\\\\\\(\\|\\\\\\)\\$/,
                                                          "string": {
                                                            "alias": "url",
                                                            "pattern": /\\^\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\$/,
                                                          },
                                                        },
                                                        "pattern": /\\\\burl\\\\\\(\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\(\\?:\\[\\^\\\\\\\\\\\\r\\\\n\\(\\)"'\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\)\\\\\\)/i,
                                                      },
                                                      "variable": {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^-\\\\w\\\\xA0-\\\\uFFFF\\]\\)--\\(\\?!\\\\s\\)\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/i,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\["'\\]\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\["'\\]\\$\\)/,
                                                  },
                                                },
                                                "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\["'\\\\s\\]\\)style\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)/i,
                                          },
                                          "tag": {
                                            "inside": {
                                              "class-name": /\\^\\[A-Z\\]\\\\w\\*\\(\\?:\\\\\\.\\[A-Z\\]\\\\w\\*\\)\\*\\$/,
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\*/i,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\w\\$\\]\\|\\(\\?=<\\\\/\\)\\)\\(\\?:<\\\\/\\?\\(\\?:\\[\\\\w\\.:-\\]\\+\\(\\?:\\\\s\\+\\(\\?:\\[\\\\w\\.:\\$-\\]\\+\\(\\?:=\\(\\?:"\\(\\?:\\\\\\\\\\[\\^\\]\\|\\[\\^\\\\\\\\"\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\[\\^\\]\\|\\[\\^\\\\\\\\'\\]\\)\\*'\\|\\[\\^\\\\s\\{'">=\\]\\+\\|\\\\\\{\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\+\\\\\\}\\)\\)\\?\\|\\\\\\{\\\\s\\*\\\\\\.\\{3\\}\\\\s\\*\\[a-z_\\$\\]\\[\\\\w\\$\\]\\*\\(\\?:\\\\\\.\\[a-z_\\$\\]\\[\\\\w\\$\\]\\*\\)\\*\\\\s\\*\\\\\\}\\)\\)\\*\\\\s\\*\\\\/\\?\\)\\?>\\)/i,
                                      },
                                      "template-string": {
                                        "greedy": true,
                                        "inside": {
                                          "interpolation": {
                                            "inside": {
                                              "interpolation-punctuation": {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                              },
                                              "rest": {
                                                "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                "class-name": [
                                                  {
                                                    "inside": {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                  },
                                                ],
                                                "comment": [
                                                  {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                "function-variable": {
                                                  "alias": "function",
                                                  "inside": {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "keyword": [
                                                  {
                                                    "alias": "module",
                                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                  },
                                                  {
                                                    "alias": "control-flow",
                                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                  },
                                                  {
                                                    "alias": [
                                                      "null",
                                                      "nil",
                                                    ],
                                                    "pattern": /\\\\bnull\\\\b/,
                                                  },
                                                  {
                                                    "alias": "nil",
                                                    "pattern": /\\\\bundefined\\\\b/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": [
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": {
                                                  "greedy": true,
                                                  "inside": {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\[a-z\\]\\+\\$/,
                                                    "regex-source": {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "string": {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    },
                                    "typescript": {
                                      "arrow": {
                                        "alias": "operator",
                                        "pattern": /=>/,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                      "class-name": {
                                        "greedy": true,
                                        "inside": {
                                          "arrow": {
                                            "alias": "operator",
                                            "pattern": /=>/,
                                          },
                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                          "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                          "comment": [
                                            {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                            },
                                            {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                            },
                                          ],
                                          "console": {
                                            "alias": "class-name",
                                            "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                          },
                                          "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                          "dom": {
                                            "alias": "variable",
                                            "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                          },
                                          "exports": {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                          },
                                          "function": {
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                          },
                                          "function-variable": {
                                            "alias": "function",
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                          },
                                          "imports": {
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                          },
                                          "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          "known-class-name": [
                                            {
                                              "alias": "class-name",
                                              "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                            },
                                            {
                                              "alias": "class-name",
                                              "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                            },
                                          ],
                                          "maybe-class-name": {
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                          },
                                          "method": {
                                            "alias": [
                                              "function",
                                              "property-access",
                                            ],
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                          },
                                          "method-variable": {
                                            "alias": [
                                              "function-variable",
                                              "method",
                                              "function",
                                              "property-access",
                                            ],
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                          },
                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                          "property-access": {
                                            "inside": {
                                              "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                          },
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": {
                                            "greedy": true,
                                            "inside": {
                                              "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                              "regex-flags": /\\[a-z\\]\\+\\$/,
                                              "regex-source": {
                                                "alias": "language-regex",
                                                "inside": undefined,
                                                "lookbehind": true,
                                                "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                          },
                                          "spread": {
                                            "alias": "operator",
                                            "pattern": /\\\\\\.\\{3\\}/,
                                          },
                                          "string": {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "template-string": {
                                            "greedy": true,
                                            "inside": {
                                              "interpolation": {
                                                "inside": {
                                                  "interpolation-punctuation": {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                  },
                                                  "rest": {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "class-name": [
                                                      {
                                                        "inside": {
                                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                      },
                                                    ],
                                                    "comment": [
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                      },
                                                      {
                                                        "greedy": true,
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                      },
                                                    ],
                                                    "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                    "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                    "function-variable": {
                                                      "alias": "function",
                                                      "inside": {
                                                        "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                      },
                                                      "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                    },
                                                    "keyword": [
                                                      {
                                                        "alias": "module",
                                                        "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": "control-flow",
                                                        "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                      },
                                                      {
                                                        "alias": [
                                                          "null",
                                                          "nil",
                                                        ],
                                                        "pattern": /\\\\bnull\\\\b/,
                                                      },
                                                      {
                                                        "alias": "nil",
                                                        "pattern": /\\\\bundefined\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                      },
                                                      {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                      },
                                                    ],
                                                    "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                    "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                    "parameter": [
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                      },
                                                      {
                                                        "inside": {
                                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                          "class-name": [
                                                            {
                                                              "inside": {
                                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                              },
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                            },
                                                          ],
                                                          "comment": [
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                            },
                                                            {
                                                              "greedy": true,
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                            },
                                                          ],
                                                          "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                          "keyword": [
                                                            {
                                                              "alias": "module",
                                                              "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": "control-flow",
                                                              "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                            },
                                                            {
                                                              "alias": [
                                                                "null",
                                                                "nil",
                                                              ],
                                                              "pattern": /\\\\bnull\\\\b/,
                                                            },
                                                            {
                                                              "alias": "nil",
                                                              "pattern": /\\\\bundefined\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                            },
                                                            {
                                                              "lookbehind": true,
                                                              "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                            },
                                                          ],
                                                          "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                          "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                          "string": {
                                                            "greedy": true,
                                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                          },
                                                        },
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                      },
                                                    ],
                                                    "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                    "regex": {
                                                      "greedy": true,
                                                      "inside": {
                                                        "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                        "regex-flags": /\\[a-z\\]\\+\\$/,
                                                        "regex-source": {
                                                          "alias": "language-regex",
                                                          "inside": undefined,
                                                          "lookbehind": true,
                                                          "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                        },
                                                      },
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                    },
                                                    "string": {
                                                      "greedy": true,
                                                      "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                    },
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                              "template-punctuation": {
                                                "alias": "string",
                                                "pattern": /\\^\`\\|\`\\$/,
                                              },
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\b\\(\\?:class\\|extends\\|implements\\|instanceof\\|interface\\|new\\|type\\)\\\\s\\+\\)\\(\\?!keyof\\\\b\\)\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\)\\?/,
                                      },
                                      "comment": [
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "console": {
                                        "alias": "class-name",
                                        "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                      },
                                      "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                      "dom": {
                                        "alias": "variable",
                                        "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                      },
                                      "exports": {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                      },
                                      "function": {
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      },
                                      "function-variable": {
                                        "alias": "function",
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "generic-function": {
                                        "greedy": true,
                                        "inside": {
                                          "function": /\\^#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                          "generic": {
                                            "alias": "class-name",
                                            "inside": {
                                              "arrow": {
                                                "alias": "operator",
                                                "pattern": /=>/,
                                              },
                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                              "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\|Promise\\|unknown\\|never\\)\\\\b/,
                                              "comment": [
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                },
                                                {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                },
                                              ],
                                              "console": {
                                                "alias": "class-name",
                                                "pattern": /\\\\bconsole\\(\\?=\\\\s\\*\\\\\\.\\)/,
                                              },
                                              "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                              "dom": {
                                                "alias": "variable",
                                                "pattern": /\\\\b\\(\\?:document\\|location\\|navigator\\|performance\\|\\(\\?:local\\|session\\)Storage\\|window\\)\\\\b/,
                                              },
                                              "exports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bexport\\\\b\\\\s\\*\\)\\(\\?:\\\\\\*\\(\\?:\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)/,
                                              },
                                              "function": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "function-variable": {
                                                "alias": "function",
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "imports": {
                                                "inside": [Circular],
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                              },
                                              "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                              "known-class-name": [
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                                },
                                                {
                                                  "alias": "class-name",
                                                  "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                                },
                                              ],
                                              "maybe-class-name": {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                              },
                                              "method": {
                                                "alias": [
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                              },
                                              "method-variable": {
                                                "alias": [
                                                  "function-variable",
                                                  "method",
                                                  "function",
                                                  "property-access",
                                                ],
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                              },
                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                              "property-access": {
                                                "inside": {
                                                  "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                              },
                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                              "regex": {
                                                "greedy": true,
                                                "inside": {
                                                  "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                  "regex-flags": /\\[a-z\\]\\+\\$/,
                                                  "regex-source": {
                                                    "alias": "language-regex",
                                                    "inside": undefined,
                                                    "lookbehind": true,
                                                    "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                  },
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                              },
                                              "spread": {
                                                "alias": "operator",
                                                "pattern": /\\\\\\.\\{3\\}/,
                                              },
                                              "string": {
                                                "greedy": true,
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                              },
                                              "template-string": {
                                                "greedy": true,
                                                "inside": {
                                                  "interpolation": {
                                                    "inside": {
                                                      "interpolation-punctuation": {
                                                        "alias": "punctuation",
                                                        "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                      },
                                                      "rest": {
                                                        "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                        "class-name": [
                                                          {
                                                            "inside": {
                                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                          },
                                                        ],
                                                        "comment": [
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                          },
                                                          {
                                                            "greedy": true,
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                          },
                                                        ],
                                                        "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                        "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                        "function-variable": {
                                                          "alias": "function",
                                                          "inside": {
                                                            "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                          },
                                                          "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                        },
                                                        "keyword": [
                                                          {
                                                            "alias": "module",
                                                            "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": "control-flow",
                                                            "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                          },
                                                          {
                                                            "alias": [
                                                              "null",
                                                              "nil",
                                                            ],
                                                            "pattern": /\\\\bnull\\\\b/,
                                                          },
                                                          {
                                                            "alias": "nil",
                                                            "pattern": /\\\\bundefined\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                          },
                                                          {
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                          },
                                                        ],
                                                        "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                        "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                        "parameter": [
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                          },
                                                          {
                                                            "inside": {
                                                              "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                              "class-name": [
                                                                {
                                                                  "inside": {
                                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                                  },
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                                },
                                                              ],
                                                              "comment": [
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                                },
                                                                {
                                                                  "greedy": true,
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                                },
                                                              ],
                                                              "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                              "keyword": [
                                                                {
                                                                  "alias": "module",
                                                                  "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "control-flow",
                                                                  "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                                },
                                                                {
                                                                  "alias": [
                                                                    "null",
                                                                    "nil",
                                                                  ],
                                                                  "pattern": /\\\\bnull\\\\b/,
                                                                },
                                                                {
                                                                  "alias": "nil",
                                                                  "pattern": /\\\\bundefined\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                                },
                                                                {
                                                                  "lookbehind": true,
                                                                  "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                                },
                                                              ],
                                                              "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                              "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                              "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                              "string": {
                                                                "greedy": true,
                                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                              },
                                                            },
                                                            "lookbehind": true,
                                                            "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                          },
                                                        ],
                                                        "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                        "regex": {
                                                          "greedy": true,
                                                          "inside": {
                                                            "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                            "regex-flags": /\\[a-z\\]\\+\\$/,
                                                            "regex-source": {
                                                              "alias": "language-regex",
                                                              "inside": undefined,
                                                              "lookbehind": true,
                                                              "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                            },
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                        },
                                                        "string": {
                                                          "greedy": true,
                                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                                  },
                                                  "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  "template-punctuation": {
                                                    "alias": "string",
                                                    "pattern": /\\^\`\\|\`\\$/,
                                                  },
                                                },
                                                "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                              },
                                            },
                                            "pattern": /<\\[\\\\s\\\\S\\]\\+/,
                                          },
                                        },
                                        "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*<\\(\\?:\\[\\^<>\\]\\|<\\(\\?:\\[\\^<>\\]\\|<\\[\\^<>\\]\\*>\\)\\*>\\)\\*>\\(\\?=\\\\s\\*\\\\\\(\\)/,
                                      },
                                      "imports": {
                                        "inside": [Circular],
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bimport\\\\b\\\\s\\*\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?:\\\\s\\*,\\\\s\\*\\(\\?:\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\)\\?\\|\\\\\\*\\\\s\\*as\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\|\\\\\\{\\[\\^\\{\\}\\]\\*\\\\\\}\\)\\(\\?=\\\\s\\*\\\\bfrom\\\\b\\)/,
                                      },
                                      "keyword": /\\\\b\\(\\?:abstract\\|as\\|asserts\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|constructor\\|continue\\|debugger\\|declare\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|is\\|keyof\\|let\\|module\\|namespace\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|readonly\\|return\\|require\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|type\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      "known-class-name": [
                                        {
                                          "alias": "class-name",
                                          "pattern": /\\\\b\\(\\?:\\(\\?:\\(\\?:Uint\\|Int\\)\\(\\?:8\\|16\\|32\\)\\|Uint8Clamped\\|Float\\(\\?:32\\|64\\)\\)\\?Array\\|ArrayBuffer\\|BigInt\\|Boolean\\|DataView\\|Date\\|Error\\|Function\\|Intl\\|JSON\\|Math\\|Number\\|Object\\|Promise\\|Proxy\\|Reflect\\|RegExp\\|String\\|Symbol\\|\\(\\?:Weak\\)\\?\\(\\?:Set\\|Map\\)\\|WebAssembly\\)\\\\b/,
                                        },
                                        {
                                          "alias": "class-name",
                                          "pattern": /\\\\b\\(\\?:\\[A-Z\\]\\\\w\\*\\)Error\\\\b/,
                                        },
                                      ],
                                      "maybe-class-name": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\[A-Z\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\+/,
                                      },
                                      "method": {
                                        "alias": [
                                          "function",
                                          "property-access",
                                        ],
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                      },
                                      "method-variable": {
                                        "alias": [
                                          "function-variable",
                                          "method",
                                          "function",
                                          "property-access",
                                        ],
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                      },
                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                      "property-access": {
                                        "inside": {
                                          "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\.\\\\s\\*\\)#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*/,
                                      },
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": {
                                        "greedy": true,
                                        "inside": {
                                          "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                          "regex-flags": /\\[a-z\\]\\+\\$/,
                                          "regex-source": {
                                            "alias": "language-regex",
                                            "inside": undefined,
                                            "lookbehind": true,
                                            "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                      },
                                      "spread": {
                                        "alias": "operator",
                                        "pattern": /\\\\\\.\\{3\\}/,
                                      },
                                      "string": {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "template-string": {
                                        "greedy": true,
                                        "inside": {
                                          "interpolation": {
                                            "inside": {
                                              "interpolation-punctuation": {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                              },
                                              "rest": {
                                                "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                "class-name": [
                                                  {
                                                    "inside": {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                  },
                                                ],
                                                "comment": [
                                                  {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "constant": /\\\\b\\[A-Z\\]\\(\\?:\\[A-Z_\\]\\|\\\\dx\\?\\)\\*\\\\b/,
                                                "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                "function-variable": {
                                                  "alias": "function",
                                                  "inside": {
                                                    "maybe-class-name": /\\^\\[A-Z\\]\\[\\\\s\\\\S\\]\\*/,
                                                  },
                                                  "pattern": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\[=:\\]\\\\s\\*\\(\\?:async\\\\s\\*\\)\\?\\(\\?:\\\\bfunction\\\\b\\|\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\*\\\\\\)\\|\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\\\s\\*=>\\)\\)/,
                                                },
                                                "keyword": [
                                                  {
                                                    "alias": "module",
                                                    "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                  },
                                                  {
                                                    "alias": "control-flow",
                                                    "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                  },
                                                  {
                                                    "alias": [
                                                      "null",
                                                      "nil",
                                                    ],
                                                    "pattern": /\\\\bnull\\\\b/,
                                                  },
                                                  {
                                                    "alias": "nil",
                                                    "pattern": /\\\\bundefined\\\\b/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                  },
                                                  {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                  },
                                                ],
                                                "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                "parameter": [
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(function\\(\\?:\\\\s\\+\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\)\\?\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\)/,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "pattern": /\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*=>\\)/i,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*=>\\)/,
                                                  },
                                                  {
                                                    "inside": {
                                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                      "class-name": [
                                                        {
                                                          "inside": {
                                                            "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                          },
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|instanceof\\|new\\)\\\\s\\+\\)\\[\\\\w\\.\\\\\\\\\\]\\+/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\(\\?!\\\\s\\)\\[_\\$A-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\\\.\\(\\?:prototype\\|constructor\\)\\)/,
                                                        },
                                                      ],
                                                      "comment": [
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                        },
                                                        {
                                                          "greedy": true,
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                        },
                                                      ],
                                                      "function": /#\\?\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\(\\?=\\\\s\\*\\(\\?:\\\\\\.\\\\s\\*\\(\\?:apply\\|bind\\|call\\)\\\\s\\*\\)\\?\\\\\\(\\)/,
                                                      "keyword": [
                                                        {
                                                          "alias": "module",
                                                          "pattern": /\\\\b\\(\\?:as\\|default\\|export\\|from\\|import\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": "control-flow",
                                                          "pattern": /\\\\b\\(\\?:await\\|break\\|catch\\|continue\\|do\\|else\\|for\\|finally\\|if\\|return\\|switch\\|throw\\|try\\|while\\|yield\\)\\\\b/,
                                                        },
                                                        {
                                                          "alias": [
                                                            "null",
                                                            "nil",
                                                          ],
                                                          "pattern": /\\\\bnull\\\\b/,
                                                        },
                                                        {
                                                          "alias": "nil",
                                                          "pattern": /\\\\bundefined\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\(\\?:\\^\\|\\}\\)\\\\s\\*\\)\\(\\?:catch\\|finally\\)\\\\b/,
                                                        },
                                                        {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\.\\]\\|\\\\\\.\\\\\\.\\\\\\.\\\\s\\*\\)\\\\b\\(\\?:as\\|async\\(\\?=\\\\s\\*\\(\\?:function\\\\b\\|\\\\\\(\\|\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\|\\$\\)\\)\\|await\\|break\\|case\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|for\\|from\\|function\\|\\(\\?:get\\|set\\)\\(\\?=\\\\s\\*\\[\\\\\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                        },
                                                      ],
                                                      "number": /\\\\b\\(\\?:\\(\\?:0\\[xX\\]\\(\\?:\\[\\\\dA-Fa-f\\]\\(\\?:_\\[\\\\dA-Fa-f\\]\\)\\?\\)\\+\\|0\\[bB\\]\\(\\?:\\[01\\]\\(\\?:_\\[01\\]\\)\\?\\)\\+\\|0\\[oO\\]\\(\\?:\\[0-7\\]\\(\\?:_\\[0-7\\]\\)\\?\\)\\+\\)n\\?\\|\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+n\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\\\\\.\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\*\\|\\\\B\\\\\\.\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\(\\?:\\\\d\\(\\?:_\\\\d\\)\\?\\)\\+\\)\\?/,
                                                      "operator": /--\\|\\\\\\+\\\\\\+\\|\\\\\\*\\\\\\*=\\?\\|=>\\|&&=\\?\\|\\\\\\|\\\\\\|=\\?\\|\\[!=\\]==\\|<<=\\?\\|>>>\\?=\\?\\|\\[-\\+\\*/%&\\|\\^!=<>\\]=\\?\\|\\\\\\.\\{3\\}\\|\\\\\\?\\\\\\?=\\?\\|\\\\\\?\\\\\\.\\?\\|\\[~:\\]/,
                                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                      "string": {
                                                        "greedy": true,
                                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                      },
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\|\\\\s\\|\\^\\)\\(\\?!\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|undefined\\|var\\|void\\|while\\|with\\|yield\\)\\(\\?!\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\)\\(\\?:\\(\\?!\\\\s\\)\\[_\\$a-zA-Z\\\\xA0-\\\\uFFFF\\]\\(\\?:\\(\\?!\\\\s\\)\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\)\\*\\\\s\\*\\)\\\\\\(\\\\s\\*\\|\\\\\\]\\\\s\\*\\\\\\(\\\\s\\*\\)\\(\\?!\\\\s\\)\\(\\?:\\[\\^\\(\\)\\\\s\\]\\|\\\\s\\+\\(\\?!\\[\\\\s\\)\\]\\)\\|\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\)\\+\\(\\?=\\\\s\\*\\\\\\)\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                ],
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": {
                                                  "greedy": true,
                                                  "inside": {
                                                    "regex-delimiter": /\\^\\\\/\\|\\\\/\\$/,
                                                    "regex-flags": /\\[a-z\\]\\+\\$/,
                                                    "regex-source": {
                                                      "alias": "language-regex",
                                                      "inside": undefined,
                                                      "lookbehind": true,
                                                      "pattern": /\\^\\(\\\\/\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\/\\[a-z\\]\\*\\$\\)/,
                                                    },
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\|\\\\b\\(\\?:return\\|yield\\)\\)\\\\s\\*\\)\\\\/\\(\\?:\\\\\\[\\(\\?:\\[\\^\\\\\\]\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\]\\|\\\\\\\\\\.\\|\\[\\^/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyus\\]\\{0,6\\}\\(\\?=\\(\\?:\\\\s\\|\\\\/\\\\\\*\\(\\?:\\[\\^\\*\\]\\|\\\\\\*\\(\\?!\\\\/\\)\\)\\*\\\\\\*\\\\/\\)\\*\\(\\?:\\$\\|\\[\\\\r\\\\n,\\.;:\\}\\)\\\\\\]\\]\\|\\\\/\\\\/\\)\\)/,
                                                },
                                                "string": {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\\\\\\\{2\\}\\)\\*\\)\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                          "template-punctuation": {
                                            "alias": "string",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\(\\?:\\[\\^\\{\\}\\]\\|\\{\\[\\^\\}\\]\\*\\}\\)\\*\\}\\)\\+\\}\\|\\(\\?!\\\\\\$\\{\\)\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    },
                                    "wasm": {
                                      "comment": [
                                        /\\\\\\(;\\[\\\\s\\\\S\\]\\*\\?;\\\\\\)/,
                                        {
                                          "greedy": true,
                                          "pattern": /;;\\.\\*/,
                                        },
                                      ],
                                      "keyword": [
                                        {
                                          "inside": {
                                            "operator": /=/,
                                          },
                                          "pattern": /\\\\b\\(\\?:align\\|offset\\)=/,
                                        },
                                        {
                                          "inside": {
                                            "punctuation": /\\\\\\./,
                                          },
                                          "pattern": /\\\\b\\(\\?:\\(\\?:f32\\|f64\\|i32\\|i64\\)\\(\\?:\\\\\\.\\(\\?:abs\\|add\\|and\\|ceil\\|clz\\|const\\|convert_\\[su\\]\\\\/i\\(\\?:32\\|64\\)\\|copysign\\|ctz\\|demote\\\\/f64\\|div\\(\\?:_\\[su\\]\\)\\?\\|eqz\\?\\|extend_\\[su\\]\\\\/i32\\|floor\\|ge\\(\\?:_\\[su\\]\\)\\?\\|gt\\(\\?:_\\[su\\]\\)\\?\\|le\\(\\?:_\\[su\\]\\)\\?\\|load\\(\\?:\\(\\?:8\\|16\\|32\\)_\\[su\\]\\)\\?\\|lt\\(\\?:_\\[su\\]\\)\\?\\|max\\|min\\|mul\\|nearest\\|neg\\?\\|or\\|popcnt\\|promote\\\\/f32\\|reinterpret\\\\/\\[fi\\]\\(\\?:32\\|64\\)\\|rem_\\[su\\]\\|rot\\[lr\\]\\|shl\\|shr_\\[su\\]\\|store\\(\\?:8\\|16\\|32\\)\\?\\|sqrt\\|sub\\|trunc\\(\\?:_\\[su\\]\\\\/f\\(\\?:32\\|64\\)\\)\\?\\|wrap\\\\/i64\\|xor\\)\\)\\?\\|memory\\\\\\.\\(\\?:grow\\|size\\)\\)\\\\b/,
                                        },
                                        /\\\\b\\(\\?:anyfunc\\|block\\|br\\(\\?:_if\\|_table\\)\\?\\|call\\(\\?:_indirect\\)\\?\\|data\\|drop\\|elem\\|else\\|end\\|export\\|func\\|get_\\(\\?:global\\|local\\)\\|global\\|if\\|import\\|local\\|loop\\|memory\\|module\\|mut\\|nop\\|offset\\|param\\|result\\|return\\|select\\|set_\\(\\?:global\\|local\\)\\|start\\|table\\|tee_local\\|then\\|type\\|unreachable\\)\\\\b/,
                                      ],
                                      "number": /\\[\\+-\\]\\?\\\\b\\(\\?:\\\\d\\(\\?:_\\?\\\\d\\)\\*\\(\\?:\\\\\\.\\\\d\\(\\?:_\\?\\\\d\\)\\*\\)\\?\\(\\?:\\[eE\\]\\[\\+-\\]\\?\\\\d\\(\\?:_\\?\\\\d\\)\\*\\)\\?\\|0x\\[\\\\da-fA-F\\]\\(\\?:_\\?\\[\\\\da-fA-F\\]\\)\\*\\(\\?:\\\\\\.\\[\\\\da-fA-F\\]\\(\\?:_\\?\\[\\\\da-fA-D\\]\\)\\*\\)\\?\\(\\?:\\[pP\\]\\[\\+-\\]\\?\\\\d\\(\\?:_\\?\\\\d\\)\\*\\)\\?\\)\\\\b\\|\\\\binf\\\\b\\|\\\\bnan\\(\\?::0x\\[\\\\da-fA-F\\]\\(\\?:_\\?\\[\\\\da-fA-D\\]\\)\\*\\)\\?\\\\b/,
                                      "punctuation": /\\[\\(\\)\\]/,
                                      "string": {
                                        "greedy": true,
                                        "pattern": /"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^"\\\\\\\\\\]\\)\\*"/,
                                      },
                                      "variable": /\\\\\\$\\[\\\\w!#\\$%&'\\*\\+\\\\-\\./:<=>\\?@\\\\\\\\\\^_\`\\|~\\]\\+/i,
                                    },
                                    "webmanifest": {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "comment": {
                                        "greedy": true,
                                        "pattern": /\\\\/\\\\/\\.\\*\\|\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                      },
                                      "null": {
                                        "alias": "keyword",
                                        "pattern": /\\\\bnull\\\\b/,
                                      },
                                      "number": /-\\?\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\\\b/i,
                                      "operator": /:/,
                                      "property": {
                                        "greedy": true,
                                        "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\(\\?=\\\\s\\*:\\)/,
                                      },
                                      "punctuation": /\\[\\{\\}\\[\\\\\\],\\]/,
                                      "string": {
                                        "greedy": true,
                                        "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\(\\?!\\\\s\\*:\\)/,
                                      },
                                    },
                                    "xml": {
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": {
                                        "greedy": true,
                                        "inside": {
                                          "doctype-tag": /\\^DOCTYPE/,
                                          "internal-subset": {
                                            "greedy": true,
                                            "inside": [Circular],
                                            "lookbehind": true,
                                            "pattern": /\\(\\\\\\[\\)\\[\\\\s\\\\S\\]\\+\\(\\?=\\\\\\]>\\$\\)/,
                                          },
                                          "name": /\\[\\^\\\\s<>'"\\]\\+/,
                                          "punctuation": /\\^<!\\|>\\$\\|\\[\\[\\\\\\]\\]/,
                                          "string": {
                                            "greedy": true,
                                            "pattern": /"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'/,
                                          },
                                        },
                                        "pattern": /<!DOCTYPE\\(\\?:\\[\\^>"'\\[\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\)\\+\\(\\?:\\\\\\[\\(\\?:\\[\\^<"'\\\\\\]\\]\\|"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|<\\(\\?!!--\\)\\|<!--\\(\\?:\\[\\^-\\]\\|-\\(\\?!->\\)\\)\\*-->\\)\\*\\\\\\]\\\\s\\*\\)\\?>/i,
                                      },
                                      "entity": [
                                        {
                                          "alias": "named-entity",
                                          "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                        },
                                        /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                      ],
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "tag": {
                                        "greedy": true,
                                        "inside": {
                                          "attr-name": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": {
                                            "inside": {
                                              "entity": [
                                                {
                                                  "alias": "named-entity",
                                                  "pattern": /&\\[\\\\da-z\\]\\{1,8\\};/i,
                                                },
                                                /&#x\\?\\[\\\\da-f\\]\\{1,8\\};/i,
                                              ],
                                              "punctuation": [
                                                {
                                                  "alias": "attr-equals",
                                                  "pattern": /\\^=/,
                                                },
                                                /"\\|'/,
                                              ],
                                            },
                                            "pattern": /=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\)/,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "tag": {
                                            "inside": {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\(\\?:\\\\s\\*\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:\\\\s\\*=\\\\s\\*\\(\\?:"\\[\\^"\\]\\*"\\|'\\[\\^'\\]\\*'\\|\\[\\^\\\\s'">=\\]\\+\\(\\?=\\[\\\\s>\\]\\)\\)\\|\\(\\?=\\[\\\\s/>\\]\\)\\)\\)\\+\\)\\?\\\\s\\*\\\\/\\?>/,
                                      },
                                    },
                                    "yaml": {
                                      "boolean": {
                                        "alias": "important",
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:true\\|false\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\]\\|\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/im,
                                      },
                                      "comment": /#\\.\\*/,
                                      "datetime": {
                                        "alias": "number",
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:\\\\d\\{4\\}-\\\\d\\\\d\\?-\\\\d\\\\d\\?\\(\\?:\\[tT\\]\\|\\[ \\\\t\\]\\+\\)\\\\d\\\\d\\?:\\\\d\\{2\\}:\\\\d\\{2\\}\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\(\\?:\\[ \\\\t\\]\\*\\(\\?:Z\\|\\[-\\+\\]\\\\d\\\\d\\?\\(\\?::\\\\d\\{2\\}\\)\\?\\)\\)\\?\\|\\\\d\\{4\\}-\\\\d\\{2\\}-\\\\d\\{2\\}\\|\\\\d\\\\d\\?:\\\\d\\{2\\}\\(\\?::\\\\d\\{2\\}\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\)\\?\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\]\\|\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/m,
                                      },
                                      "directive": {
                                        "alias": "important",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)%\\.\\+/m,
                                      },
                                      "important": /\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+/,
                                      "key": {
                                        "alias": "atrule",
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[:\\\\-,\\[\\{\\\\r\\\\n\\?\\]\\)\\[ \\\\t\\]\\*\\(\\?:\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:\\(\\?:\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f!"#%&'\\*,\\\\-:>\\?@\\[\\\\\\]\`\\{\\|\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\|\\[\\?:-\\]\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f,\\[\\\\\\]\\{\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\)\\(\\?:\\[ \\\\t\\]\\*\\(\\?:\\(\\?!\\[#:\\]\\)\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f,\\[\\\\\\]\\{\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\|:\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f,\\[\\\\\\]\\{\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\)\\)\\*\\|"\\(\\?:\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*"\\|'\\(\\?:\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*'\\)\\(\\?=\\\\s\\*:\\\\s\\)/,
                                      },
                                      "null": {
                                        "alias": "important",
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:null\\|~\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\]\\|\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/im,
                                      },
                                      "number": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:\\[\\+-\\]\\?\\(\\?:0x\\[\\\\da-f\\]\\+\\|0o\\[0-7\\]\\+\\|\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\\\.\\?\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\\\\\.inf\\|\\\\\\.nan\\)\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\]\\|\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/im,
                                      },
                                      "punctuation": /---\\|\\[:\\[\\\\\\]\\{\\}\\\\-,\\|>\\?\\]\\|\\\\\\.\\\\\\.\\\\\\./,
                                      "scalar": {
                                        "alias": "string",
                                        "lookbehind": true,
                                        "pattern": /\\(\\[\\\\-:\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\[\\|>\\]\\)\\[ \\\\t\\]\\*\\(\\?:\\(\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\[ \\\\t\\]\\+\\)\\\\S\\[\\^\\\\r\\\\n\\]\\*\\(\\?:\\\\2\\[\\^\\\\r\\\\n\\]\\+\\)\\*\\)/,
                                      },
                                      "string": {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:"\\(\\?:\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*"\\|'\\(\\?:\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*'\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\]\\|\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/m,
                                      },
                                      "tag": /!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?/,
                                    },
                                    "yml": {
                                      "boolean": {
                                        "alias": "important",
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:true\\|false\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\]\\|\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/im,
                                      },
                                      "comment": /#\\.\\*/,
                                      "datetime": {
                                        "alias": "number",
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:\\\\d\\{4\\}-\\\\d\\\\d\\?-\\\\d\\\\d\\?\\(\\?:\\[tT\\]\\|\\[ \\\\t\\]\\+\\)\\\\d\\\\d\\?:\\\\d\\{2\\}:\\\\d\\{2\\}\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\(\\?:\\[ \\\\t\\]\\*\\(\\?:Z\\|\\[-\\+\\]\\\\d\\\\d\\?\\(\\?::\\\\d\\{2\\}\\)\\?\\)\\)\\?\\|\\\\d\\{4\\}-\\\\d\\{2\\}-\\\\d\\{2\\}\\|\\\\d\\\\d\\?:\\\\d\\{2\\}\\(\\?::\\\\d\\{2\\}\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\)\\?\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\]\\|\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/m,
                                      },
                                      "directive": {
                                        "alias": "important",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)%\\.\\+/m,
                                      },
                                      "important": /\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+/,
                                      "key": {
                                        "alias": "atrule",
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[:\\\\-,\\[\\{\\\\r\\\\n\\?\\]\\)\\[ \\\\t\\]\\*\\(\\?:\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:\\(\\?:\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f!"#%&'\\*,\\\\-:>\\?@\\[\\\\\\]\`\\{\\|\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\|\\[\\?:-\\]\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f,\\[\\\\\\]\\{\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\)\\(\\?:\\[ \\\\t\\]\\*\\(\\?:\\(\\?!\\[#:\\]\\)\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f,\\[\\\\\\]\\{\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\|:\\[\\^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f,\\[\\\\\\]\\{\\}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff\\]\\)\\)\\*\\|"\\(\\?:\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*"\\|'\\(\\?:\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*'\\)\\(\\?=\\\\s\\*:\\\\s\\)/,
                                      },
                                      "null": {
                                        "alias": "important",
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:null\\|~\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\]\\|\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/im,
                                      },
                                      "number": {
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:\\[\\+-\\]\\?\\(\\?:0x\\[\\\\da-f\\]\\+\\|0o\\[0-7\\]\\+\\|\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\|\\\\\\.\\?\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\\\\\.inf\\|\\\\\\.nan\\)\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\]\\|\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/im,
                                      },
                                      "punctuation": /---\\|\\[:\\[\\\\\\]\\{\\}\\\\-,\\|>\\?\\]\\|\\\\\\.\\\\\\.\\\\\\./,
                                      "scalar": {
                                        "alias": "string",
                                        "lookbehind": true,
                                        "pattern": /\\(\\[\\\\-:\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\[\\|>\\]\\)\\[ \\\\t\\]\\*\\(\\?:\\(\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\[ \\\\t\\]\\+\\)\\\\S\\[\\^\\\\r\\\\n\\]\\*\\(\\?:\\\\2\\[\\^\\\\r\\\\n\\]\\+\\)\\*\\)/,
                                      },
                                      "string": {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:\\\\s\\(\\?:!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\(\\?:\\[ 	\\]\\+\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\)\\?\\|\\[\\*&\\]\\[\\^\\\\s\\[\\\\\\]\\{\\},\\]\\+\\(\\?:\\[ 	\\]\\+!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?\\)\\?\\)\\[ \\\\t\\]\\+\\)\\?\\)\\(\\?:"\\(\\?:\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*"\\|'\\(\\?:\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*'\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\]\\|\\}\\|\\(\\?:\\[\\\\r\\\\n\\]\\\\s\\*\\)\\?#\\)\\)/m,
                                      },
                                      "tag": /!\\(\\?:<\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$,\\.!~\\*'\\(\\)\\[\\\\\\]\\]\\+>\\|\\(\\?:\\[a-zA-Z\\\\d-\\]\\*!\\)\\?\\[\\\\w\\\\-%#;/\\?:@&=\\+\\$\\.~\\*'\\(\\)\\]\\+\\)\\?/,
                                    },
                                  },
                                  "matchGrammar": [Function],
                                  "plugins": {},
                                  "tokenize": [Function],
                                  "util": {
                                    "clone": [Function],
                                    "encode": [Function],
                                    "objId": [Function],
                                    "type": [Function],
                                  },
                                }
                              }
                              code=""
                              language="jsx"
                              theme={
                                {
                                  "plain": {
                                    "backgroundColor": "#282c34",
                                    "color": "#ffffff",
                                  },
                                  "styles": [
                                    {
                                      "style": {
                                        "color": "#b2b2b2",
                                      },
                                      "types": [
                                        "comment",
                                        "block-comment",
                                        "prolog",
                                        "doctype",
                                        "cdata",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "color": "#5a9bcf",
                                      },
                                      "types": [
                                        "property",
                                        "number",
                                        "function-name",
                                        "constant",
                                        "symbol",
                                        "deleted",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "color": "#ff8b50",
                                      },
                                      "types": [
                                        "boolean",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "color": "#fc929e",
                                      },
                                      "types": [
                                        "tag",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "color": "#8dc891",
                                      },
                                      "types": [
                                        "string",
                                        "attr-value",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "color": "#88c6Be",
                                      },
                                      "types": [
                                        "punctuation",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "color": "#d8dee9",
                                      },
                                      "types": [
                                        "selector",
                                        "char",
                                        "builtin",
                                        "inserted",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "color": "#79b6f2",
                                      },
                                      "types": [
                                        "function",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "color": "#d7deea",
                                      },
                                      "types": [
                                        "operator",
                                        "entity",
                                        "url",
                                        "variable",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "color": "#c5a5c5",
                                      },
                                      "types": [
                                        "keyword",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "color": "#fac863",
                                      },
                                      "types": [
                                        "atrule",
                                        "class-name",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "fontWeight": "400",
                                      },
                                      "types": [
                                        "important",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "fontWeight": "700",
                                      },
                                      "types": [
                                        "bold",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "fontStyle": "italic",
                                      },
                                      "types": [
                                        "italic",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "cursor": "help",
                                      },
                                      "types": [
                                        "entity",
                                      ],
                                    },
                                    {
                                      "style": {
                                        "opacity": 0.7,
                                      },
                                      "types": [
                                        "namespace",
                                      ],
                                    },
                                  ],
                                }
                              }
                            >
                              <span
                                className="token-line"
                                style={
                                  {
                                    "backgroundColor": null,
                                    "color": "#ffffff",
                                  }
                                }
                              >
                                <span
                                  className="token plain"
                                  key="0"
                                  style={
                                    {
                                      "display": "inline-block",
                                    }
                                  }
                                >
                                  

                                </span>
                              </span>
                              

                            </Highlight>
                          </y>
                        </pre>
                        <textarea
                          autoCapitalize="off"
                          autoComplete="off"
                          autoCorrect="off"
                          className="npm__react-simple-code-editor__textarea"
                          data-gramm={false}
                          onChange={[Function]}
                          onKeyDown={[Function]}
                          spellCheck={false}
                          style={
                            {
                              "MozOsxFontSmoothing": "grayscale",
                              "WebkitFontSmoothing": "antialiased",
                              "WebkitTextFillColor": "transparent",
                              "background": "none",
                              "border": 0,
                              "boxSizing": "inherit",
                              "color": "inherit",
                              "display": "inherit",
                              "fontFamily": "inherit",
                              "fontSize": "inherit",
                              "fontStyle": "inherit",
                              "fontVariantLigatures": "inherit",
                              "fontWeight": "inherit",
                              "height": "100%",
                              "left": 0,
                              "letterSpacing": "inherit",
                              "lineHeight": "inherit",
                              "margin": 0,
                              "overflow": "hidden",
                              "overflowWrap": "break-word",
                              "paddingBottom": 10,
                              "paddingLeft": 10,
                              "paddingRight": 10,
                              "paddingTop": 10,
                              "position": "absolute",
                              "resize": "none",
                              "tabSize": "inherit",
                              "textIndent": "inherit",
                              "textRendering": "inherit",
                              "textTransform": "inherit",
                              "top": 0,
                              "whiteSpace": "pre-wrap",
                              "width": "100%",
                              "wordBreak": "keep-all",
                            }
                          }
                          value=""
                        />
                        <style
                          dangerouslySetInnerHTML={
                            {
                              "__html": "
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
",
                            }
                          }
                        />
                      </div>
                    </Editor>
                  </g>
                </Component>
              </Styled(Component)>
            </code>
          </styled.code>
          <Styled(Component)
            className="notranslate"
          >
            <Component
              className="c4 notranslate"
            >
              <div
                className="c4 notranslate"
              >
                <a
                  code=""
                  onRendered={[Function]}
                  scope={
                    {
                      "StyleSheetManager": [Function],
                      "ThemeProvider": [Function],
                      "createGlobalStyle": [Function],
                      "css": [Function],
                      "keyframes": [Function],
                      "styled": [Function],
                      "stylisRTLPlugin": [Function],
                      "withTheme": [Function],
                    }
                  }
                />
              </div>
            </Component>
          </Styled(Component)>
        </div>
      </styled.div>
      <Styled(Component)>
        <Component
          className="c5"
        />
      </Styled(Component)>
    </Component>
  </Styled(Component)>
</LiveEdit>
`;

exports[`StyledError renders correctly 1`] = `
.c0 {
  display: block;
  width: 100%;
  padding: 0.4444444444444444rem;
  background: #ff5555;
  color: white;
  font-size: 0.8rem;
  font-family: "Karla",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  white-space: pre;
}

<Styled(Component)>
  <Component
    className="c0"
  />
</Styled(Component)>
`;
