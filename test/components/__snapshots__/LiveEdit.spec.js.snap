// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LiveEdit renders correctly 1`] = `
.c0 {
  box-shadow: 0.05555555555555555rem 0.05555555555555555rem 1.1111111111111112rem rgba(20,20,20,0.27);
  overflow: hidden;
  margin: 1.9444444444444444rem 0;
  text-align: left;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: stretch;
  -webkit-justify-content: stretch;
  -ms-flex-pack: stretch;
  justify-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c2 {
  background: #1d1f27;
  font-size: 0.8rem;
  font-family: dm,monospace;
  font-weight: 300;
  height: 22.22222222222222rem;
  overflow-y: auto !important;
  overflow-x: hidden;
  cursor: text;
  white-space: pre-wrap;
  position: relative;
  -webkit-flex-basis: 50%;
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
  width: 50%;
  max-width: 50%;
}

.c3 {
  position: relative;
  padding: 0.5rem;
  background: white;
  color: black;
  height: auto;
  overflow: hidden;
  -webkit-flex-basis: 50%;
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
  width: 50%;
  max-width: 50%;
}

.c4 {
  display: block;
  width: 100%;
  padding: 0.4444444444444444rem;
  background: #ff5555;
  color: white;
  font-size: 0.8rem;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  white-space: pre;
}

@media (max-width:40.625em) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (max-width:40.625em) {
  .c2 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
    width: 100%;
    max-width: 100%;
    height: auto;
  }
}

@media (max-width:40.625em) {
  .c3 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
    width: 100%;
    max-width: 100%;
    height: auto;
  }
}

<LiveEdit>
  <Styled(LiveProvider)
    mountStylesheet={false}
    scope={
      Object {
        "ThemeProvider": [Function],
        "createGlobalStyle": [Function],
        "css": [Function],
        "keyframes": [Function],
        "styled": [Function],
        "withTheme": [Function],
      }
    }
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  box-shadow: ",
              "0.05555555555555555rem",
              " ",
              "0.05555555555555555rem",
              " ",
              "1.1111111111111112rem",
              " rgba(20, 20, 20, 0.27);
  overflow: hidden;
  margin: ",
              "1.9444444444444444rem",
              " 0;
  text-align: left;
",
            ],
          },
          "displayName": "Styled(LiveProvider)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      mountStylesheet={false}
      scope={
        Object {
          "ThemeProvider": [Function],
          "createGlobalStyle": [Function],
          "css": [Function],
          "keyframes": [Function],
          "styled": [Function],
          "withTheme": [Function],
        }
      }
    >
      <LiveProvider
        className="c0"
        code=""
        disabled={false}
        language="jsx"
        mountStylesheet={false}
        noInline={false}
        scope={
          Object {
            "ThemeProvider": [Function],
            "createGlobalStyle": [Function],
            "css": [Function],
            "keyframes": [Function],
            "styled": [Function],
            "withTheme": [Function],
          }
        }
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: row;
  justify-content: stretch;
  align-items: stretch;

  ",
                    "
  @media (max-width: ",
                    "40.625",
                    "em) {
    ",
                    "
    flex-direction: column;
  ",
                    ";
  }
",
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <Styled(LiveEditor)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htpNat",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  ",
                          "
  background: #1d1f27;
  font-size: 0.8rem;
  font-family: dm, monospace;
  font-weight: 300;
  height: 22.22222222222222rem;
  overflow-y: auto !important;
  overflow-x: hidden;
  cursor: text;
  white-space: pre-wrap;
  position: relative;
",
                          ";
  ",
                          "
  flex-basis: 50%;
  width: 50%;
  max-width: 50%;

  ",
                          "
  @media (max-width: ",
                          "40.625",
                          "em) {
    ",
                          "
    flex-basis: auto;
    width: 100%;
    max-width: 100%;
    height: auto;
  ",
                          ";
  }
",
                          ";
",
                          ";
",
                        ],
                      },
                      "displayName": "Styled(LiveEditor)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htpNat",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <LiveEditor
                    className="c2"
                  >
                    <CodeEditor
                      className="c2"
                      code=""
                      disabled={false}
                      language="jsx"
                      onChange={[Function]}
                    >
                      <Editor
                        className="c2"
                        disabled={false}
                        highlight={[Function]}
                        ignoreTabKey={false}
                        insertSpaces={true}
                        onValueChange={[Function]}
                        padding={10}
                        style={
                          Object {
                            "fontFamily": "monospace",
                            "whiteSpace": "pre",
                          }
                        }
                        tabSize={2}
                        value=""
                      >
                        <div
                          className="c2"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "fontFamily": "monospace",
                              "overflow": "hidden",
                              "padding": 0,
                              "position": "relative",
                              "textAlign": "left",
                              "whiteSpace": "pre",
                            }
                          }
                        >
                          <textarea
                            autoCapitalize="off"
                            autoComplete="off"
                            autoCorrect="off"
                            className="npm__react-simple-code-editor__textarea"
                            data-gramm={false}
                            disabled={false}
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            spellCheck={false}
                            style={
                              Object {
                                "MozOsxFontSmoothing": "grayscale",
                                "WebkitFontSmoothing": "antialiased",
                                "WebkitTextFillColor": "transparent",
                                "background": "none",
                                "border": 0,
                                "boxSizing": "inherit",
                                "color": "inherit",
                                "display": "inherit",
                                "fontFamily": "inherit",
                                "fontSize": "inherit",
                                "fontStyle": "inherit",
                                "fontVariantLigatures": "inherit",
                                "fontWeight": "inherit",
                                "height": "100%",
                                "left": 0,
                                "letterSpacing": "inherit",
                                "lineHeight": "inherit",
                                "margin": 0,
                                "overflow": "hidden",
                                "overflowWrap": "break-word",
                                "paddingBottom": 10,
                                "paddingLeft": 10,
                                "paddingRight": 10,
                                "paddingTop": 10,
                                "position": "absolute",
                                "resize": "none",
                                "tabSize": "inherit",
                                "textIndent": "inherit",
                                "textRendering": "inherit",
                                "textTransform": "inherit",
                                "top": 0,
                                "whiteSpace": "pre-wrap",
                                "width": "100%",
                                "wordBreak": "keep-all",
                              }
                            }
                            value=""
                          />
                          <pre
                            aria-hidden="true"
                            style={
                              Object {
                                "background": "none",
                                "border": 0,
                                "boxSizing": "inherit",
                                "display": "inherit",
                                "fontFamily": "inherit",
                                "fontSize": "inherit",
                                "fontStyle": "inherit",
                                "fontVariantLigatures": "inherit",
                                "fontWeight": "inherit",
                                "letterSpacing": "inherit",
                                "lineHeight": "inherit",
                                "margin": 0,
                                "overflowWrap": "break-word",
                                "paddingBottom": 10,
                                "paddingLeft": 10,
                                "paddingRight": 10,
                                "paddingTop": 10,
                                "pointerEvents": "none",
                                "position": "relative",
                                "tabSize": "inherit",
                                "textIndent": "inherit",
                                "textRendering": "inherit",
                                "textTransform": "inherit",
                                "whiteSpace": "pre-wrap",
                                "wordBreak": "keep-all",
                              }
                            }
                          >
                            <Highlight
                              Prism={
                                Object {
                                  "Token": [Function],
                                  "default": [Circular],
                                  "highlight": [Function],
                                  "hooks": Object {
                                    "add": [Function],
                                  },
                                  "languages": Object {
                                    "DFS": [Function],
                                    "actionscript": Object {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-name": Object {
                                        "alias": "function",
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                      },
                                      "comment": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                      "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                      "function-variable": Object {
                                        "alias": "function",
                                        "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                      },
                                      "keyword": /\\\\b\\(\\?:as\\|break\\|case\\|catch\\|class\\|const\\|default\\|delete\\|do\\|else\\|extends\\|finally\\|for\\|function\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|internal\\|is\\|native\\|new\\|null\\|package\\|private\\|protected\\|public\\|return\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|use\\|var\\|void\\|while\\|with\\|dynamic\\|each\\|final\\|get\\|include\\|namespace\\|native\\|override\\|set\\|static\\)\\\\b/,
                                      "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                      "operator": /\\\\\\+\\\\\\+\\|--\\|\\(\\?:\\[\\+\\\\-\\*\\\\/%\\^\\]\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|<<\\?\\|>>\\?>\\?\\|\\[!=\\]=\\?\\)=\\?\\|\\[~\\?@\\]/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "template-string": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      "xml": Object {
                                        "inside": Object {
                                          "rest": Object {
                                            "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                            "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                            "doctype": /<!DOCTYPE\\[\\\\s\\\\S\\]\\+\\?>/i,
                                            "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                            "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                            "script": Object {
                                              "alias": "language-javascript",
                                              "greedy": true,
                                              "inside": Object {
                                                "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                "class-name": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                                },
                                                "comment": Array [
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                                "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                                "function-variable": Object {
                                                  "alias": "function",
                                                  "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                                },
                                                "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                                "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                                "template-string": Object {
                                                  "greedy": true,
                                                  "inside": Object {
                                                    "interpolation": Object {
                                                      "inside": Object {
                                                        "interpolation-punctuation": Object {
                                                          "alias": "punctuation",
                                                          "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                        },
                                                        "rest": [Circular],
                                                      },
                                                      "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                                    },
                                                    "string": /\\[\\\\s\\\\S\\]\\+/,
                                                  },
                                                  "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                                },
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(<script\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                            },
                                            "style": Object {
                                              "alias": "language-css",
                                              "greedy": true,
                                              "inside": Object {
                                                "atrule": Object {
                                                  "inside": Object {
                                                    "rest": [Circular],
                                                    "rule": /@\\[\\\\w-\\]\\+/,
                                                  },
                                                  "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                                },
                                                "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                                "important": /\\\\B!important\\\\b/i,
                                                "number": /\\[\\\\d%\\.\\]\\+/,
                                                "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                                "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                                "selector": Object {
                                                  "inside": Object {
                                                    "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                                    "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                                    "id": /#\\[-:\\.\\\\w\\]\\+/,
                                                    "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                                    "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                  },
                                                  "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                                "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(<style\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                            },
                                            "tag": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "attr-name": Object {
                                                  "inside": Object {
                                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                  },
                                                  "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                                },
                                                "attr-value": Object {
                                                  "inside": Object {
                                                    "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                                    "punctuation": Array [
                                                      /\\^=/,
                                                      Object {
                                                        "lookbehind": true,
                                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                      },
                                                    ],
                                                  },
                                                  "pattern": /=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)/i,
                                                },
                                                "punctuation": /\\\\/\\?>/,
                                                "style-attr": Object {
                                                  "alias": "language-css",
                                                  "inside": Object {
                                                    "attr-name": Object {
                                                      "inside": Object {
                                                        "attr-name": Object {
                                                          "inside": Object {
                                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                          },
                                                          "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                                        },
                                                        "attr-value": Object {
                                                          "inside": Object {
                                                            "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                                            "punctuation": Array [
                                                              /\\^=/,
                                                              Object {
                                                                "lookbehind": true,
                                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                              },
                                                            ],
                                                          },
                                                          "pattern": /=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)/i,
                                                        },
                                                        "punctuation": /\\\\/\\?>/,
                                                        "tag": Object {
                                                          "inside": Object {
                                                            "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                            "punctuation": /\\^<\\\\/\\?/,
                                                          },
                                                          "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/i,
                                                        },
                                                      },
                                                      "pattern": /\\^\\\\s\\*style/i,
                                                    },
                                                    "attr-value": Object {
                                                      "inside": Object {
                                                        "atrule": Object {
                                                          "inside": Object {
                                                            "rest": [Circular],
                                                            "rule": /@\\[\\\\w-\\]\\+/,
                                                          },
                                                          "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                                        },
                                                        "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                        "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                        "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                        "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                                        "important": /\\\\B!important\\\\b/i,
                                                        "number": /\\[\\\\d%\\.\\]\\+/,
                                                        "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                                        "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                                        "selector": Object {
                                                          "inside": Object {
                                                            "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                                            "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                                            "id": /#\\[-:\\.\\\\w\\]\\+/,
                                                            "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                                            "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                          },
                                                          "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                        },
                                                        "string": Object {
                                                          "greedy": true,
                                                          "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                        },
                                                        "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                                      },
                                                      "pattern": /\\.\\+/i,
                                                    },
                                                    "punctuation": /\\^\\\\s\\*=\\\\s\\*\\['"\\]\\|\\['"\\]\\\\s\\*\\$/,
                                                  },
                                                  "pattern": /\\\\s\\*style=\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1/i,
                                                },
                                                "tag": Object {
                                                  "inside": Object {
                                                    "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                    "punctuation": /\\^<\\\\/\\?/,
                                                  },
                                                  "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/i,
                                                },
                                              },
                                              "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\+\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)\\)\\?\\)\\*\\\\s\\*\\\\/\\?>/i,
                                            },
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\)<\\\\/\\?\\\\w\\+\\(\\?:\\\\s\\+\\[\\^\\\\s>\\\\/=\\]\\+=\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\2\\)\\*\\\\s\\*\\\\/\\?>/,
                                      },
                                    },
                                    "bash": Object {
                                      "boolean": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                      },
                                      "comment": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\]\\)#\\.\\*/,
                                      },
                                      "function": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:alias\\|apropos\\|apt-get\\|aptitude\\|aspell\\|awk\\|basename\\|bash\\|bc\\|bg\\|builtin\\|bzip2\\|cal\\|cat\\|cd\\|cfdisk\\|chgrp\\|chmod\\|chown\\|chroot\\|chkconfig\\|cksum\\|clear\\|cmp\\|comm\\|command\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|enable\\|env\\|ethtool\\|eval\\|exec\\|expand\\|expect\\|export\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|getopts\\|git\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|gzip\\|hash\\|head\\|help\\|hg\\|history\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logout\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|make\\|man\\|mkdir\\|mkfifo\\|mkisofs\\|mknod\\|more\\|most\\|mount\\|mtools\\|mtr\\|mv\\|mmv\\|nano\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|open\\|op\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|popd\\|pr\\|printcap\\|printenv\\|printf\\|ps\\|pushd\\|pv\\|pwd\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|read\\|readarray\\|readonly\\|reboot\\|rename\\|renice\\|remsync\\|rev\\|rm\\|rmdir\\|rsync\\|screen\\|scp\\|sdiff\\|sed\\|seq\\|service\\|sftp\\|shift\\|shopt\\|shutdown\\|sleep\\|slocate\\|sort\\|source\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|sync\\|tail\\|tar\\|tee\\|test\\|time\\|timeout\\|times\\|touch\\|top\\|traceroute\\|trap\\|tr\\|tsort\\|tty\\|type\\|ulimit\\|umask\\|umount\\|unalias\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uuencode\\|uudecode\\|v\\|vdir\\|vi\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yes\\|zip\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                      },
                                      "keyword": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:let\\|:\\|\\\\\\.\\|if\\|then\\|else\\|elif\\|fi\\|for\\|break\\|continue\\|while\\|in\\|case\\|function\\|select\\|do\\|done\\|until\\|echo\\|exit\\|return\\|set\\|declare\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                      },
                                      "operator": /&&\\?\\|\\\\\\|\\\\\\|\\?\\|==\\?\\|!=\\?\\|<<<\\?\\|>>\\|<=\\?\\|>=\\?\\|=~/,
                                      "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\]/,
                                      "shebang": Object {
                                        "alias": "important",
                                        "pattern": /\\^#!\\\\s\\*\\\\/bin\\\\/bash\\|\\^#!\\\\s\\*\\\\/bin\\\\/sh/,
                                      },
                                      "string": Array [
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "variable": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                                  "operator": /--\\?\\|-=\\|\\\\\\+\\\\\\+\\?\\|\\\\\\+=\\|!=\\?\\|~\\|\\\\\\*\\\\\\*\\?\\|\\\\\\*=\\|\\\\/=\\?\\|%=\\?\\|<<=\\?\\|>>=\\?\\|<=\\?\\|>=\\?\\|==\\?\\|&&\\?\\|&=\\|\\\\\\^=\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\|=\\|\\\\\\?\\|:/,
                                                  "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                                  "variable": Array [
                                                    Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                                    },
                                                    /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                                  ],
                                                },
                                                "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "boolean": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "function": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:alias\\|apropos\\|apt-get\\|aptitude\\|aspell\\|awk\\|basename\\|bash\\|bc\\|bg\\|builtin\\|bzip2\\|cal\\|cat\\|cd\\|cfdisk\\|chgrp\\|chmod\\|chown\\|chroot\\|chkconfig\\|cksum\\|clear\\|cmp\\|comm\\|command\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|enable\\|env\\|ethtool\\|eval\\|exec\\|expand\\|expect\\|export\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|getopts\\|git\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|gzip\\|hash\\|head\\|help\\|hg\\|history\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logout\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|make\\|man\\|mkdir\\|mkfifo\\|mkisofs\\|mknod\\|more\\|most\\|mount\\|mtools\\|mtr\\|mv\\|mmv\\|nano\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|open\\|op\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|popd\\|pr\\|printcap\\|printenv\\|printf\\|ps\\|pushd\\|pv\\|pwd\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|read\\|readarray\\|readonly\\|reboot\\|rename\\|renice\\|remsync\\|rev\\|rm\\|rmdir\\|rsync\\|screen\\|scp\\|sdiff\\|sed\\|seq\\|service\\|sftp\\|shift\\|shopt\\|shutdown\\|sleep\\|slocate\\|sort\\|source\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|sync\\|tail\\|tar\\|tee\\|test\\|time\\|timeout\\|times\\|touch\\|top\\|traceroute\\|trap\\|tr\\|tsort\\|tty\\|type\\|ulimit\\|umask\\|umount\\|unalias\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uuencode\\|uudecode\\|v\\|vdir\\|vi\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yes\\|zip\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "keyword": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:let\\|:\\|\\\\\\.\\|if\\|then\\|else\\|elif\\|fi\\|for\\|break\\|continue\\|while\\|in\\|case\\|function\\|select\\|do\\|done\\|until\\|echo\\|exit\\|return\\|set\\|declare\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "operator": /&&\\?\\|\\\\\\|\\\\\\|\\?\\|==\\?\\|!=\\?\\|<<<\\?\\|>>\\|<=\\?\\|>=\\?\\|=~/,
                                                  "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\]/,
                                                  "string": [Circular],
                                                  "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                                },
                                                "pattern": /\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                              },
                                              /\\\\\\$\\(\\?:\\[\\\\w#\\?\\*!@\\]\\+\\|\\\\\\{\\[\\^\\}\\]\\+\\\\\\}\\)/i,
                                            ],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<\\\\s\\*\\)\\["'\\]\\?\\(\\\\w\\+\\?\\)\\["'\\]\\?\\\\s\\*\\\\r\\?\\\\n\\(\\?:\\[\\\\s\\\\S\\]\\)\\*\\?\\\\r\\?\\\\n\\\\2/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "variable": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                                  "operator": /--\\?\\|-=\\|\\\\\\+\\\\\\+\\?\\|\\\\\\+=\\|!=\\?\\|~\\|\\\\\\*\\\\\\*\\?\\|\\\\\\*=\\|\\\\/=\\?\\|%=\\?\\|<<=\\?\\|>>=\\?\\|<=\\?\\|>=\\?\\|==\\?\\|&&\\?\\|&=\\|\\\\\\^=\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\|=\\|\\\\\\?\\|:/,
                                                  "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                                  "variable": Array [
                                                    Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                                    },
                                                    /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                                  ],
                                                },
                                                "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "boolean": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "function": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:alias\\|apropos\\|apt-get\\|aptitude\\|aspell\\|awk\\|basename\\|bash\\|bc\\|bg\\|builtin\\|bzip2\\|cal\\|cat\\|cd\\|cfdisk\\|chgrp\\|chmod\\|chown\\|chroot\\|chkconfig\\|cksum\\|clear\\|cmp\\|comm\\|command\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|enable\\|env\\|ethtool\\|eval\\|exec\\|expand\\|expect\\|export\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|getopts\\|git\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|gzip\\|hash\\|head\\|help\\|hg\\|history\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logout\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|make\\|man\\|mkdir\\|mkfifo\\|mkisofs\\|mknod\\|more\\|most\\|mount\\|mtools\\|mtr\\|mv\\|mmv\\|nano\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|open\\|op\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|popd\\|pr\\|printcap\\|printenv\\|printf\\|ps\\|pushd\\|pv\\|pwd\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|read\\|readarray\\|readonly\\|reboot\\|rename\\|renice\\|remsync\\|rev\\|rm\\|rmdir\\|rsync\\|screen\\|scp\\|sdiff\\|sed\\|seq\\|service\\|sftp\\|shift\\|shopt\\|shutdown\\|sleep\\|slocate\\|sort\\|source\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|sync\\|tail\\|tar\\|tee\\|test\\|time\\|timeout\\|times\\|touch\\|top\\|traceroute\\|trap\\|tr\\|tsort\\|tty\\|type\\|ulimit\\|umask\\|umount\\|unalias\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uuencode\\|uudecode\\|v\\|vdir\\|vi\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yes\\|zip\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "keyword": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:let\\|:\\|\\\\\\.\\|if\\|then\\|else\\|elif\\|fi\\|for\\|break\\|continue\\|while\\|in\\|case\\|function\\|select\\|do\\|done\\|until\\|echo\\|exit\\|return\\|set\\|declare\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "operator": /&&\\?\\|\\\\\\|\\\\\\|\\?\\|==\\?\\|!=\\?\\|<<<\\?\\|>>\\|<=\\?\\|>=\\?\\|=~/,
                                                  "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\]/,
                                                  "string": [Circular],
                                                  "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                                },
                                                "pattern": /\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                              },
                                              /\\\\\\$\\(\\?:\\[\\\\w#\\?\\*!@\\]\\+\\|\\\\\\{\\[\\^\\}\\]\\+\\\\\\}\\)/i,
                                            ],
                                          },
                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1/,
                                        },
                                      ],
                                      "variable": Array [
                                        Object {
                                          "inside": Object {
                                            "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                            "operator": /--\\?\\|-=\\|\\\\\\+\\\\\\+\\?\\|\\\\\\+=\\|!=\\?\\|~\\|\\\\\\*\\\\\\*\\?\\|\\\\\\*=\\|\\\\/=\\?\\|%=\\?\\|<<=\\?\\|>>=\\?\\|<=\\?\\|>=\\?\\|==\\?\\|&&\\?\\|&=\\|\\\\\\^=\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\|=\\|\\\\\\?\\|:/,
                                            "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                            "variable": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                              },
                                              /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                            ],
                                          },
                                          "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "boolean": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                            },
                                            "function": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:alias\\|apropos\\|apt-get\\|aptitude\\|aspell\\|awk\\|basename\\|bash\\|bc\\|bg\\|builtin\\|bzip2\\|cal\\|cat\\|cd\\|cfdisk\\|chgrp\\|chmod\\|chown\\|chroot\\|chkconfig\\|cksum\\|clear\\|cmp\\|comm\\|command\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|enable\\|env\\|ethtool\\|eval\\|exec\\|expand\\|expect\\|export\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|getopts\\|git\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|gzip\\|hash\\|head\\|help\\|hg\\|history\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logout\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|make\\|man\\|mkdir\\|mkfifo\\|mkisofs\\|mknod\\|more\\|most\\|mount\\|mtools\\|mtr\\|mv\\|mmv\\|nano\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|open\\|op\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|popd\\|pr\\|printcap\\|printenv\\|printf\\|ps\\|pushd\\|pv\\|pwd\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|read\\|readarray\\|readonly\\|reboot\\|rename\\|renice\\|remsync\\|rev\\|rm\\|rmdir\\|rsync\\|screen\\|scp\\|sdiff\\|sed\\|seq\\|service\\|sftp\\|shift\\|shopt\\|shutdown\\|sleep\\|slocate\\|sort\\|source\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|sync\\|tail\\|tar\\|tee\\|test\\|time\\|timeout\\|times\\|touch\\|top\\|traceroute\\|trap\\|tr\\|tsort\\|tty\\|type\\|ulimit\\|umask\\|umount\\|unalias\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uuencode\\|uudecode\\|v\\|vdir\\|vi\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yes\\|zip\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                            },
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:let\\|:\\|\\\\\\.\\|if\\|then\\|else\\|elif\\|fi\\|for\\|break\\|continue\\|while\\|in\\|case\\|function\\|select\\|do\\|done\\|until\\|echo\\|exit\\|return\\|set\\|declare\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                            },
                                            "operator": /&&\\?\\|\\\\\\|\\\\\\|\\?\\|==\\?\\|!=\\?\\|<<<\\?\\|>>\\|<=\\?\\|>=\\?\\|=~/,
                                            "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\]/,
                                            "string": Array [
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "variable": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<\\\\s\\*\\)\\["'\\]\\?\\(\\\\w\\+\\?\\)\\["'\\]\\?\\\\s\\*\\\\r\\?\\\\n\\(\\?:\\[\\\\s\\\\S\\]\\)\\*\\?\\\\r\\?\\\\n\\\\2/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "variable": [Circular],
                                                },
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1/,
                                              },
                                            ],
                                            "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                          },
                                          "pattern": /\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                        },
                                        /\\\\\\$\\(\\?:\\[\\\\w#\\?\\*!@\\]\\+\\|\\\\\\{\\[\\^\\}\\]\\+\\\\\\}\\)/i,
                                      ],
                                    },
                                    "c": Object {
                                      "comment": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "constant": /\\\\b\\(\\?:__FILE__\\|__LINE__\\|__DATE__\\|__TIME__\\|__TIMESTAMP__\\|__func__\\|EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|stdin\\|stdout\\|stderr\\)\\\\b/,
                                      "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "keyword": /\\\\b\\(\\?:_Alignas\\|_Alignof\\|_Atomic\\|_Bool\\|_Complex\\|_Generic\\|_Imaginary\\|_Noreturn\\|_Static_assert\\|_Thread_local\\|asm\\|typeof\\|inline\\|auto\\|break\\|case\\|char\\|const\\|continue\\|default\\|do\\|double\\|else\\|enum\\|extern\\|float\\|for\\|goto\\|if\\|int\\|long\\|register\\|return\\|short\\|signed\\|sizeof\\|static\\|struct\\|switch\\|typedef\\|union\\|unsigned\\|void\\|volatile\\|while\\)\\\\b/,
                                      "macro": Object {
                                        "alias": "property",
                                        "inside": Object {
                                          "directive": Object {
                                            "alias": "keyword",
                                            "lookbehind": true,
                                            "pattern": /\\(#\\\\s\\*\\)\\\\b\\(\\?:define\\|defined\\|elif\\|else\\|endif\\|error\\|ifdef\\|ifndef\\|if\\|import\\|include\\|line\\|pragma\\|undef\\|using\\)\\\\b/,
                                          },
                                          "string": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(#\\\\s\\*include\\\\s\\*\\)\\(\\?:<\\.\\+\\?>\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\?\\.\\)\\+\\?\\\\2\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)#\\\\s\\*\\[a-z\\]\\+\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*/im,
                                      },
                                      "number": /\\(\\?:\\\\b0x\\[\\\\da-f\\]\\+\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\[ful\\]\\*/i,
                                      "operator": /-\\[>-\\]\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?\\|<<\\?=\\?\\|>>\\?=\\?\\|==\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\[~\\^%\\?\\*\\\\/\\]/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                    },
                                    "clike": Object {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-name": Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                      },
                                      "comment": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "keyword": /\\\\b\\(\\?:if\\|else\\|while\\|do\\|for\\|return\\|in\\|instanceof\\|function\\|new\\|try\\|throw\\|catch\\|finally\\|null\\|break\\|continue\\)\\\\b/,
                                      "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                      "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                    },
                                    "coffeescript": Object {
                                      "block-regex": Object {
                                        "alias": "regex",
                                        "inside": Object {
                                          "comment": /#\\(\\?!\\\\\\{\\)\\.\\+/,
                                          "interpolation": Object {
                                            "alias": "variable",
                                            "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                          },
                                        },
                                        "pattern": /\\\\/\\{3\\}\\[\\\\s\\\\S\\]\\*\\?\\\\/\\{3\\}/,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-member": Object {
                                        "alias": "variable",
                                        "pattern": /@\\(\\?!\\\\d\\)\\\\w\\+/,
                                      },
                                      "class-name": Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                      },
                                      "comment": /#\\(\\?!\\\\\\{\\)\\.\\+/,
                                      "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                      "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                      "function-variable": Object {
                                        "alias": "function",
                                        "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                      },
                                      "inline-javascript": Object {
                                        "inside": Object {
                                          "delimiter": Object {
                                            "alias": "punctuation",
                                            "pattern": /\\^\`\\|\`\\$/,
                                          },
                                          "rest": Object {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "class-name": Object {
                                              "inside": Object {
                                                "punctuation": /\\[\\.\\\\\\\\\\]/,
                                              },
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                            },
                                            "comment": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                              },
                                            ],
                                            "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                            "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                            "function-variable": Object {
                                              "alias": "function",
                                              "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                            },
                                            "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                            "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                            "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                            "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                            "regex": Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                            },
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                            },
                                            "template-string": Object {
                                              "greedy": true,
                                              "inside": Object {
                                                "interpolation": Object {
                                                  "inside": Object {
                                                    "interpolation-punctuation": Object {
                                                      "alias": "punctuation",
                                                      "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                    },
                                                    "rest": [Circular],
                                                  },
                                                  "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                                },
                                                "string": /\\[\\\\s\\\\S\\]\\+/,
                                              },
                                              "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                            },
                                          },
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                      "keyword": /\\\\b\\(\\?:and\\|break\\|by\\|catch\\|class\\|continue\\|debugger\\|delete\\|do\\|each\\|else\\|extend\\|extends\\|false\\|finally\\|for\\|if\\|in\\|instanceof\\|is\\|isnt\\|let\\|loop\\|namespace\\|new\\|no\\|not\\|null\\|of\\|off\\|on\\|or\\|own\\|return\\|super\\|switch\\|then\\|this\\|throw\\|true\\|try\\|typeof\\|undefined\\|unless\\|until\\|when\\|while\\|window\\|with\\|yes\\|yield\\)\\\\b/,
                                      "multiline-comment": Object {
                                        "alias": "comment",
                                        "pattern": /###\\[\\\\s\\\\S\\]\\+\\?###/,
                                      },
                                      "multiline-string": Array [
                                        Object {
                                          "alias": "string",
                                          "greedy": true,
                                          "pattern": /'''\\[\\\\s\\\\S\\]\\*\\?'''/,
                                        },
                                        Object {
                                          "alias": "string",
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "alias": "variable",
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /"""\\[\\\\s\\\\S\\]\\*\\?"""/,
                                        },
                                      ],
                                      "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                      "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                      "property": /\\(\\?!\\\\d\\)\\\\w\\+\\(\\?=\\\\s\\*:\\(\\?!:\\)\\)/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                      },
                                      "string": Array [
                                        Object {
                                          "greedy": true,
                                          "pattern": /'\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\'\\]\\)\\*'/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "alias": "variable",
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\"\\]\\)\\*"/,
                                        },
                                      ],
                                    },
                                    "cpp": Object {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-name": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(class\\\\s\\+\\)\\\\w\\+/i,
                                      },
                                      "comment": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "constant": /\\\\b\\(\\?:__FILE__\\|__LINE__\\|__DATE__\\|__TIME__\\|__TIMESTAMP__\\|__func__\\|EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|stdin\\|stdout\\|stderr\\)\\\\b/,
                                      "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "keyword": /\\\\b\\(\\?:alignas\\|alignof\\|asm\\|auto\\|bool\\|break\\|case\\|catch\\|char\\|char16_t\\|char32_t\\|class\\|compl\\|const\\|constexpr\\|const_cast\\|continue\\|decltype\\|default\\|delete\\|do\\|double\\|dynamic_cast\\|else\\|enum\\|explicit\\|export\\|extern\\|float\\|for\\|friend\\|goto\\|if\\|inline\\|int\\|int8_t\\|int16_t\\|int32_t\\|int64_t\\|uint8_t\\|uint16_t\\|uint32_t\\|uint64_t\\|long\\|mutable\\|namespace\\|new\\|noexcept\\|nullptr\\|operator\\|private\\|protected\\|public\\|register\\|reinterpret_cast\\|return\\|short\\|signed\\|sizeof\\|static\\|static_assert\\|static_cast\\|struct\\|switch\\|template\\|this\\|thread_local\\|throw\\|try\\|typedef\\|typeid\\|typename\\|union\\|unsigned\\|using\\|virtual\\|void\\|volatile\\|wchar_t\\|while\\)\\\\b/,
                                      "macro": Object {
                                        "alias": "property",
                                        "inside": Object {
                                          "directive": Object {
                                            "alias": "keyword",
                                            "lookbehind": true,
                                            "pattern": /\\(#\\\\s\\*\\)\\\\b\\(\\?:define\\|defined\\|elif\\|else\\|endif\\|error\\|ifdef\\|ifndef\\|if\\|import\\|include\\|line\\|pragma\\|undef\\|using\\)\\\\b/,
                                          },
                                          "string": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(#\\\\s\\*include\\\\s\\*\\)\\(\\?:<\\.\\+\\?>\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\?\\.\\)\\+\\?\\\\2\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)#\\\\s\\*\\[a-z\\]\\+\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*/im,
                                      },
                                      "number": /\\(\\?:\\\\b0x\\[\\\\da-f\\]\\+\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\[ful\\]\\*/i,
                                      "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?\\|<\\{1,2\\}=\\?\\|>\\{1,2\\}=\\?\\|->\\|:\\{1,2\\}\\|=\\{1,2\\}\\|\\\\\\^\\|~\\|%\\|&\\{1,2\\}\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|\\\\b\\(\\?:and\\|and_eq\\|bitand\\|bitor\\|not\\|not_eq\\|or\\|or_eq\\|xor\\|xor_eq\\)\\\\b/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "raw-string": Object {
                                        "alias": "string",
                                        "greedy": true,
                                        "pattern": /R"\\(\\[\\^\\(\\)\\\\\\\\ \\]\\{0,16\\}\\)\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\)\\\\1"/,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                    },
                                    "css": Object {
                                      "atrule": Object {
                                        "inside": Object {
                                          "rest": [Circular],
                                          "rule": /@\\[\\\\w-\\]\\+/,
                                        },
                                        "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                      },
                                      "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                      "important": /\\\\B!important\\\\b/i,
                                      "number": /\\[\\\\d%\\.\\]\\+/,
                                      "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                      "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                      "selector": Object {
                                        "inside": Object {
                                          "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                          "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                          "id": /#\\[-:\\.\\\\w\\]\\+/,
                                          "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                          "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                        },
                                        "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                    },
                                    "diff": Object {
                                      "coord": Array [
                                        /\\^\\(\\?:\\\\\\*\\{3\\}\\|-\\{3\\}\\|\\\\\\+\\{3\\}\\)\\.\\*\\$/m,
                                        /\\^@@\\.\\*@@\\$/m,
                                        /\\^\\\\d\\+\\.\\*\\$/m,
                                      ],
                                      "deleted": /\\^\\[-<\\]\\.\\*\\$/m,
                                      "diff": Object {
                                        "alias": "important",
                                        "pattern": /\\^!\\(\\?!!\\)\\.\\+\\$/m,
                                      },
                                      "inserted": /\\^\\[\\+>\\]\\.\\*\\$/m,
                                    },
                                    "docker": Object {
                                      "comment": /#\\.\\*/,
                                      "keyword": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)\\(\\?:ADD\\|ARG\\|CMD\\|COPY\\|ENTRYPOINT\\|ENV\\|EXPOSE\\|FROM\\|HEALTHCHECK\\|LABEL\\|MAINTAINER\\|ONBUILD\\|RUN\\|SHELL\\|STOPSIGNAL\\|USER\\|VOLUME\\|WORKDIR\\)\\(\\?=\\\\s\\)/im,
                                      },
                                      "punctuation": /---\\|\\\\\\.\\\\\\.\\\\\\.\\|\\[:\\[\\\\\\]\\{\\}\\\\-,\\|>\\?\\]/,
                                      "string": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                    },
                                    "dockerfile": Object {
                                      "comment": /#\\.\\*/,
                                      "keyword": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)\\(\\?:ADD\\|ARG\\|CMD\\|COPY\\|ENTRYPOINT\\|ENV\\|EXPOSE\\|FROM\\|HEALTHCHECK\\|LABEL\\|MAINTAINER\\|ONBUILD\\|RUN\\|SHELL\\|STOPSIGNAL\\|USER\\|VOLUME\\|WORKDIR\\)\\(\\?=\\\\s\\)/im,
                                      },
                                      "punctuation": /---\\|\\\\\\.\\\\\\.\\\\\\.\\|\\[:\\[\\\\\\]\\{\\}\\\\-,\\|>\\?\\]/,
                                      "string": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                    },
                                    "elixir": Object {
                                      "argument": Object {
                                        "alias": "variable",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^&\\]\\)&\\\\d\\+/,
                                      },
                                      "atom": Object {
                                        "alias": "symbol",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^:\\]\\):\\\\w\\+/,
                                      },
                                      "attr-name": /\\\\w\\+:\\(\\?!:\\)/,
                                      "attribute": Object {
                                        "alias": "variable",
                                        "pattern": /@\\\\w\\+/,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\|nil\\)\\\\b/,
                                      "capture": Object {
                                        "alias": "function",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^&\\]\\)&\\(\\?:\\[\\^&\\\\s\\\\d\\(\\)\\]\\[\\^\\\\s\\(\\)\\]\\*\\|\\(\\?=\\\\\\(\\)\\)/,
                                      },
                                      "comment": Object {
                                        "lookbehind": true,
                                        "pattern": /#\\.\\*/m,
                                      },
                                      "keyword": /\\\\b\\(\\?:after\\|alias\\|and\\|case\\|catch\\|cond\\|def\\(\\?:callback\\|exception\\|impl\\|module\\|p\\|protocol\\|struct\\)\\?\\|do\\|else\\|end\\|fn\\|for\\|if\\|import\\|not\\|or\\|require\\|rescue\\|try\\|unless\\|use\\|when\\)\\\\b/,
                                      "number": /\\\\b\\(\\?:0\\[box\\]\\[a-f\\\\d_\\]\\+\\|\\\\d\\[\\\\d_\\]\\*\\)\\(\\?:\\\\\\.\\[\\\\d_\\]\\+\\)\\?\\(\\?:e\\[\\+-\\]\\?\\[\\\\d_\\]\\+\\)\\?\\\\b/i,
                                      "operator": Array [
                                        /\\\\bin\\\\b\\|&&\\?\\|\\\\\\|\\[\\|>\\]\\?\\|\\\\\\\\\\\\\\\\\\|::\\|\\\\\\.\\\\\\.\\\\\\.\\?\\|\\\\\\+\\\\\\+\\?\\|-\\[->\\]\\?\\|<\\[-=>\\]\\|>=\\|!==\\?\\|\\\\B!\\|=\\(\\?:==\\?\\|\\[>~\\]\\)\\?\\|\\[\\*\\\\/\\^\\]/,
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\[\\^<\\]\\)<\\(\\?!<\\)/,
                                        },
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\[\\^>\\]\\)>\\(\\?!>\\)/,
                                        },
                                      ],
                                      "punctuation": /<<\\|>>\\|\\[\\.,%\\\\\\[\\\\\\]\\{\\}\\(\\)\\]/,
                                      "regex": Object {
                                        "greedy": true,
                                        "pattern": /~\\[rR\\]\\(\\?:\\("""\\|'''\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\+\\\\1\\|\\(\\[\\\\/\\|"'\\]\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\+\\\\2\\|\\\\\\(\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\)\\\\r\\\\n\\]\\)\\+\\\\\\)\\|\\\\\\[\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\\\]\\\\r\\\\n\\]\\)\\+\\\\\\]\\|\\\\\\{\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\}\\\\r\\\\n\\]\\)\\+\\\\\\}\\|<\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\>\\\\r\\\\n\\]\\)\\+>\\)\\[uismxfr\\]\\*/,
                                      },
                                      "string": Array [
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^#\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /~\\[cCsSwW\\]\\(\\?:\\("""\\|'''\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\+\\\\1\\|\\(\\[\\\\/\\|"'\\]\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\+\\\\2\\|\\\\\\(\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\)\\\\r\\\\n\\]\\)\\+\\\\\\)\\|\\\\\\[\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\\\]\\\\r\\\\n\\]\\)\\+\\\\\\]\\|\\\\\\{\\(\\?:\\\\\\\\\\.\\|#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}\\|\\[\\^\\\\\\\\\\}\\\\r\\\\n\\]\\)\\+\\\\\\}\\|<\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\>\\\\r\\\\n\\]\\)\\+>\\)\\[csa\\]\\?/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^#\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /\\("""\\|'''\\)\\[\\\\s\\\\S\\]\\*\\?\\\\1/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^#\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                        },
                                      ],
                                    },
                                    "erlang": Object {
                                      "atom": /\\\\b\\[a-z\\]\\[\\\\w@\\]\\*/,
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "comment": /%\\.\\+/,
                                      "function": /\\\\b\\[a-z\\]\\[\\\\w@\\]\\*\\(\\?=\\\\\\(\\)/,
                                      "keyword": /\\\\b\\(\\?:fun\\|when\\|case\\|of\\|end\\|if\\|receive\\|after\\|try\\|catch\\)\\\\b/,
                                      "number": Array [
                                        /\\\\\\$\\\\\\\\\\?\\./,
                                        /\\\\d\\+#\\[a-z0-9\\]\\+/i,
                                        /\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                      ],
                                      "operator": Array [
                                        /\\[=\\\\/<>:\\]=\\|=\\[:\\\\/\\]=\\|\\\\\\+\\\\\\+\\?\\|--\\?\\|\\[=\\*\\\\/!\\]\\|\\\\b\\(\\?:bnot\\|div\\|rem\\|band\\|bor\\|bxor\\|bsl\\|bsr\\|not\\|and\\|or\\|xor\\|orelse\\|andalso\\)\\\\b/,
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^<\\]\\)<\\(\\?!<\\)/,
                                        },
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^>\\]\\)>\\(\\?!>\\)/,
                                        },
                                      ],
                                      "punctuation": /\\[\\(\\)\\[\\\\\\]\\{\\}:;,\\.#\\|\\]\\|<<\\|>>/,
                                      "quoted-atom": Object {
                                        "alias": "atom",
                                        "pattern": /'\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\'\\\\r\\\\n\\]\\)\\+'/,
                                      },
                                      "quoted-function": Object {
                                        "alias": "function",
                                        "pattern": /'\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\'\\\\r\\\\n\\]\\)\\+'\\(\\?=\\\\\\(\\)/,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"/,
                                      },
                                      "variable": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^@\\]\\)\\(\\?:\\\\b\\|\\\\\\?\\)\\[A-Z_\\]\\[\\\\w@\\]\\*/,
                                      },
                                    },
                                    "extend": [Function],
                                    "git": Object {
                                      "command": Object {
                                        "inside": Object {
                                          "parameter": /\\\\s--\\?\\\\w\\+/m,
                                        },
                                        "pattern": /\\^\\.\\*\\\\\\$ git \\.\\*\\$/m,
                                      },
                                      "comment": /\\^#\\.\\*/m,
                                      "commit_sha1": /\\^commit \\\\w\\{40\\}\\$/m,
                                      "coord": /\\^@@\\.\\*@@\\$/m,
                                      "deleted": /\\^\\[-–\\]\\.\\*/m,
                                      "inserted": /\\^\\\\\\+\\.\\*/m,
                                      "string": /\\("\\|'\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/m,
                                    },
                                    "go": Object {
                                      "boolean": /\\\\b\\(\\?:_\\|iota\\|nil\\|true\\|false\\)\\\\b/,
                                      "builtin": /\\\\b\\(\\?:bool\\|byte\\|complex\\(\\?:64\\|128\\)\\|error\\|float\\(\\?:32\\|64\\)\\|rune\\|string\\|u\\?int\\(\\?:8\\|16\\|32\\|64\\)\\?\\|uintptr\\|append\\|cap\\|close\\|complex\\|copy\\|delete\\|imag\\|len\\|make\\|new\\|panic\\|print\\(\\?:ln\\)\\?\\|real\\|recover\\)\\\\b/,
                                      "comment": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "keyword": /\\\\b\\(\\?:break\\|case\\|chan\\|const\\|continue\\|default\\|defer\\|else\\|fallthrough\\|for\\|func\\|go\\(\\?:to\\)\\?\\|if\\|import\\|interface\\|map\\|package\\|range\\|return\\|select\\|struct\\|switch\\|type\\|var\\)\\\\b/,
                                      "number": /\\(\\?:\\\\b0x\\[a-f\\\\d\\]\\+\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[-\\+\\]\\?\\\\d\\+\\)\\?\\)i\\?/i,
                                      "operator": /\\[\\*\\\\/%\\^!=\\]=\\?\\|\\\\\\+\\[=\\+\\]\\?\\|-\\[=-\\]\\?\\|\\\\\\|\\[=\\|\\]\\?\\|&\\(\\?:=\\|&\\|\\\\\\^=\\?\\)\\?\\|>\\(\\?:>=\\?\\|=\\)\\?\\|<\\(\\?:<=\\?\\|=\\|-\\)\\?\\|:=\\|\\\\\\.\\\\\\.\\\\\\./,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\`\\]\\)\\(\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1/,
                                      },
                                    },
                                    "graphql": Object {
                                      "attr-name": /\\[a-z_\\]\\\\w\\*\\(\\?=\\\\s\\*:\\)/i,
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "comment": /#\\.\\*/,
                                      "directive": Object {
                                        "alias": "function",
                                        "pattern": /@\\[a-z_\\]\\\\w\\*/i,
                                      },
                                      "keyword": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(fragment\\\\s\\+\\(\\?!on\\)\\[a-z_\\]\\\\w\\*\\\\s\\+\\|\\\\\\.\\{3\\}\\\\s\\*\\)on\\\\b/,
                                        },
                                        /\\\\b\\(\\?:query\\|fragment\\|mutation\\)\\\\b/,
                                      ],
                                      "number": /\\(\\?:\\\\B-\\|\\\\b\\)\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\\\b/i,
                                      "operator": /!\\|=\\|\\\\\\.\\{3\\}/,
                                      "punctuation": /\\[!\\(\\)\\{\\}\\\\\\[\\\\\\]:=,\\]/,
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"/,
                                      },
                                      "variable": /\\\\\\$\\[a-z_\\]\\\\w\\*/i,
                                    },
                                    "handlebars": Object {
                                      "block": Object {
                                        "alias": "keyword",
                                        "lookbehind": true,
                                        "pattern": /\\^\\(\\\\s\\*~\\?\\\\s\\*\\)\\[#\\\\/\\]\\\\S\\+\\?\\(\\?=\\\\s\\*~\\?\\\\s\\*\\$\\|\\\\s\\)/i,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "brackets": Object {
                                        "inside": Object {
                                          "punctuation": /\\\\\\[\\|\\\\\\]/,
                                          "variable": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                        "pattern": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                      },
                                      "comment": /\\\\\\{\\\\\\{!\\[\\\\s\\\\S\\]\\*\\?\\\\\\}\\\\\\}/,
                                      "delimiter": Object {
                                        "alias": "punctuation",
                                        "pattern": /\\^\\\\\\{\\\\\\{\\\\\\{\\?\\|\\\\\\}\\\\\\}\\\\\\}\\?\\$/i,
                                      },
                                      "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                      "punctuation": /\\[!"#%&'\\(\\)\\*\\+,\\.\\\\/;<=>@\\\\\\[\\\\\\\\\\\\\\]\\^\`\\{\\|\\}~\\]/,
                                      "string": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      "variable": /\\[\\^!"#%&'\\(\\)\\*\\+,\\.\\\\/;<=>@\\\\\\[\\\\\\\\\\\\\\]\\^\`\\{\\|\\}~\\\\s\\]\\+/,
                                    },
                                    "haskell": Object {
                                      "builtin": /\\\\b\\(\\?:abs\\|acos\\|acosh\\|all\\|and\\|any\\|appendFile\\|approxRational\\|asTypeOf\\|asin\\|asinh\\|atan\\|atan2\\|atanh\\|basicIORun\\|break\\|catch\\|ceiling\\|chr\\|compare\\|concat\\|concatMap\\|const\\|cos\\|cosh\\|curry\\|cycle\\|decodeFloat\\|denominator\\|digitToInt\\|div\\|divMod\\|drop\\|dropWhile\\|either\\|elem\\|encodeFloat\\|enumFrom\\|enumFromThen\\|enumFromThenTo\\|enumFromTo\\|error\\|even\\|exp\\|exponent\\|fail\\|filter\\|flip\\|floatDigits\\|floatRadix\\|floatRange\\|floor\\|fmap\\|foldl\\|foldl1\\|foldr\\|foldr1\\|fromDouble\\|fromEnum\\|fromInt\\|fromInteger\\|fromIntegral\\|fromRational\\|fst\\|gcd\\|getChar\\|getContents\\|getLine\\|group\\|head\\|id\\|inRange\\|index\\|init\\|intToDigit\\|interact\\|ioError\\|isAlpha\\|isAlphaNum\\|isAscii\\|isControl\\|isDenormalized\\|isDigit\\|isHexDigit\\|isIEEE\\|isInfinite\\|isLower\\|isNaN\\|isNegativeZero\\|isOctDigit\\|isPrint\\|isSpace\\|isUpper\\|iterate\\|last\\|lcm\\|length\\|lex\\|lexDigits\\|lexLitChar\\|lines\\|log\\|logBase\\|lookup\\|map\\|mapM\\|mapM_\\|max\\|maxBound\\|maximum\\|maybe\\|min\\|minBound\\|minimum\\|mod\\|negate\\|not\\|notElem\\|null\\|numerator\\|odd\\|or\\|ord\\|otherwise\\|pack\\|pi\\|pred\\|primExitWith\\|print\\|product\\|properFraction\\|putChar\\|putStr\\|putStrLn\\|quot\\|quotRem\\|range\\|rangeSize\\|read\\|readDec\\|readFile\\|readFloat\\|readHex\\|readIO\\|readInt\\|readList\\|readLitChar\\|readLn\\|readOct\\|readParen\\|readSigned\\|reads\\|readsPrec\\|realToFrac\\|recip\\|rem\\|repeat\\|replicate\\|return\\|reverse\\|round\\|scaleFloat\\|scanl\\|scanl1\\|scanr\\|scanr1\\|seq\\|sequence\\|sequence_\\|show\\|showChar\\|showInt\\|showList\\|showLitChar\\|showParen\\|showSigned\\|showString\\|shows\\|showsPrec\\|significand\\|signum\\|sin\\|sinh\\|snd\\|sort\\|span\\|splitAt\\|sqrt\\|subtract\\|succ\\|sum\\|tail\\|take\\|takeWhile\\|tan\\|tanh\\|threadToIOResult\\|toEnum\\|toInt\\|toInteger\\|toLower\\|toRational\\|toUpper\\|truncate\\|uncurry\\|undefined\\|unlines\\|until\\|unwords\\|unzip\\|unzip3\\|userError\\|words\\|writeFile\\|zip\\|zip3\\|zipWith\\|zipWith3\\)\\\\b/,
                                      "char": /'\\(\\?:\\[\\^\\\\\\\\'\\]\\|\\\\\\\\\\(\\?:\\[abfnrtv\\\\\\\\"'&\\]\\|\\\\\\^\\[A-Z@\\[\\\\\\]\\^_\\]\\|NUL\\|SOH\\|STX\\|ETX\\|EOT\\|ENQ\\|ACK\\|BEL\\|BS\\|HT\\|LF\\|VT\\|FF\\|CR\\|SO\\|SI\\|DLE\\|DC1\\|DC2\\|DC3\\|DC4\\|NAK\\|SYN\\|ETB\\|CAN\\|EM\\|SUB\\|ESC\\|FS\\|GS\\|RS\\|US\\|SP\\|DEL\\|\\\\d\\+\\|o\\[0-7\\]\\+\\|x\\[0-9a-fA-F\\]\\+\\)\\)'/,
                                      "comment": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^-!#\\$%\\*\\+=\\?&@\\|~\\.:<>\\^\\\\\\\\\\\\/\\]\\)\\(\\?:--\\[\\^-!#\\$%\\*\\+=\\?&@\\|~\\.:<>\\^\\\\\\\\\\\\/\\]\\.\\*\\|\\{-\\[\\\\s\\\\S\\]\\*\\?-\\}\\)/m,
                                      },
                                      "constant": /\\\\b\\(\\?:\\[A-Z\\]\\[\\\\w'\\]\\*\\\\\\.\\)\\*\\[A-Z\\]\\[\\\\w'\\]\\*\\\\b/,
                                      "hvariable": /\\\\b\\(\\?:\\[A-Z\\]\\[\\\\w'\\]\\*\\\\\\.\\)\\*\\[_a-z\\]\\[\\\\w'\\]\\*\\\\b/,
                                      "import_statement": Object {
                                        "inside": Object {
                                          "keyword": /\\\\b\\(\\?:import\\|qualified\\|as\\|hiding\\)\\\\b/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\|\\^\\)\\\\s\\*\\)import\\\\s\\+\\(\\?:qualified\\\\s\\+\\)\\?\\(\\?:\\[A-Z\\]\\[\\\\w'\\]\\*\\)\\(\\?:\\\\\\.\\[A-Z\\]\\[\\\\w'\\]\\*\\)\\*\\(\\?:\\\\s\\+as\\\\s\\+\\(\\?:\\[A-Z\\]\\[_a-zA-Z0-9'\\]\\*\\)\\(\\?:\\\\\\.\\[A-Z\\]\\[\\\\w'\\]\\*\\)\\*\\)\\?\\(\\?:\\\\s\\+hiding\\\\b\\)\\?/m,
                                      },
                                      "keyword": /\\\\b\\(\\?:case\\|class\\|data\\|deriving\\|do\\|else\\|if\\|in\\|infixl\\|infixr\\|instance\\|let\\|module\\|newtype\\|of\\|primitive\\|then\\|type\\|where\\)\\\\b/,
                                      "number": /\\\\b\\(\\?:\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|0o\\[0-7\\]\\+\\|0x\\[0-9a-f\\]\\+\\)\\\\b/i,
                                      "operator": /\\\\s\\\\\\.\\\\s\\|\\[-!#\\$%\\*\\+=\\?&@\\|~\\.:<>\\^\\\\\\\\\\\\/\\]\\*\\\\\\.\\[-!#\\$%\\*\\+=\\?&@\\|~\\.:<>\\^\\\\\\\\\\\\/\\]\\+\\|\\[-!#\\$%\\*\\+=\\?&@\\|~\\.:<>\\^\\\\\\\\\\\\/\\]\\+\\\\\\.\\[-!#\\$%\\*\\+=\\?&@\\|~\\.:<>\\^\\\\\\\\\\\\/\\]\\*\\|\\[-!#\\$%\\*\\+=\\?&@\\|~:<>\\^\\\\\\\\\\\\/\\]\\+\\|\`\\(\\[A-Z\\]\\[\\\\w'\\]\\*\\\\\\.\\)\\*\\[_a-z\\]\\[\\\\w'\\]\\*\`/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /"\\(\\?:\\[\\^\\\\\\\\"\\]\\|\\\\\\\\\\(\\?:\\[abfnrtv\\\\\\\\"'&\\]\\|\\\\\\^\\[A-Z@\\[\\\\\\]\\^_\\]\\|NUL\\|SOH\\|STX\\|ETX\\|EOT\\|ENQ\\|ACK\\|BEL\\|BS\\|HT\\|LF\\|VT\\|FF\\|CR\\|SO\\|SI\\|DLE\\|DC1\\|DC2\\|DC3\\|DC4\\|NAK\\|SYN\\|ETB\\|CAN\\|EM\\|SUB\\|ESC\\|FS\\|GS\\|RS\\|US\\|SP\\|DEL\\|\\\\d\\+\\|o\\[0-7\\]\\+\\|x\\[0-9a-fA-F\\]\\+\\)\\|\\\\\\\\\\\\s\\+\\\\\\\\\\)\\*"/,
                                      },
                                    },
                                    "html": Object {
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": /<!DOCTYPE\\[\\\\s\\\\S\\]\\+\\?>/i,
                                      "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "script": Object {
                                        "alias": "language-javascript",
                                        "greedy": true,
                                        "inside": Object {
                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                          "class-name": Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                          },
                                          "comment": Array [
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                            },
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                            },
                                          ],
                                          "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                          "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                          "function-variable": Object {
                                            "alias": "function",
                                            "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                          },
                                          "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                          "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "template-string": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "style": Object {
                                        "alias": "language-css",
                                        "greedy": true,
                                        "inside": Object {
                                          "atrule": Object {
                                            "inside": Object {
                                              "rest": [Circular],
                                              "rule": /@\\[\\\\w-\\]\\+/,
                                            },
                                            "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                          },
                                          "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                          "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                          "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                          "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                          "important": /\\\\B!important\\\\b/i,
                                          "number": /\\[\\\\d%\\.\\]\\+/,
                                          "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                          "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                          "selector": Object {
                                            "inside": Object {
                                              "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                              "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                              "id": /#\\[-:\\.\\\\w\\]\\+/,
                                              "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            },
                                            "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "tag": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "attr-name": Object {
                                            "inside": Object {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": Object {
                                            "inside": Object {
                                              "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                              "punctuation": Array [
                                                /\\^=/,
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                },
                                              ],
                                            },
                                            "pattern": /=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)/i,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "style-attr": Object {
                                            "alias": "language-css",
                                            "inside": Object {
                                              "attr-name": Object {
                                                "inside": Object {
                                                  "attr-name": Object {
                                                    "inside": Object {
                                                      "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                    },
                                                    "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                                  },
                                                  "attr-value": Object {
                                                    "inside": Object {
                                                      "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                                      "punctuation": Array [
                                                        /\\^=/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                        },
                                                      ],
                                                    },
                                                    "pattern": /=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)/i,
                                                  },
                                                  "punctuation": /\\\\/\\?>/,
                                                  "tag": Object {
                                                    "inside": Object {
                                                      "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                      "punctuation": /\\^<\\\\/\\?/,
                                                    },
                                                    "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/i,
                                                  },
                                                },
                                                "pattern": /\\^\\\\s\\*style/i,
                                              },
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "atrule": Object {
                                                    "inside": Object {
                                                      "rest": [Circular],
                                                      "rule": /@\\[\\\\w-\\]\\+/,
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                                  },
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                                  "important": /\\\\B!important\\\\b/i,
                                                  "number": /\\[\\\\d%\\.\\]\\+/,
                                                  "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                                  "selector": Object {
                                                    "inside": Object {
                                                      "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                                      "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                                      "id": /#\\[-:\\.\\\\w\\]\\+/,
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    },
                                                    "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                                },
                                                "pattern": /\\.\\+/i,
                                              },
                                              "punctuation": /\\^\\\\s\\*=\\\\s\\*\\['"\\]\\|\\['"\\]\\\\s\\*\\$/,
                                            },
                                            "pattern": /\\\\s\\*style=\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1/i,
                                          },
                                          "tag": Object {
                                            "inside": Object {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/i,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\+\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)\\)\\?\\)\\*\\\\s\\*\\\\/\\?>/i,
                                      },
                                    },
                                    "insertBefore": [Function],
                                    "java": Object {
                                      "annotation": Object {
                                        "alias": "punctuation",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\)@\\\\w\\+/,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-name": Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                      },
                                      "comment": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "generics": Object {
                                        "alias": "function",
                                        "inside": Object {
                                          "keyword": /\\\\b\\(\\?:abstract\\|continue\\|for\\|new\\|switch\\|assert\\|default\\|goto\\|package\\|synchronized\\|boolean\\|do\\|if\\|private\\|this\\|break\\|double\\|implements\\|protected\\|throw\\|byte\\|else\\|import\\|public\\|throws\\|case\\|enum\\|instanceof\\|return\\|transient\\|catch\\|extends\\|int\\|short\\|try\\|char\\|final\\|interface\\|static\\|void\\|class\\|finally\\|long\\|strictfp\\|volatile\\|const\\|float\\|native\\|super\\|while\\)\\\\b/,
                                          "punctuation": /\\[<>\\(\\),\\.:\\]/,
                                        },
                                        "pattern": /<\\\\s\\*\\\\w\\+\\(\\?:\\\\\\.\\\\w\\+\\)\\?\\(\\?:\\\\s\\*,\\\\s\\*\\\\w\\+\\(\\?:\\\\\\.\\\\w\\+\\)\\?\\)\\*>/i,
                                      },
                                      "keyword": /\\\\b\\(\\?:abstract\\|continue\\|for\\|new\\|switch\\|assert\\|default\\|goto\\|package\\|synchronized\\|boolean\\|do\\|if\\|private\\|this\\|break\\|double\\|implements\\|protected\\|throw\\|byte\\|else\\|import\\|public\\|throws\\|case\\|enum\\|instanceof\\|return\\|transient\\|catch\\|extends\\|int\\|short\\|try\\|char\\|final\\|interface\\|static\\|void\\|class\\|finally\\|long\\|strictfp\\|volatile\\|const\\|float\\|native\\|super\\|while\\)\\\\b/,
                                      "number": /\\\\b0b\\[01\\]\\+\\\\b\\|\\\\b0x\\[\\\\da-f\\]\\*\\\\\\.\\?\\[\\\\da-fp-\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\[df\\]\\?/i,
                                      "operator": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\.\\]\\)\\(\\?:\\\\\\+\\[\\+=\\]\\?\\|-\\[-=\\]\\?\\|!=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|==\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*=\\?\\|\\\\/=\\?\\|%=\\?\\|\\\\\\^=\\?\\|\\[\\?:~\\]\\)/m,
                                      },
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                    },
                                    "javascript": Object {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-name": Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                      },
                                      "comment": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                      "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                      "function-variable": Object {
                                        "alias": "function",
                                        "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                      },
                                      "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                      "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "template-string": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    },
                                    "js": Object {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-name": Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                      },
                                      "comment": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                      "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                      "function-variable": Object {
                                        "alias": "function",
                                        "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                      },
                                      "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                      "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "template-string": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    },
                                    "json": Object {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/i,
                                      "null": /\\\\bnull\\\\b/i,
                                      "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                      "operator": /:/g,
                                      "property": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\(\\?=\\\\s\\*:\\)/i,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\]\\);,\\]/,
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\(\\?!\\\\s\\*:\\)/,
                                      },
                                    },
                                    "jsonp": Object {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/i,
                                      "null": /\\\\bnull\\\\b/i,
                                      "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                      "operator": /:/g,
                                      "property": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\(\\?=\\\\s\\*:\\)/i,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\]\\);,\\]/,
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\"\\\\r\\\\n\\]\\)\\*"\\(\\?!\\\\s\\*:\\)/,
                                      },
                                    },
                                    "jsx": Object {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "class-name": Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                      },
                                      "comment": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                      "doctype": /<!DOCTYPE\\[\\\\s\\\\S\\]\\+\\?>/i,
                                      "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                      "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                      "function-variable": Object {
                                        "alias": "function",
                                        "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                      },
                                      "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                      "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                      "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                      },
                                      "script": Object {
                                        "alias": "language-javascript",
                                        "greedy": true,
                                        "inside": Object {
                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                          "class-name": Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                          },
                                          "comment": Array [
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                            },
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                            },
                                          ],
                                          "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                          "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                          "function-variable": Object {
                                            "alias": "function",
                                            "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                          },
                                          "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                          "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "template-string": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "style": Object {
                                        "alias": "language-css",
                                        "greedy": true,
                                        "inside": Object {
                                          "atrule": Object {
                                            "inside": Object {
                                              "rest": [Circular],
                                              "rule": /@\\[\\\\w-\\]\\+/,
                                            },
                                            "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                          },
                                          "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                          "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                          "important": /\\\\B!important\\\\b/i,
                                          "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                          "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                          "selector": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\};\\]\\*\\?\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "tag": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "attr-name": Object {
                                            "inside": Object {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": Object {
                                            "inside": Object {
                                              "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                              "punctuation": Array [
                                                /\\^=/,
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                },
                                              ],
                                            },
                                            "pattern": /=\\(\\?!\\\\\\{\\)\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">\\]\\+\\)/i,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "script": Object {
                                            "alias": "language-javascript",
                                            "inside": Object {
                                              "rest": [Circular],
                                              "script-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^=\\(\\?=\\{\\)/,
                                              },
                                            },
                                            "pattern": /=\\(\\\\\\{\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\|\\[\\^\\}\\]\\)\\*\\\\\\}\\|\\[\\^\\}\\]\\)\\+\\\\\\}\\)/i,
                                          },
                                          "spread": Object {
                                            "inside": Object {
                                              "attr-value": /\\\\w\\+/,
                                              "punctuation": /\\\\\\.\\{3\\}\\|\\[\\{\\}\\.\\]/,
                                            },
                                            "pattern": /\\\\\\{\\\\\\.\\{3\\}\\[a-z_\\$\\]\\[\\\\w\\$\\]\\*\\(\\?:\\\\\\.\\[a-z_\\$\\]\\[\\\\w\\$\\]\\*\\)\\*\\\\\\}/,
                                          },
                                          "style-attr": Object {
                                            "alias": "language-css",
                                            "inside": Object {
                                              "attr-name": Object {
                                                "inside": Object {
                                                  "attr-name": Object {
                                                    "inside": Object {
                                                      "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                    },
                                                    "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                                  },
                                                  "attr-value": Object {
                                                    "inside": Object {
                                                      "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                                      "punctuation": Array [
                                                        /\\^=/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                        },
                                                      ],
                                                    },
                                                    "pattern": /=\\(\\?!\\\\\\{\\)\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">\\]\\+\\)/i,
                                                  },
                                                  "punctuation": /\\\\/\\?>/,
                                                  "tag": Object {
                                                    "inside": Object {
                                                      "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                      "punctuation": /\\^<\\\\/\\?/,
                                                    },
                                                    "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\*/i,
                                                  },
                                                },
                                                "pattern": /\\^\\\\s\\*style/i,
                                              },
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "atrule": Object {
                                                    "inside": Object {
                                                      "rest": [Circular],
                                                      "rule": /@\\[\\\\w-\\]\\+/,
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                                  },
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "important": /\\\\B!important\\\\b/i,
                                                  "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                                  "selector": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\};\\]\\*\\?\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                                },
                                                "pattern": /\\.\\+/i,
                                              },
                                              "punctuation": /\\^\\\\s\\*=\\\\s\\*\\['"\\]\\|\\['"\\]\\\\s\\*\\$/,
                                            },
                                            "pattern": /\\\\s\\*style=\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1/i,
                                          },
                                          "tag": Object {
                                            "inside": Object {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\*/i,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?:\\[\\\\w\\.:-\\]\\+\\\\s\\*\\(\\?:\\\\s\\+\\(\\?:\\[\\\\w\\.:-\\]\\+\\(\\?:=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s\\{'">=\\]\\+\\|\\\\\\{\\(\\?:\\\\\\{\\(\\?:\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\*\\\\\\}\\|\\[\\^\\{\\}\\]\\)\\+\\\\\\}\\)\\)\\?\\|\\\\\\{\\\\\\.\\{3\\}\\[a-z_\\$\\]\\[\\\\w\\$\\]\\*\\(\\?:\\\\\\.\\[a-z_\\$\\]\\[\\\\w\\$\\]\\*\\)\\*\\\\\\}\\)\\)\\*\\\\s\\*\\\\/\\?\\)\\?>/i,
                                      },
                                      "template-string": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                              },
                                              "rest": Object {
                                                "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                "class-name": Object {
                                                  "inside": Object {
                                                    "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                  },
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                                },
                                                "comment": Array [
                                                  Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                                  },
                                                  Object {
                                                    "greedy": true,
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                                  },
                                                ],
                                                "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                                "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                                "function-variable": Object {
                                                  "alias": "function",
                                                  "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                                },
                                                "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                                "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                                "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                                "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                "regex": Object {
                                                  "greedy": true,
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                                },
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                },
                                                "template-string": [Circular],
                                              },
                                            },
                                            "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    },
                                    "latex": Object {
                                      "cdata": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\\\begin\\\\\\{\\(\\(\\?:verbatim\\|lstlisting\\)\\\\\\*\\?\\)\\\\\\}\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=\\\\\\\\end\\\\\\{\\\\2\\\\\\}\\)/,
                                      },
                                      "comment": /%\\.\\*/m,
                                      "equation": Array [
                                        Object {
                                          "alias": "string",
                                          "inside": Object {
                                            "equation-command": Object {
                                              "alias": "regex",
                                              "pattern": /\\\\\\\\\\(\\?:\\[\\^a-z\\(\\)\\[\\\\\\]\\]\\|\\[a-z\\*\\]\\+\\)/i,
                                            },
                                          },
                                          "pattern": /\\\\\\$\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\\\$\\]\\)\\*\\\\\\$\\|\\\\\\\\\\\\\\(\\[\\\\s\\\\S\\]\\*\\?\\\\\\\\\\\\\\)\\|\\\\\\\\\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\\\\\\\\\\\\\]/,
                                        },
                                        Object {
                                          "alias": "string",
                                          "inside": Object {
                                            "equation-command": Object {
                                              "alias": "regex",
                                              "pattern": /\\\\\\\\\\(\\?:\\[\\^a-z\\(\\)\\[\\\\\\]\\]\\|\\[a-z\\*\\]\\+\\)/i,
                                            },
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\\\begin\\\\\\{\\(\\(\\?:equation\\|math\\|eqnarray\\|align\\|multline\\|gather\\)\\\\\\*\\?\\)\\\\\\}\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=\\\\\\\\end\\\\\\{\\\\2\\\\\\}\\)/,
                                        },
                                      ],
                                      "function": Object {
                                        "alias": "selector",
                                        "pattern": /\\\\\\\\\\(\\?:\\[\\^a-z\\(\\)\\[\\\\\\]\\]\\|\\[a-z\\*\\]\\+\\)/i,
                                      },
                                      "headline": Object {
                                        "alias": "class-name",
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\\\\\(\\?:part\\|chapter\\|section\\|subsection\\|frametitle\\|subsubsection\\|paragraph\\|subparagraph\\|subsubparagraph\\|subsubsubparagraph\\)\\\\\\*\\?\\(\\?:\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]\\)\\?\\\\\\{\\)\\[\\^\\}\\]\\+\\(\\?=\\\\\\}\\(\\?:\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]\\)\\?\\)/,
                                      },
                                      "keyword": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\\\\\(\\?:begin\\|end\\|ref\\|cite\\|label\\|usepackage\\|documentclass\\)\\(\\?:\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]\\)\\?\\\\\\{\\)\\[\\^\\}\\]\\+\\(\\?=\\\\\\}\\)/,
                                      },
                                      "punctuation": /\\[\\[\\\\\\]\\{\\}&\\]/,
                                      "url": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\\\url\\\\\\{\\)\\[\\^\\}\\]\\+\\(\\?=\\\\\\}\\)/,
                                      },
                                    },
                                    "less": Object {
                                      "atrule": Object {
                                        "inside": Object {
                                          "punctuation": /\\[:\\(\\)\\]/,
                                        },
                                        "pattern": /@\\[\\\\w-\\]\\+\\?\\(\\?:\\\\\\(\\[\\^\\{\\}\\]\\+\\\\\\)\\|\\[\\^\\(\\)\\{\\};\\]\\)\\*\\?\\(\\?=\\\\s\\*\\\\\\{\\)/i,
                                      },
                                      "comment": Array [
                                        /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                      "important": /\\\\B!important\\\\b/i,
                                      "mixin-usage": Object {
                                        "alias": "function",
                                        "lookbehind": true,
                                        "pattern": /\\(\\[\\{;\\]\\\\s\\*\\)\\[\\.#\\]\\(\\?!\\\\d\\)\\[\\\\w-\\]\\+\\.\\*\\?\\(\\?=\\[\\(;\\]\\)/,
                                      },
                                      "number": /\\[\\\\d%\\.\\]\\+/,
                                      "operator": /\\[\\+\\\\-\\*\\\\/\\]/,
                                      "property": /\\(\\?:@\\\\\\{\\[\\\\w-\\]\\+\\\\\\}\\|\\[\\\\w-\\]\\)\\+\\(\\?:\\\\\\+_\\?\\)\\?\\(\\?=\\\\s\\*:\\)/i,
                                      "punctuation": /\\[\\{\\}\\(\\);:,\\]/,
                                      "selector": Object {
                                        "inside": Object {
                                          "variable": /@\\+\\[\\\\w-\\]\\+/,
                                        },
                                        "pattern": /\\(\\?:@\\\\\\{\\[\\\\w-\\]\\+\\\\\\}\\|\\[\\^\\{\\};\\\\s@\\]\\)\\(\\?:@\\\\\\{\\[\\\\w-\\]\\+\\\\\\}\\|\\\\\\(\\[\\^\\{\\}\\]\\*\\\\\\)\\|\\[\\^\\{\\};@\\]\\)\\*\\?\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                      "variable": Array [
                                        Object {
                                          "inside": Object {
                                            "punctuation": /:/,
                                          },
                                          "pattern": /@\\[\\\\w-\\]\\+\\\\s\\*:/,
                                        },
                                        /@@\\?\\[\\\\w-\\]\\+/,
                                      ],
                                    },
                                    "makefile": Object {
                                      "builtin": /\\\\\\.\\[A-Z\\]\\[\\^:#=\\\\s\\]\\+\\(\\?=\\\\s\\*:\\(\\?!=\\)\\)/,
                                      "comment": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)#\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*/,
                                      },
                                      "keyword": Array [
                                        /-include\\\\b\\|\\\\b\\(\\?:define\\|else\\|endef\\|endif\\|export\\|ifn\\?def\\|ifn\\?eq\\|include\\|override\\|private\\|sinclude\\|undefine\\|unexport\\|vpath\\)\\\\b/,
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\\\\\(\\)\\(\\?:addsuffix\\|abspath\\|and\\|basename\\|call\\|dir\\|error\\|eval\\|file\\|filter\\(\\?:-out\\)\\?\\|findstring\\|firstword\\|flavor\\|foreach\\|guile\\|if\\|info\\|join\\|lastword\\|load\\|notdir\\|or\\|origin\\|patsubst\\|realpath\\|shell\\|sort\\|strip\\|subst\\|suffix\\|value\\|warning\\|wildcard\\|word\\(\\?:s\\|list\\)\\?\\)\\(\\?=\\[ \\\\t\\]\\)/,
                                        },
                                      ],
                                      "operator": /\\(\\?:::\\|\\[\\?:\\+!\\]\\)\\?=\\|\\[\\|@\\]/,
                                      "punctuation": /\\[:;\\(\\)\\{\\}\\]/,
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "symbol": Object {
                                        "inside": Object {
                                          "variable": /\\\\\\$\\+\\(\\?:\\[\\^\\(\\)\\{\\}:#=\\\\s\\]\\+\\|\\(\\?=\\[\\(\\{\\]\\)\\)/,
                                        },
                                        "pattern": /\\^\\[\\^:=\\\\r\\\\n\\]\\+\\(\\?=\\\\s\\*:\\(\\?!=\\)\\)/m,
                                      },
                                      "variable": /\\\\\\$\\+\\(\\?:\\[\\^\\(\\)\\{\\}:#=\\\\s\\]\\+\\|\\\\\\(\\[@\\*%<\\^\\+\\?\\]\\[DF\\]\\\\\\)\\|\\(\\?=\\[\\(\\{\\]\\)\\)/,
                                    },
                                    "markdown": Object {
                                      "blockquote": Object {
                                        "alias": "punctuation",
                                        "pattern": /\\^>\\(\\?:\\[\\\\t \\]\\*>\\)\\*/m,
                                      },
                                      "bold": Object {
                                        "inside": Object {
                                          "italic": Object {
                                            "inside": Object {
                                              "bold": [Circular],
                                              "punctuation": /\\^\\[\\*_\\]\\|\\[\\*_\\]\\$/,
                                              "url": Object {
                                                "inside": Object {
                                                  "string": Object {
                                                    "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                  },
                                                  "variable": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(!\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                  },
                                                },
                                                "pattern": /!\\?\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\| \\?\\\\\\[\\[\\^\\\\\\]\\\\n\\]\\*\\\\\\]\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\[\\*_\\]\\)\\(\\?:\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?!\\\\r\\?\\\\n\\|\\\\r\\)\\|\\.\\)\\+\\?\\\\2/,
                                          },
                                          "punctuation": /\\^\\\\\\*\\\\\\*\\|\\^__\\|\\\\\\*\\\\\\*\\$\\|__\\$/,
                                          "url": Object {
                                            "inside": Object {
                                              "string": Object {
                                                "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                              },
                                              "variable": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(!\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                              },
                                            },
                                            "pattern": /!\\?\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\| \\?\\\\\\[\\[\\^\\\\\\]\\\\n\\]\\*\\\\\\]\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\\\\\*\\\\\\*\\|__\\)\\(\\?:\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?!\\\\r\\?\\\\n\\|\\\\r\\)\\|\\.\\)\\+\\?\\\\2/,
                                      },
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "code": Array [
                                        Object {
                                          "alias": "keyword",
                                          "pattern": /\\^\\(\\?: \\{4\\}\\|\\\\t\\)\\.\\+/m,
                                        },
                                        Object {
                                          "alias": "keyword",
                                          "pattern": /\`\`\\.\\+\\?\`\`\\|\`\\[\\^\`\\\\n\\]\\+\`/,
                                        },
                                      ],
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": /<!DOCTYPE\\[\\\\s\\\\S\\]\\+\\?>/i,
                                      "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                      "hr": Object {
                                        "alias": "punctuation",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)\\(\\[\\*-\\]\\)\\(\\?:\\[\\\\t \\]\\*\\\\2\\)\\{2,\\}\\(\\?=\\\\s\\*\\$\\)/m,
                                      },
                                      "italic": Object {
                                        "inside": Object {
                                          "bold": Object {
                                            "inside": Object {
                                              "italic": [Circular],
                                              "punctuation": /\\^\\\\\\*\\\\\\*\\|\\^__\\|\\\\\\*\\\\\\*\\$\\|__\\$/,
                                              "url": Object {
                                                "inside": Object {
                                                  "string": Object {
                                                    "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                                  },
                                                  "variable": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(!\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                                  },
                                                },
                                                "pattern": /!\\?\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\| \\?\\\\\\[\\[\\^\\\\\\]\\\\n\\]\\*\\\\\\]\\)/,
                                              },
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\\\\\*\\\\\\*\\|__\\)\\(\\?:\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?!\\\\r\\?\\\\n\\|\\\\r\\)\\|\\.\\)\\+\\?\\\\2/,
                                          },
                                          "punctuation": /\\^\\[\\*_\\]\\|\\[\\*_\\]\\$/,
                                          "url": Object {
                                            "inside": Object {
                                              "string": Object {
                                                "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                              },
                                              "variable": Object {
                                                "lookbehind": true,
                                                "pattern": /\\(!\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                              },
                                            },
                                            "pattern": /!\\?\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\| \\?\\\\\\[\\[\\^\\\\\\]\\\\n\\]\\*\\\\\\]\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\[\\*_\\]\\)\\(\\?:\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?!\\\\r\\?\\\\n\\|\\\\r\\)\\|\\.\\)\\+\\?\\\\2/,
                                      },
                                      "list": Object {
                                        "alias": "punctuation",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)\\(\\?:\\[\\*\\+-\\]\\|\\\\d\\+\\\\\\.\\)\\(\\?=\\[\\\\t \\]\\.\\)/m,
                                      },
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "script": Object {
                                        "alias": "language-javascript",
                                        "greedy": true,
                                        "inside": Object {
                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                          "class-name": Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                          },
                                          "comment": Array [
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                            },
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                            },
                                          ],
                                          "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                          "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                          "function-variable": Object {
                                            "alias": "function",
                                            "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                          },
                                          "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                          "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "template-string": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "style": Object {
                                        "alias": "language-css",
                                        "greedy": true,
                                        "inside": Object {
                                          "atrule": Object {
                                            "inside": Object {
                                              "rest": [Circular],
                                              "rule": /@\\[\\\\w-\\]\\+/,
                                            },
                                            "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                          },
                                          "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                          "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                          "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                          "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                          "important": /\\\\B!important\\\\b/i,
                                          "number": /\\[\\\\d%\\.\\]\\+/,
                                          "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                          "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                          "selector": Object {
                                            "inside": Object {
                                              "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                              "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                              "id": /#\\[-:\\.\\\\w\\]\\+/,
                                              "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            },
                                            "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "tag": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "attr-name": Object {
                                            "inside": Object {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": Object {
                                            "inside": Object {
                                              "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                              "punctuation": Array [
                                                /\\^=/,
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                },
                                              ],
                                            },
                                            "pattern": /=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)/i,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "style-attr": Object {
                                            "alias": "language-css",
                                            "inside": Object {
                                              "attr-name": Object {
                                                "inside": Object {
                                                  "attr-name": Object {
                                                    "inside": Object {
                                                      "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                    },
                                                    "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                                  },
                                                  "attr-value": Object {
                                                    "inside": Object {
                                                      "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                                      "punctuation": Array [
                                                        /\\^=/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                        },
                                                      ],
                                                    },
                                                    "pattern": /=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)/i,
                                                  },
                                                  "punctuation": /\\\\/\\?>/,
                                                  "tag": Object {
                                                    "inside": Object {
                                                      "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                      "punctuation": /\\^<\\\\/\\?/,
                                                    },
                                                    "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/i,
                                                  },
                                                },
                                                "pattern": /\\^\\\\s\\*style/i,
                                              },
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "atrule": Object {
                                                    "inside": Object {
                                                      "rest": [Circular],
                                                      "rule": /@\\[\\\\w-\\]\\+/,
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                                  },
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                                  "important": /\\\\B!important\\\\b/i,
                                                  "number": /\\[\\\\d%\\.\\]\\+/,
                                                  "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                                  "selector": Object {
                                                    "inside": Object {
                                                      "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                                      "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                                      "id": /#\\[-:\\.\\\\w\\]\\+/,
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    },
                                                    "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                                },
                                                "pattern": /\\.\\+/i,
                                              },
                                              "punctuation": /\\^\\\\s\\*=\\\\s\\*\\['"\\]\\|\\['"\\]\\\\s\\*\\$/,
                                            },
                                            "pattern": /\\\\s\\*style=\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1/i,
                                          },
                                          "tag": Object {
                                            "inside": Object {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/i,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\+\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)\\)\\?\\)\\*\\\\s\\*\\\\/\\?>/i,
                                      },
                                      "title": Array [
                                        Object {
                                          "alias": "important",
                                          "inside": Object {
                                            "punctuation": /==\\+\\$\\|--\\+\\$/,
                                          },
                                          "pattern": /\\\\w\\+\\.\\*\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:==\\+\\|--\\+\\)/,
                                        },
                                        Object {
                                          "alias": "important",
                                          "inside": Object {
                                            "punctuation": /\\^#\\+\\|#\\+\\$/,
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\\\s\\*\\)#\\+\\.\\+/m,
                                        },
                                      ],
                                      "url": Object {
                                        "inside": Object {
                                          "string": Object {
                                            "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\(\\?=\\\\\\)\\$\\)/,
                                          },
                                          "variable": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(!\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+\\(\\?=\\\\\\]\\$\\)/,
                                          },
                                        },
                                        "pattern": /!\\?\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]\\(\\?:\\\\\\(\\[\\^\\\\s\\)\\]\\+\\(\\?:\\[\\\\t \\]\\+"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\)\\?\\\\\\)\\| \\?\\\\\\[\\[\\^\\\\\\]\\\\n\\]\\*\\\\\\]\\)/,
                                      },
                                      "url-reference": Object {
                                        "alias": "url",
                                        "inside": Object {
                                          "punctuation": /\\^\\[\\\\\\[\\\\\\]!:\\]\\|\\[<>\\]/,
                                          "string": /\\(\\?:"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\.\\|\\[\\^'\\\\\\\\\\]\\)\\*'\\|\\\\\\(\\(\\?:\\\\\\\\\\.\\|\\[\\^\\)\\\\\\\\\\]\\)\\*\\\\\\)\\)\\$/,
                                          "variable": Object {
                                            "lookbehind": true,
                                            "pattern": /\\^\\(!\\?\\\\\\[\\)\\[\\^\\\\\\]\\]\\+/,
                                          },
                                        },
                                        "pattern": /!\\?\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]:\\[\\\\t \\]\\+\\(\\?:\\\\S\\+\\|<\\(\\?:\\\\\\\\\\.\\|\\[\\^>\\\\\\\\\\]\\)\\+>\\)\\(\\?:\\[\\\\t \\]\\+\\(\\?:"\\(\\?:\\\\\\\\\\.\\|\\[\\^"\\\\\\\\\\]\\)\\*"\\|'\\(\\?:\\\\\\\\\\.\\|\\[\\^'\\\\\\\\\\]\\)\\*'\\|\\\\\\(\\(\\?:\\\\\\\\\\.\\|\\[\\^\\)\\\\\\\\\\]\\)\\*\\\\\\)\\)\\)\\?/,
                                      },
                                    },
                                    "markup": Object {
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": /<!DOCTYPE\\[\\\\s\\\\S\\]\\+\\?>/i,
                                      "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "script": Object {
                                        "alias": "language-javascript",
                                        "greedy": true,
                                        "inside": Object {
                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                          "class-name": Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                          },
                                          "comment": Array [
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                            },
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                            },
                                          ],
                                          "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                          "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                          "function-variable": Object {
                                            "alias": "function",
                                            "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                          },
                                          "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                          "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "template-string": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "style": Object {
                                        "alias": "language-css",
                                        "greedy": true,
                                        "inside": Object {
                                          "atrule": Object {
                                            "inside": Object {
                                              "rest": [Circular],
                                              "rule": /@\\[\\\\w-\\]\\+/,
                                            },
                                            "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                          },
                                          "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                          "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                          "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                          "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                          "important": /\\\\B!important\\\\b/i,
                                          "number": /\\[\\\\d%\\.\\]\\+/,
                                          "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                          "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                          "selector": Object {
                                            "inside": Object {
                                              "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                              "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                              "id": /#\\[-:\\.\\\\w\\]\\+/,
                                              "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            },
                                            "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "tag": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "attr-name": Object {
                                            "inside": Object {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": Object {
                                            "inside": Object {
                                              "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                              "punctuation": Array [
                                                /\\^=/,
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                },
                                              ],
                                            },
                                            "pattern": /=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)/i,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "style-attr": Object {
                                            "alias": "language-css",
                                            "inside": Object {
                                              "attr-name": Object {
                                                "inside": Object {
                                                  "attr-name": Object {
                                                    "inside": Object {
                                                      "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                    },
                                                    "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                                  },
                                                  "attr-value": Object {
                                                    "inside": Object {
                                                      "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                                      "punctuation": Array [
                                                        /\\^=/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                        },
                                                      ],
                                                    },
                                                    "pattern": /=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)/i,
                                                  },
                                                  "punctuation": /\\\\/\\?>/,
                                                  "tag": Object {
                                                    "inside": Object {
                                                      "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                      "punctuation": /\\^<\\\\/\\?/,
                                                    },
                                                    "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/i,
                                                  },
                                                },
                                                "pattern": /\\^\\\\s\\*style/i,
                                              },
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "atrule": Object {
                                                    "inside": Object {
                                                      "rest": [Circular],
                                                      "rule": /@\\[\\\\w-\\]\\+/,
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                                  },
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                                  "important": /\\\\B!important\\\\b/i,
                                                  "number": /\\[\\\\d%\\.\\]\\+/,
                                                  "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                                  "selector": Object {
                                                    "inside": Object {
                                                      "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                                      "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                                      "id": /#\\[-:\\.\\\\w\\]\\+/,
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    },
                                                    "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                                },
                                                "pattern": /\\.\\+/i,
                                              },
                                              "punctuation": /\\^\\\\s\\*=\\\\s\\*\\['"\\]\\|\\['"\\]\\\\s\\*\\$/,
                                            },
                                            "pattern": /\\\\s\\*style=\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1/i,
                                          },
                                          "tag": Object {
                                            "inside": Object {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/i,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\+\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)\\)\\?\\)\\*\\\\s\\*\\\\/\\?>/i,
                                      },
                                    },
                                    "markup-templating": Object {},
                                    "mathml": Object {
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": /<!DOCTYPE\\[\\\\s\\\\S\\]\\+\\?>/i,
                                      "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "script": Object {
                                        "alias": "language-javascript",
                                        "greedy": true,
                                        "inside": Object {
                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                          "class-name": Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                          },
                                          "comment": Array [
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                            },
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                            },
                                          ],
                                          "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                          "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                          "function-variable": Object {
                                            "alias": "function",
                                            "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                          },
                                          "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                          "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "template-string": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "style": Object {
                                        "alias": "language-css",
                                        "greedy": true,
                                        "inside": Object {
                                          "atrule": Object {
                                            "inside": Object {
                                              "rest": [Circular],
                                              "rule": /@\\[\\\\w-\\]\\+/,
                                            },
                                            "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                          },
                                          "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                          "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                          "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                          "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                          "important": /\\\\B!important\\\\b/i,
                                          "number": /\\[\\\\d%\\.\\]\\+/,
                                          "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                          "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                          "selector": Object {
                                            "inside": Object {
                                              "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                              "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                              "id": /#\\[-:\\.\\\\w\\]\\+/,
                                              "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            },
                                            "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "tag": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "attr-name": Object {
                                            "inside": Object {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": Object {
                                            "inside": Object {
                                              "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                              "punctuation": Array [
                                                /\\^=/,
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                },
                                              ],
                                            },
                                            "pattern": /=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)/i,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "style-attr": Object {
                                            "alias": "language-css",
                                            "inside": Object {
                                              "attr-name": Object {
                                                "inside": Object {
                                                  "attr-name": Object {
                                                    "inside": Object {
                                                      "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                    },
                                                    "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                                  },
                                                  "attr-value": Object {
                                                    "inside": Object {
                                                      "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                                      "punctuation": Array [
                                                        /\\^=/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                        },
                                                      ],
                                                    },
                                                    "pattern": /=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)/i,
                                                  },
                                                  "punctuation": /\\\\/\\?>/,
                                                  "tag": Object {
                                                    "inside": Object {
                                                      "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                      "punctuation": /\\^<\\\\/\\?/,
                                                    },
                                                    "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/i,
                                                  },
                                                },
                                                "pattern": /\\^\\\\s\\*style/i,
                                              },
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "atrule": Object {
                                                    "inside": Object {
                                                      "rest": [Circular],
                                                      "rule": /@\\[\\\\w-\\]\\+/,
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                                  },
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                                  "important": /\\\\B!important\\\\b/i,
                                                  "number": /\\[\\\\d%\\.\\]\\+/,
                                                  "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                                  "selector": Object {
                                                    "inside": Object {
                                                      "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                                      "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                                      "id": /#\\[-:\\.\\\\w\\]\\+/,
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    },
                                                    "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                                },
                                                "pattern": /\\.\\+/i,
                                              },
                                              "punctuation": /\\^\\\\s\\*=\\\\s\\*\\['"\\]\\|\\['"\\]\\\\s\\*\\$/,
                                            },
                                            "pattern": /\\\\s\\*style=\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1/i,
                                          },
                                          "tag": Object {
                                            "inside": Object {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/i,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\+\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)\\)\\?\\)\\*\\\\s\\*\\\\/\\?>/i,
                                      },
                                    },
                                    "objectivec": Object {
                                      "comment": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "constant": /\\\\b\\(\\?:__FILE__\\|__LINE__\\|__DATE__\\|__TIME__\\|__TIMESTAMP__\\|__func__\\|EOF\\|NULL\\|SEEK_CUR\\|SEEK_END\\|SEEK_SET\\|stdin\\|stdout\\|stderr\\)\\\\b/,
                                      "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "keyword": /\\\\b\\(\\?:asm\\|typeof\\|inline\\|auto\\|break\\|case\\|char\\|const\\|continue\\|default\\|do\\|double\\|else\\|enum\\|extern\\|float\\|for\\|goto\\|if\\|int\\|long\\|register\\|return\\|short\\|signed\\|sizeof\\|static\\|struct\\|switch\\|typedef\\|union\\|unsigned\\|void\\|volatile\\|while\\|in\\|self\\|super\\)\\\\b\\|\\(\\?:@interface\\|@end\\|@implementation\\|@protocol\\|@class\\|@public\\|@protected\\|@private\\|@property\\|@try\\|@catch\\|@finally\\|@throw\\|@synthesize\\|@dynamic\\|@selector\\)\\\\b/,
                                      "macro": Object {
                                        "alias": "property",
                                        "inside": Object {
                                          "directive": Object {
                                            "alias": "keyword",
                                            "lookbehind": true,
                                            "pattern": /\\(#\\\\s\\*\\)\\\\b\\(\\?:define\\|defined\\|elif\\|else\\|endif\\|error\\|ifdef\\|ifndef\\|if\\|import\\|include\\|line\\|pragma\\|undef\\|using\\)\\\\b/,
                                          },
                                          "string": Object {
                                            "lookbehind": true,
                                            "pattern": /\\(#\\\\s\\*include\\\\s\\*\\)\\(\\?:<\\.\\+\\?>\\|\\("\\|'\\)\\(\\?:\\\\\\\\\\?\\.\\)\\+\\?\\\\2\\)/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)#\\\\s\\*\\[a-z\\]\\+\\(\\?:\\[\\^\\\\r\\\\n\\\\\\\\\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*/im,
                                      },
                                      "number": /\\(\\?:\\\\b0x\\[\\\\da-f\\]\\+\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\[ful\\]\\*/i,
                                      "operator": /-\\[->\\]\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?\\|<<\\?=\\?\\|>>\\?=\\?\\|==\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\[~\\^%\\?\\*\\\\/@\\]/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|@"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\)\\*"/,
                                    },
                                    "ocaml": Object {
                                      "boolean": /\\\\b\\(\\?:false\\|true\\)\\\\b/,
                                      "comment": /\\\\\\(\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\\\)/,
                                      "directive": Object {
                                        "alias": "function",
                                        "pattern": /\\\\B#\\\\w\\+/,
                                      },
                                      "keyword": /\\\\b\\(\\?:as\\|assert\\|begin\\|class\\|constraint\\|do\\|done\\|downto\\|else\\|end\\|exception\\|external\\|for\\|fun\\|function\\|functor\\|if\\|in\\|include\\|inherit\\|initializer\\|lazy\\|let\\|match\\|method\\|module\\|mutable\\|new\\|object\\|of\\|open\\|prefix\\|private\\|rec\\|then\\|sig\\|struct\\|to\\|try\\|type\\|val\\|value\\|virtual\\|where\\|while\\|with\\)\\\\b/,
                                      "number": /\\\\b\\(\\?:0x\\[\\\\da-f\\]\\[\\\\da-f_\\]\\+\\|\\(\\?:0\\[bo\\]\\)\\?\\\\d\\[\\\\d_\\]\\*\\\\\\.\\?\\[\\\\d_\\]\\*\\(\\?:e\\[\\+-\\]\\?\\[\\\\d_\\]\\+\\)\\?\\)/i,
                                      "operator": /:=\\|\\[=<>@\\^\\|&\\+\\\\-\\*\\\\/\\$%!\\?~\\]\\[!\\$%&\\*\\+\\\\-\\.\\\\/:<=>\\?@\\^\\|~\\]\\*\\|\\\\b\\(\\?:and\\|asr\\|land\\|lor\\|lxor\\|lsl\\|lsr\\|mod\\|nor\\|or\\)\\\\b/,
                                      "punctuation": /\\[\\(\\)\\{\\}\\\\\\[\\\\\\]\\|_\\.,:;\\]/,
                                      "string": Array [
                                        Object {
                                          "greedy": true,
                                          "pattern": /"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\r\\\\n"\\]\\)\\*"/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "pattern": /\\(\\['\`\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\d\\+\\|x\\[\\\\da-f\\]\\+\\|\\.\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\\\1/i,
                                        },
                                      ],
                                      "type": Object {
                                        "alias": "variable",
                                        "pattern": /\\\\B\\['\`\\]\\\\w\\*/,
                                      },
                                    },
                                    "php": Object {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "class-name": Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                      },
                                      "comment": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                      },
                                      "constant": /\\\\b\\[A-Z0-9_\\]\\{2,\\}\\\\b/,
                                      "delimiter": Object {
                                        "alias": "important",
                                        "pattern": /\\\\\\?>\\|<\\\\\\?\\(\\?:php\\|=\\)\\?/i,
                                      },
                                      "double-quoted-string": Object {
                                        "alias": "string",
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\{\\\\\\$\\(\\?:\\{\\(\\?:\\{\\[\\^\\{\\}\\]\\+\\}\\|\\[\\^\\{\\}\\]\\+\\)\\}\\|\\[\\^\\{\\}\\]\\)\\+\\}\\|\\(\\^\\|\\[\\^\\\\\\\\\\{\\]\\)\\\\\\$\\+\\(\\?:\\\\w\\+\\(\\?:\\\\\\[\\.\\+\\?\\]\\|->\\\\w\\+\\)\\*\\)/,
                                          },
                                        },
                                        "pattern": /"\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\"\\]\\)\\*"/,
                                      },
                                      "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "global": /\\\\\\$\\(\\?:_\\(\\?:SERVER\\|GET\\|POST\\|FILES\\|REQUEST\\|SESSION\\|ENV\\|COOKIE\\)\\|GLOBALS\\|HTTP_RAW_POST_DATA\\|argc\\|argv\\|php_errormsg\\|http_response_header\\)\\\\b/,
                                      "heredoc-string": Object {
                                        "alias": "string",
                                        "greedy": true,
                                        "inside": Object {
                                          "delimiter": Object {
                                            "alias": "symbol",
                                            "inside": Object {
                                              "punctuation": /\\^<<<"\\?\\|\\[";\\]\\$/,
                                            },
                                            "pattern": /\\^<<<\\(\\?:"\\[\\^"\\]\\+"\\|\\[a-z_\\]\\\\w\\*\\)\\|\\[a-z_\\]\\\\w\\*;\\$/i,
                                          },
                                          "interpolation": Object {
                                            "inside": Object {
                                              "rest": [Circular],
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\{\\\\\\$\\(\\?:\\{\\(\\?:\\{\\[\\^\\{\\}\\]\\+\\}\\|\\[\\^\\{\\}\\]\\+\\)\\}\\|\\[\\^\\{\\}\\]\\)\\+\\}\\|\\(\\^\\|\\[\\^\\\\\\\\\\{\\]\\)\\\\\\$\\+\\(\\?:\\\\w\\+\\(\\?:\\\\\\[\\.\\+\\?\\]\\|->\\\\w\\+\\)\\*\\)/,
                                          },
                                        },
                                        "pattern": /<<<\\(\\?:"\\(\\[\\^"\\]\\+\\)"\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\)\\*\\?\\\\1;\\|\\(\\[a-z_\\]\\\\w\\*\\)\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\)\\*\\?\\\\2;\\)/i,
                                      },
                                      "keyword": /\\\\b\\(\\?:and\\|or\\|xor\\|array\\|as\\|break\\|case\\|cfunction\\|class\\|const\\|continue\\|declare\\|default\\|die\\|do\\|else\\|elseif\\|enddeclare\\|endfor\\|endforeach\\|endif\\|endswitch\\|endwhile\\|extends\\|for\\|foreach\\|function\\|include\\|include_once\\|global\\|if\\|new\\|return\\|static\\|switch\\|use\\|require\\|require_once\\|var\\|while\\|abstract\\|interface\\|public\\|implements\\|private\\|protected\\|parent\\|throw\\|null\\|echo\\|print\\|trait\\|namespace\\|final\\|yield\\|goto\\|instanceof\\|finally\\|try\\|catch\\)\\\\b/i,
                                      "nowdoc-string": Object {
                                        "alias": "string",
                                        "greedy": true,
                                        "inside": Object {
                                          "delimiter": Object {
                                            "alias": "symbol",
                                            "inside": Object {
                                              "punctuation": /\\^<<<'\\?\\|\\[';\\]\\$/,
                                            },
                                            "pattern": /\\^<<<'\\[\\^'\\]\\+'\\|\\[a-z_\\]\\\\w\\*;\\$/i,
                                          },
                                        },
                                        "pattern": /<<<'\\(\\[\\^'\\]\\+\\)'\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\\\n\\?\\|\\\\n\\)\\)\\*\\?\\\\1;/,
                                      },
                                      "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                      "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                      "package": Object {
                                        "inside": Object {
                                          "punctuation": /\\\\\\\\/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\\\\\\\|namespace\\\\s\\+\\|use\\\\s\\+\\)\\[\\\\w\\\\\\\\\\]\\+/,
                                      },
                                      "property": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(->\\)\\[\\\\w\\]\\+/,
                                      },
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "scope": Object {
                                        "inside": Object {
                                          "keyword": /static\\|self\\|parent/,
                                          "punctuation": /::\\|\\\\\\\\/,
                                        },
                                        "pattern": /\\\\b\\[\\\\w\\\\\\\\\\]\\+::/,
                                      },
                                      "shell-comment": Object {
                                        "alias": "comment",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)#\\.\\*/,
                                      },
                                      "single-quoted-string": Object {
                                        "alias": "string",
                                        "greedy": true,
                                        "pattern": /'\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\[\\^\\\\\\\\'\\]\\)\\*'/,
                                      },
                                      "this": /\\\\\\$this\\\\b/,
                                      "variable": /\\\\\\$\\+\\(\\?:\\\\w\\+\\\\b\\|\\(\\?=\\{\\)\\)/i,
                                    },
                                    "python": Object {
                                      "boolean": /\\\\b\\(\\?:True\\|False\\|None\\)\\\\b/,
                                      "builtin": /\\\\b\\(\\?:__import__\\|abs\\|all\\|any\\|apply\\|ascii\\|basestring\\|bin\\|bool\\|buffer\\|bytearray\\|bytes\\|callable\\|chr\\|classmethod\\|cmp\\|coerce\\|compile\\|complex\\|delattr\\|dict\\|dir\\|divmod\\|enumerate\\|eval\\|execfile\\|file\\|filter\\|float\\|format\\|frozenset\\|getattr\\|globals\\|hasattr\\|hash\\|help\\|hex\\|id\\|input\\|int\\|intern\\|isinstance\\|issubclass\\|iter\\|len\\|list\\|locals\\|long\\|map\\|max\\|memoryview\\|min\\|next\\|object\\|oct\\|open\\|ord\\|pow\\|property\\|range\\|raw_input\\|reduce\\|reload\\|repr\\|reversed\\|round\\|set\\|setattr\\|slice\\|sorted\\|staticmethod\\|str\\|sum\\|super\\|tuple\\|type\\|unichr\\|unicode\\|vars\\|xrange\\|zip\\)\\\\b/,
                                      "class-name": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\bclass\\\\s\\+\\)\\\\w\\+/i,
                                      },
                                      "comment": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)#\\.\\*/,
                                      },
                                      "function": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\s\\)def\\[ \\\\t\\]\\+\\)\\[a-zA-Z_\\]\\\\w\\*\\(\\?=\\\\s\\*\\\\\\(\\)/g,
                                      },
                                      "keyword": /\\\\b\\(\\?:as\\|assert\\|async\\|await\\|break\\|class\\|continue\\|def\\|del\\|elif\\|else\\|except\\|exec\\|finally\\|for\\|from\\|global\\|if\\|import\\|in\\|is\\|lambda\\|nonlocal\\|pass\\|print\\|raise\\|return\\|try\\|while\\|with\\|yield\\)\\\\b/,
                                      "number": /\\(\\?:\\\\b\\(\\?=\\\\d\\)\\|\\\\B\\(\\?=\\\\\\.\\)\\)\\(\\?:0\\[bo\\]\\)\\?\\(\\?:\\(\\?:\\\\d\\|0x\\[\\\\da-f\\]\\)\\[\\\\da-f\\]\\*\\\\\\.\\?\\\\d\\*\\|\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?j\\?\\\\b/i,
                                      "operator": /\\[-\\+%=\\]=\\?\\|!=\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/\\\\/\\?=\\?\\|<\\[<=>\\]\\?\\|>\\[=>\\]\\?\\|\\[&\\|\\^~\\]\\|\\\\b\\(\\?:or\\|and\\|not\\)\\\\b/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\.\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "triple-quoted-string": Object {
                                        "alias": "string",
                                        "greedy": true,
                                        "pattern": /\\("""\\|'''\\)\\[\\\\s\\\\S\\]\\+\\?\\\\1/,
                                      },
                                    },
                                    "reason": Object {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "character": Object {
                                        "alias": "string",
                                        "pattern": /'\\(\\?:\\\\\\\\x\\[\\\\da-f\\]\\{2\\}\\|\\\\\\\\o\\[0-3\\]\\[0-7\\]\\[0-7\\]\\|\\\\\\\\\\\\d\\{3\\}\\|\\\\\\\\\\.\\|\\[\\^'\\\\\\\\\\\\r\\\\n\\]\\)'/,
                                      },
                                      "class-name": /\\\\b\\[A-Z\\]\\\\w\\*/,
                                      "comment": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                      },
                                      "constructor": Object {
                                        "alias": "variable",
                                        "pattern": /\\\\b\\[A-Z\\]\\\\w\\*\\\\b\\(\\?!\\\\s\\*\\\\\\.\\)/,
                                      },
                                      "keyword": /\\\\b\\(\\?:and\\|as\\|assert\\|begin\\|class\\|constraint\\|do\\|done\\|downto\\|else\\|end\\|exception\\|external\\|for\\|fun\\|function\\|functor\\|if\\|in\\|include\\|inherit\\|initializer\\|lazy\\|let\\|method\\|module\\|mutable\\|new\\|nonrec\\|object\\|of\\|open\\|or\\|private\\|rec\\|sig\\|struct\\|switch\\|then\\|to\\|try\\|type\\|val\\|virtual\\|when\\|while\\|with\\)\\\\b/,
                                      "label": Object {
                                        "alias": "symbol",
                                        "pattern": /\\\\b\\[a-z\\]\\\\w\\*\\(\\?=::\\)/,
                                      },
                                      "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                      "operator": /\\\\\\.\\{3\\}\\|:\\[:=\\]\\|=\\(\\?:==\\?\\|>\\)\\?\\|<=\\?\\|>=\\?\\|\\[\\|\\^\\?'#!~\`\\]\\|\\[\\+\\\\-\\*\\\\/\\]\\\\\\.\\?\\|\\\\b\\(\\?:mod\\|land\\|lor\\|lxor\\|lsl\\|lsr\\|asr\\)\\\\b/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /"\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\[\\^\\\\\\\\\\\\r\\\\n"\\]\\)\\*"/,
                                      },
                                    },
                                    "ruby": Object {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "builtin": /\\\\b\\(\\?:Array\\|Bignum\\|Binding\\|Class\\|Continuation\\|Dir\\|Exception\\|FalseClass\\|File\\|Stat\\|Fixnum\\|Float\\|Hash\\|Integer\\|IO\\|MatchData\\|Method\\|Module\\|NilClass\\|Numeric\\|Object\\|Proc\\|Range\\|Regexp\\|String\\|Struct\\|TMS\\|Symbol\\|ThreadGroup\\|Thread\\|Time\\|TrueClass\\)\\\\b/,
                                      "class-name": Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                      },
                                      "comment": Array [
                                        /#\\.\\*/,
                                        Object {
                                          "greedy": true,
                                          "pattern": /\\^=begin\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\)\\*\\?=end/m,
                                        },
                                      ],
                                      "constant": /\\\\b\\[A-Z\\]\\\\w\\*\\(\\?:\\[\\?!\\]\\|\\\\b\\)/,
                                      "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "keyword": /\\\\b\\(\\?:alias\\|and\\|BEGIN\\|begin\\|break\\|case\\|class\\|def\\|define_method\\|defined\\|do\\|each\\|else\\|elsif\\|END\\|end\\|ensure\\|false\\|for\\|if\\|in\\|module\\|new\\|next\\|nil\\|not\\|or\\|protected\\|private\\|public\\|raise\\|redo\\|require\\|rescue\\|retry\\|return\\|self\\|super\\|then\\|throw\\|true\\|undef\\|unless\\|until\\|when\\|while\\|yield\\)\\\\b/,
                                      "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                      "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": Array [
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "tag",
                                                  "pattern": /\\^#\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": Object {
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                                  },
                                                  "comment": Array [
                                                    /#\\.\\*/,
                                                    Object {
                                                      "greedy": true,
                                                      "pattern": /\\^=begin\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\)\\*\\?=end/m,
                                                    },
                                                  ],
                                                  "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "keyword": /\\\\b\\(\\?:alias\\|and\\|BEGIN\\|begin\\|break\\|case\\|class\\|def\\|define_method\\|defined\\|do\\|each\\|else\\|elsif\\|END\\|end\\|ensure\\|false\\|for\\|if\\|in\\|module\\|new\\|next\\|nil\\|not\\|or\\|protected\\|private\\|public\\|raise\\|redo\\|require\\|rescue\\|retry\\|return\\|self\\|super\\|then\\|throw\\|true\\|undef\\|unless\\|until\\|when\\|while\\|yield\\)\\\\b/,
                                                  "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                                  "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                },
                                              },
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /%r\\(\\[\\^a-zA-Z0-9\\\\s\\{\\(\\\\\\[<\\]\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\\\1\\[gim\\]\\{0,3\\}/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "tag",
                                                  "pattern": /\\^#\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": Object {
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                                  },
                                                  "comment": Array [
                                                    /#\\.\\*/,
                                                    Object {
                                                      "greedy": true,
                                                      "pattern": /\\^=begin\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\)\\*\\?=end/m,
                                                    },
                                                  ],
                                                  "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "keyword": /\\\\b\\(\\?:alias\\|and\\|BEGIN\\|begin\\|break\\|case\\|class\\|def\\|define_method\\|defined\\|do\\|each\\|else\\|elsif\\|END\\|end\\|ensure\\|false\\|for\\|if\\|in\\|module\\|new\\|next\\|nil\\|not\\|or\\|protected\\|private\\|public\\|raise\\|redo\\|require\\|rescue\\|retry\\|return\\|self\\|super\\|then\\|throw\\|true\\|undef\\|unless\\|until\\|when\\|while\\|yield\\)\\\\b/,
                                                  "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                                  "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                },
                                              },
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /%r\\\\\\(\\(\\?:\\[\\^\\(\\)\\\\\\\\\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\\\\\)\\[gim\\]\\{0,3\\}/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "tag",
                                                  "pattern": /\\^#\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": Object {
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                                  },
                                                  "comment": Array [
                                                    /#\\.\\*/,
                                                    Object {
                                                      "greedy": true,
                                                      "pattern": /\\^=begin\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\)\\*\\?=end/m,
                                                    },
                                                  ],
                                                  "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "keyword": /\\\\b\\(\\?:alias\\|and\\|BEGIN\\|begin\\|break\\|case\\|class\\|def\\|define_method\\|defined\\|do\\|each\\|else\\|elsif\\|END\\|end\\|ensure\\|false\\|for\\|if\\|in\\|module\\|new\\|next\\|nil\\|not\\|or\\|protected\\|private\\|public\\|raise\\|redo\\|require\\|rescue\\|retry\\|return\\|self\\|super\\|then\\|throw\\|true\\|undef\\|unless\\|until\\|when\\|while\\|yield\\)\\\\b/,
                                                  "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                                  "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                },
                                              },
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /%r\\\\\\{\\(\\?:\\[\\^#\\{\\}\\\\\\\\\\]\\|#\\(\\?:\\\\\\{\\[\\^\\}\\]\\+\\\\\\}\\)\\?\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\\\\\}\\[gim\\]\\{0,3\\}/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "tag",
                                                  "pattern": /\\^#\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": Object {
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                                  },
                                                  "comment": Array [
                                                    /#\\.\\*/,
                                                    Object {
                                                      "greedy": true,
                                                      "pattern": /\\^=begin\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\)\\*\\?=end/m,
                                                    },
                                                  ],
                                                  "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "keyword": /\\\\b\\(\\?:alias\\|and\\|BEGIN\\|begin\\|break\\|case\\|class\\|def\\|define_method\\|defined\\|do\\|each\\|else\\|elsif\\|END\\|end\\|ensure\\|false\\|for\\|if\\|in\\|module\\|new\\|next\\|nil\\|not\\|or\\|protected\\|private\\|public\\|raise\\|redo\\|require\\|rescue\\|retry\\|return\\|self\\|super\\|then\\|throw\\|true\\|undef\\|unless\\|until\\|when\\|while\\|yield\\)\\\\b/,
                                                  "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                                  "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                },
                                              },
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /%r\\\\\\[\\(\\?:\\[\\^\\\\\\[\\\\\\]\\\\\\\\\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\\\\\]\\[gim\\]\\{0,3\\}/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "tag",
                                                  "pattern": /\\^#\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": Object {
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                                  },
                                                  "comment": Array [
                                                    /#\\.\\*/,
                                                    Object {
                                                      "greedy": true,
                                                      "pattern": /\\^=begin\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\)\\*\\?=end/m,
                                                    },
                                                  ],
                                                  "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "keyword": /\\\\b\\(\\?:alias\\|and\\|BEGIN\\|begin\\|break\\|case\\|class\\|def\\|define_method\\|defined\\|do\\|each\\|else\\|elsif\\|END\\|end\\|ensure\\|false\\|for\\|if\\|in\\|module\\|new\\|next\\|nil\\|not\\|or\\|protected\\|private\\|public\\|raise\\|redo\\|require\\|rescue\\|retry\\|return\\|self\\|super\\|then\\|throw\\|true\\|undef\\|unless\\|until\\|when\\|while\\|yield\\)\\\\b/,
                                                  "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                                  "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                },
                                              },
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /%r<\\(\\?:\\[\\^<>\\\\\\\\\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*>\\[gim\\]\\{0,3\\}/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\/\\]\\)\\\\/\\(\\?!\\\\/\\)\\(\\\\\\[\\.\\+\\?\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\r\\\\n\\]\\)\\+\\\\/\\[gim\\]\\{0,3\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\]\\)\\)/,
                                        },
                                      ],
                                      "string": Array [
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "tag",
                                                  "pattern": /\\^#\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": Object {
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                                  },
                                                  "comment": Array [
                                                    /#\\.\\*/,
                                                    Object {
                                                      "greedy": true,
                                                      "pattern": /\\^=begin\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\)\\*\\?=end/m,
                                                    },
                                                  ],
                                                  "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "keyword": /\\\\b\\(\\?:alias\\|and\\|BEGIN\\|begin\\|break\\|case\\|class\\|def\\|define_method\\|defined\\|do\\|each\\|else\\|elsif\\|END\\|end\\|ensure\\|false\\|for\\|if\\|in\\|module\\|new\\|next\\|nil\\|not\\|or\\|protected\\|private\\|public\\|raise\\|redo\\|require\\|rescue\\|retry\\|return\\|self\\|super\\|then\\|throw\\|true\\|undef\\|unless\\|until\\|when\\|while\\|yield\\)\\\\b/,
                                                  "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                                  "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                },
                                              },
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /%\\[qQiIwWxs\\]\\?\\(\\[\\^a-zA-Z0-9\\\\s\\{\\(\\\\\\[<\\]\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\\\1/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "tag",
                                                  "pattern": /\\^#\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": Object {
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                                  },
                                                  "comment": Array [
                                                    /#\\.\\*/,
                                                    Object {
                                                      "greedy": true,
                                                      "pattern": /\\^=begin\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\)\\*\\?=end/m,
                                                    },
                                                  ],
                                                  "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "keyword": /\\\\b\\(\\?:alias\\|and\\|BEGIN\\|begin\\|break\\|case\\|class\\|def\\|define_method\\|defined\\|do\\|each\\|else\\|elsif\\|END\\|end\\|ensure\\|false\\|for\\|if\\|in\\|module\\|new\\|next\\|nil\\|not\\|or\\|protected\\|private\\|public\\|raise\\|redo\\|require\\|rescue\\|retry\\|return\\|self\\|super\\|then\\|throw\\|true\\|undef\\|unless\\|until\\|when\\|while\\|yield\\)\\\\b/,
                                                  "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                                  "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                },
                                              },
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /%\\[qQiIwWxs\\]\\?\\\\\\(\\(\\?:\\[\\^\\(\\)\\\\\\\\\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\\\\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "tag",
                                                  "pattern": /\\^#\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": Object {
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                                  },
                                                  "comment": Array [
                                                    /#\\.\\*/,
                                                    Object {
                                                      "greedy": true,
                                                      "pattern": /\\^=begin\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\)\\*\\?=end/m,
                                                    },
                                                  ],
                                                  "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "keyword": /\\\\b\\(\\?:alias\\|and\\|BEGIN\\|begin\\|break\\|case\\|class\\|def\\|define_method\\|defined\\|do\\|each\\|else\\|elsif\\|END\\|end\\|ensure\\|false\\|for\\|if\\|in\\|module\\|new\\|next\\|nil\\|not\\|or\\|protected\\|private\\|public\\|raise\\|redo\\|require\\|rescue\\|retry\\|return\\|self\\|super\\|then\\|throw\\|true\\|undef\\|unless\\|until\\|when\\|while\\|yield\\)\\\\b/,
                                                  "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                                  "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                },
                                              },
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /%\\[qQiIwWxs\\]\\?\\\\\\{\\(\\?:\\[\\^#\\{\\}\\\\\\\\\\]\\|#\\(\\?:\\\\\\{\\[\\^\\}\\]\\+\\\\\\}\\)\\?\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\\\\\}/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "tag",
                                                  "pattern": /\\^#\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": Object {
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                                  },
                                                  "comment": Array [
                                                    /#\\.\\*/,
                                                    Object {
                                                      "greedy": true,
                                                      "pattern": /\\^=begin\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\)\\*\\?=end/m,
                                                    },
                                                  ],
                                                  "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "keyword": /\\\\b\\(\\?:alias\\|and\\|BEGIN\\|begin\\|break\\|case\\|class\\|def\\|define_method\\|defined\\|do\\|each\\|else\\|elsif\\|END\\|end\\|ensure\\|false\\|for\\|if\\|in\\|module\\|new\\|next\\|nil\\|not\\|or\\|protected\\|private\\|public\\|raise\\|redo\\|require\\|rescue\\|retry\\|return\\|self\\|super\\|then\\|throw\\|true\\|undef\\|unless\\|until\\|when\\|while\\|yield\\)\\\\b/,
                                                  "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                                  "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                },
                                              },
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /%\\[qQiIwWxs\\]\\?\\\\\\[\\(\\?:\\[\\^\\\\\\[\\\\\\]\\\\\\\\\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*\\\\\\]/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "tag",
                                                  "pattern": /\\^#\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": Object {
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                                  },
                                                  "comment": Array [
                                                    /#\\.\\*/,
                                                    Object {
                                                      "greedy": true,
                                                      "pattern": /\\^=begin\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\)\\*\\?=end/m,
                                                    },
                                                  ],
                                                  "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "keyword": /\\\\b\\(\\?:alias\\|and\\|BEGIN\\|begin\\|break\\|case\\|class\\|def\\|define_method\\|defined\\|do\\|each\\|else\\|elsif\\|END\\|end\\|ensure\\|false\\|for\\|if\\|in\\|module\\|new\\|next\\|nil\\|not\\|or\\|protected\\|private\\|public\\|raise\\|redo\\|require\\|rescue\\|retry\\|return\\|self\\|super\\|then\\|throw\\|true\\|undef\\|unless\\|until\\|when\\|while\\|yield\\)\\\\b/,
                                                  "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                                  "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                },
                                              },
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /%\\[qQiIwWxs\\]\\?<\\(\\?:\\[\\^<>\\\\\\\\\\]\\|\\\\\\\\\\[\\\\s\\\\S\\]\\)\\*>/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "interpolation": Object {
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "tag",
                                                  "pattern": /\\^#\\\\\\{\\|\\\\\\}\\$/,
                                                },
                                                "rest": Object {
                                                  "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                  "class-name": Object {
                                                    "inside": Object {
                                                      "punctuation": /\\[\\.\\\\\\\\\\]/,
                                                    },
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                                  },
                                                  "comment": Array [
                                                    /#\\.\\*/,
                                                    Object {
                                                      "greedy": true,
                                                      "pattern": /\\^=begin\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\.\\*\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\)\\*\\?=end/m,
                                                    },
                                                  ],
                                                  "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "keyword": /\\\\b\\(\\?:alias\\|and\\|BEGIN\\|begin\\|break\\|case\\|class\\|def\\|define_method\\|defined\\|do\\|each\\|else\\|elsif\\|END\\|end\\|ensure\\|false\\|for\\|if\\|in\\|module\\|new\\|next\\|nil\\|not\\|or\\|protected\\|private\\|public\\|raise\\|redo\\|require\\|rescue\\|retry\\|return\\|self\\|super\\|then\\|throw\\|true\\|undef\\|unless\\|until\\|when\\|while\\|yield\\)\\\\b/,
                                                  "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?/i,
                                                  "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                                  "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                },
                                              },
                                              "pattern": /#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}/,
                                            },
                                          },
                                          "pattern": /\\("\\|'\\)\\(\\?:#\\\\\\{\\[\\^\\}\\]\\+\\\\\\}\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                        },
                                      ],
                                      "symbol": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^:\\]\\):\\[a-zA-Z_\\]\\\\w\\*\\(\\?:\\[\\?!\\]\\|\\\\b\\)/,
                                      },
                                      "variable": /\\[@\\$\\]\\+\\[a-zA-Z_\\]\\\\w\\*\\(\\?:\\[\\?!\\]\\|\\\\b\\)/,
                                    },
                                    "rust": Object {
                                      "attribute": Object {
                                        "alias": "attr-name",
                                        "greedy": true,
                                        "pattern": /#!\\?\\\\\\[\\.\\+\\?\\\\\\]/,
                                      },
                                      "char": Object {
                                        "alias": "string",
                                        "pattern": /b\\?'\\(\\?:\\\\\\\\\\(\\?:x\\[0-7\\]\\[\\\\da-fA-F\\]\\|u\\{\\(\\?:\\[\\\\da-fA-F\\]_\\*\\)\\{1,6\\}\\|\\.\\)\\|\\[\\^\\\\\\\\\\\\r\\\\n\\\\t'\\]\\)'/,
                                      },
                                      "closure-params": Object {
                                        "inside": Object {
                                          "operator": /\\[&\\*\\]/,
                                          "punctuation": /\\[\\|:,\\]/,
                                        },
                                        "pattern": /\\\\\\|\\[\\^\\|\\]\\*\\\\\\|\\(\\?=\\\\s\\*\\[\\{-\\]\\)/,
                                      },
                                      "comment": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                        },
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "function": Array [
                                        /\\\\w\\+\\(\\?=\\\\s\\*\\\\\\(\\)/,
                                        /\\\\w\\+!\\(\\?=\\\\s\\*\\\\\\(\\|\\\\\\[\\)/,
                                      ],
                                      "keyword": /\\\\b\\(\\?:abstract\\|alignof\\|as\\|be\\|box\\|break\\|const\\|continue\\|crate\\|do\\|else\\|enum\\|extern\\|false\\|final\\|fn\\|for\\|if\\|impl\\|in\\|let\\|loop\\|match\\|mod\\|move\\|mut\\|offsetof\\|once\\|override\\|priv\\|pub\\|pure\\|ref\\|return\\|sizeof\\|static\\|self\\|struct\\|super\\|true\\|trait\\|type\\|typeof\\|unsafe\\|unsized\\|use\\|virtual\\|where\\|while\\|yield\\)\\\\b/,
                                      "lifetime-annotation": Object {
                                        "alias": "symbol",
                                        "pattern": /'\\[\\^\\\\s>'\\]\\+/,
                                      },
                                      "macro-rules": Object {
                                        "alias": "function",
                                        "pattern": /\\\\w\\+!/,
                                      },
                                      "number": /\\\\b\\(\\?:0x\\[\\\\dA-Fa-f\\]\\(\\?:_\\?\\[\\\\dA-Fa-f\\]\\)\\*\\|0o\\[0-7\\]\\(\\?:_\\?\\[0-7\\]\\)\\*\\|0b\\[01\\]\\(\\?:_\\?\\[01\\]\\)\\*\\|\\(\\\\d\\(\\?:_\\?\\\\d\\)\\*\\)\\?\\\\\\.\\?\\\\d\\(\\?:_\\?\\\\d\\)\\*\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?\\)\\(\\?:_\\?\\(\\?:\\[iu\\]\\(\\?:8\\|16\\|32\\|64\\)\\?\\|f32\\|f64\\)\\)\\?\\\\b/,
                                      "operator": /\\[-\\+\\*\\\\/%!\\^\\]=\\?\\|=\\[=>\\]\\?\\|@\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|<<\\?=\\?\\|>>\\?=\\?/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),:\\]\\|\\\\\\.\\+\\|->/,
                                      "string": Array [
                                        Object {
                                          "greedy": true,
                                          "pattern": /b\\?r\\(#\\*\\)"\\(\\?:\\\\\\\\\\.\\|\\(\\?!"\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*"\\\\1/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "pattern": /b\\?"\\(\\?:\\\\\\\\\\.\\|\\[\\^\\\\\\\\\\\\r\\\\n"\\]\\)\\*"/,
                                        },
                                      ],
                                    },
                                    "sass": Object {
                                      "atrule-line": Object {
                                        "inside": Object {
                                          "atrule": /\\(\\?:@\\[\\\\w-\\]\\+\\|\\[\\+=\\]\\)/m,
                                        },
                                        "pattern": /\\^\\(\\?:\\[ \\\\t\\]\\*\\)\\[@\\+=\\]\\.\\+/m,
                                      },
                                      "comment": Object {
                                        "lookbehind": true,
                                        "pattern": /\\^\\(\\[ \\\\t\\]\\*\\)\\\\/\\[\\\\/\\*\\]\\.\\*\\(\\?:\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\1\\[ \\\\t\\]\\+\\.\\+\\)\\*/m,
                                      },
                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                      "number": /\\[\\\\d%\\.\\]\\+/,
                                      "property-line": Object {
                                        "inside": Object {
                                          "important": /\\\\B!important\\\\b/i,
                                          "operator": Array [
                                            /\\[\\+\\*\\\\/%\\]\\|\\[=!\\]=\\|<=\\?\\|>=\\?\\|\\\\b\\(\\?:and\\|or\\|not\\)\\\\b/,
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\+\\)-\\(\\?=\\\\s\\)/,
                                            },
                                          ],
                                          "property": Array [
                                            /\\[\\^:\\\\s\\]\\+\\(\\?=\\\\s\\*:\\)/,
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(:\\)\\[\\^:\\\\s\\]\\+/,
                                            },
                                          ],
                                          "punctuation": /:/,
                                          "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                                        },
                                        "pattern": /\\^\\[ \\\\t\\]\\*\\(\\?:\\[\\^:\\\\s\\]\\+ \\*:\\.\\*\\|:\\[\\^:\\\\s\\]\\+\\.\\*\\)/m,
                                      },
                                      "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                      "selector": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\[ \\\\t\\]\\*\\)\\\\S\\(\\?:,\\?\\[\\^,\\\\r\\\\n\\]\\+\\)\\*\\(\\?:,\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\\\1\\[ \\\\t\\]\\+\\\\S\\(\\?:,\\?\\[\\^,\\\\r\\\\n\\]\\+\\)\\*\\)\\*/,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                      "variable-line": Object {
                                        "inside": Object {
                                          "operator": Array [
                                            /\\[\\+\\*\\\\/%\\]\\|\\[=!\\]=\\|<=\\?\\|>=\\?\\|\\\\b\\(\\?:and\\|or\\|not\\)\\\\b/,
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\\\s\\+\\)-\\(\\?=\\\\s\\)/,
                                            },
                                          ],
                                          "punctuation": /:/,
                                          "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                                        },
                                        "pattern": /\\^\\[ \\\\t\\]\\*\\\\\\$\\.\\+/m,
                                      },
                                    },
                                    "scss": Object {
                                      "atrule": Object {
                                        "inside": Object {
                                          "rest": [Circular],
                                          "rule": /@\\[\\\\w-\\]\\+/,
                                        },
                                        "pattern": /@\\[\\\\w-\\]\\+\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\+\\\\\\)\\|\\[\\^\\(\\]\\)\\*\\?\\(\\?=\\\\s\\+\\[\\{;\\]\\)/,
                                      },
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "comment": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                      },
                                      "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                      "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                      "important": /\\\\B!important\\\\b/i,
                                      "keyword": Array [
                                        /@\\(\\?:if\\|else\\(\\?: if\\)\\?\\|for\\|each\\|while\\|import\\|extend\\|debug\\|warn\\|mixin\\|include\\|function\\|return\\|content\\)/i,
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\( \\+\\)\\(\\?:from\\|through\\)\\(\\?= \\)/,
                                        },
                                      ],
                                      "null": /\\\\bnull\\\\b/,
                                      "number": /\\[\\\\d%\\.\\]\\+/,
                                      "operator": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\s\\)\\(\\?:\\[-\\+\\*\\\\/%\\]\\|\\[=!\\]=\\|<=\\?\\|>=\\?\\|and\\|or\\|not\\)\\(\\?=\\\\s\\)/,
                                      },
                                      "placeholder": Object {
                                        "alias": "selector",
                                        "pattern": /%\\[-\\\\w\\]\\+/,
                                      },
                                      "property": Object {
                                        "inside": Object {
                                          "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                                        },
                                        "pattern": /\\(\\?:\\[\\\\w-\\]\\|\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}\\)\\+\\(\\?=\\\\s\\*:\\)/i,
                                      },
                                      "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                      "selector": Object {
                                        "inside": Object {
                                          "parent": Object {
                                            "alias": "important",
                                            "pattern": /&/,
                                          },
                                          "placeholder": /%\\[-\\\\w\\]\\+/,
                                          "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                                        },
                                        "pattern": /\\(\\?=\\\\S\\)\\[\\^@;\\{\\}\\(\\)\\]\\?\\(\\?:\\[\\^@;\\{\\}\\(\\)\\]\\|&\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}\\)\\+\\(\\?=\\\\s\\*\\\\\\{\\(\\?:\\\\\\}\\|\\\\s\\|\\[\\^\\}\\]\\+\\[:\\{\\]\\[\\^\\}\\]\\+\\)\\)/m,
                                      },
                                      "statement": Object {
                                        "alias": "keyword",
                                        "pattern": /\\\\B!\\(\\?:default\\|optional\\)\\\\b/i,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "url": /\\(\\?:\\[-a-z\\]\\+-\\)\\*url\\(\\?=\\\\\\(\\)/i,
                                      "variable": /\\\\\\$\\[-\\\\w\\]\\+\\|#\\\\\\{\\\\\\$\\[-\\\\w\\]\\+\\\\\\}/,
                                    },
                                    "shell": Object {
                                      "boolean": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                      },
                                      "comment": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^"\\{\\\\\\\\\\]\\)#\\.\\*/,
                                      },
                                      "function": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:alias\\|apropos\\|apt-get\\|aptitude\\|aspell\\|awk\\|basename\\|bash\\|bc\\|bg\\|builtin\\|bzip2\\|cal\\|cat\\|cd\\|cfdisk\\|chgrp\\|chmod\\|chown\\|chroot\\|chkconfig\\|cksum\\|clear\\|cmp\\|comm\\|command\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|enable\\|env\\|ethtool\\|eval\\|exec\\|expand\\|expect\\|export\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|getopts\\|git\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|gzip\\|hash\\|head\\|help\\|hg\\|history\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logout\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|make\\|man\\|mkdir\\|mkfifo\\|mkisofs\\|mknod\\|more\\|most\\|mount\\|mtools\\|mtr\\|mv\\|mmv\\|nano\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|open\\|op\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|popd\\|pr\\|printcap\\|printenv\\|printf\\|ps\\|pushd\\|pv\\|pwd\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|read\\|readarray\\|readonly\\|reboot\\|rename\\|renice\\|remsync\\|rev\\|rm\\|rmdir\\|rsync\\|screen\\|scp\\|sdiff\\|sed\\|seq\\|service\\|sftp\\|shift\\|shopt\\|shutdown\\|sleep\\|slocate\\|sort\\|source\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|sync\\|tail\\|tar\\|tee\\|test\\|time\\|timeout\\|times\\|touch\\|top\\|traceroute\\|trap\\|tr\\|tsort\\|tty\\|type\\|ulimit\\|umask\\|umount\\|unalias\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uuencode\\|uudecode\\|v\\|vdir\\|vi\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yes\\|zip\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                      },
                                      "keyword": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:let\\|:\\|\\\\\\.\\|if\\|then\\|else\\|elif\\|fi\\|for\\|break\\|continue\\|while\\|in\\|case\\|function\\|select\\|do\\|done\\|until\\|echo\\|exit\\|return\\|set\\|declare\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                      },
                                      "operator": /&&\\?\\|\\\\\\|\\\\\\|\\?\\|==\\?\\|!=\\?\\|<<<\\?\\|>>\\|<=\\?\\|>=\\?\\|=~/,
                                      "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\]/,
                                      "shebang": Object {
                                        "alias": "important",
                                        "pattern": /\\^#!\\\\s\\*\\\\/bin\\\\/bash\\|\\^#!\\\\s\\*\\\\/bin\\\\/sh/,
                                      },
                                      "string": Array [
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "variable": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                                  "operator": /--\\?\\|-=\\|\\\\\\+\\\\\\+\\?\\|\\\\\\+=\\|!=\\?\\|~\\|\\\\\\*\\\\\\*\\?\\|\\\\\\*=\\|\\\\/=\\?\\|%=\\?\\|<<=\\?\\|>>=\\?\\|<=\\?\\|>=\\?\\|==\\?\\|&&\\?\\|&=\\|\\\\\\^=\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\|=\\|\\\\\\?\\|:/,
                                                  "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                                  "variable": Array [
                                                    Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                                    },
                                                    /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                                  ],
                                                },
                                                "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "boolean": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "function": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:alias\\|apropos\\|apt-get\\|aptitude\\|aspell\\|awk\\|basename\\|bash\\|bc\\|bg\\|builtin\\|bzip2\\|cal\\|cat\\|cd\\|cfdisk\\|chgrp\\|chmod\\|chown\\|chroot\\|chkconfig\\|cksum\\|clear\\|cmp\\|comm\\|command\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|enable\\|env\\|ethtool\\|eval\\|exec\\|expand\\|expect\\|export\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|getopts\\|git\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|gzip\\|hash\\|head\\|help\\|hg\\|history\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logout\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|make\\|man\\|mkdir\\|mkfifo\\|mkisofs\\|mknod\\|more\\|most\\|mount\\|mtools\\|mtr\\|mv\\|mmv\\|nano\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|open\\|op\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|popd\\|pr\\|printcap\\|printenv\\|printf\\|ps\\|pushd\\|pv\\|pwd\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|read\\|readarray\\|readonly\\|reboot\\|rename\\|renice\\|remsync\\|rev\\|rm\\|rmdir\\|rsync\\|screen\\|scp\\|sdiff\\|sed\\|seq\\|service\\|sftp\\|shift\\|shopt\\|shutdown\\|sleep\\|slocate\\|sort\\|source\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|sync\\|tail\\|tar\\|tee\\|test\\|time\\|timeout\\|times\\|touch\\|top\\|traceroute\\|trap\\|tr\\|tsort\\|tty\\|type\\|ulimit\\|umask\\|umount\\|unalias\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uuencode\\|uudecode\\|v\\|vdir\\|vi\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yes\\|zip\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "keyword": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:let\\|:\\|\\\\\\.\\|if\\|then\\|else\\|elif\\|fi\\|for\\|break\\|continue\\|while\\|in\\|case\\|function\\|select\\|do\\|done\\|until\\|echo\\|exit\\|return\\|set\\|declare\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "operator": /&&\\?\\|\\\\\\|\\\\\\|\\?\\|==\\?\\|!=\\?\\|<<<\\?\\|>>\\|<=\\?\\|>=\\?\\|=~/,
                                                  "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\]/,
                                                  "string": [Circular],
                                                  "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                                },
                                                "pattern": /\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                              },
                                              /\\\\\\$\\(\\?:\\[\\\\w#\\?\\*!@\\]\\+\\|\\\\\\{\\[\\^\\}\\]\\+\\\\\\}\\)/i,
                                            ],
                                          },
                                          "lookbehind": true,
                                          "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<\\\\s\\*\\)\\["'\\]\\?\\(\\\\w\\+\\?\\)\\["'\\]\\?\\\\s\\*\\\\r\\?\\\\n\\(\\?:\\[\\\\s\\\\S\\]\\)\\*\\?\\\\r\\?\\\\n\\\\2/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "variable": Array [
                                              Object {
                                                "inside": Object {
                                                  "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                                  "operator": /--\\?\\|-=\\|\\\\\\+\\\\\\+\\?\\|\\\\\\+=\\|!=\\?\\|~\\|\\\\\\*\\\\\\*\\?\\|\\\\\\*=\\|\\\\/=\\?\\|%=\\?\\|<<=\\?\\|>>=\\?\\|<=\\?\\|>=\\?\\|==\\?\\|&&\\?\\|&=\\|\\\\\\^=\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\|=\\|\\\\\\?\\|:/,
                                                  "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                                  "variable": Array [
                                                    Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                                    },
                                                    /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                                  ],
                                                },
                                                "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "boolean": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "function": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:alias\\|apropos\\|apt-get\\|aptitude\\|aspell\\|awk\\|basename\\|bash\\|bc\\|bg\\|builtin\\|bzip2\\|cal\\|cat\\|cd\\|cfdisk\\|chgrp\\|chmod\\|chown\\|chroot\\|chkconfig\\|cksum\\|clear\\|cmp\\|comm\\|command\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|enable\\|env\\|ethtool\\|eval\\|exec\\|expand\\|expect\\|export\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|getopts\\|git\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|gzip\\|hash\\|head\\|help\\|hg\\|history\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logout\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|make\\|man\\|mkdir\\|mkfifo\\|mkisofs\\|mknod\\|more\\|most\\|mount\\|mtools\\|mtr\\|mv\\|mmv\\|nano\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|open\\|op\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|popd\\|pr\\|printcap\\|printenv\\|printf\\|ps\\|pushd\\|pv\\|pwd\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|read\\|readarray\\|readonly\\|reboot\\|rename\\|renice\\|remsync\\|rev\\|rm\\|rmdir\\|rsync\\|screen\\|scp\\|sdiff\\|sed\\|seq\\|service\\|sftp\\|shift\\|shopt\\|shutdown\\|sleep\\|slocate\\|sort\\|source\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|sync\\|tail\\|tar\\|tee\\|test\\|time\\|timeout\\|times\\|touch\\|top\\|traceroute\\|trap\\|tr\\|tsort\\|tty\\|type\\|ulimit\\|umask\\|umount\\|unalias\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uuencode\\|uudecode\\|v\\|vdir\\|vi\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yes\\|zip\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "keyword": Object {
                                                    "lookbehind": true,
                                                    "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:let\\|:\\|\\\\\\.\\|if\\|then\\|else\\|elif\\|fi\\|for\\|break\\|continue\\|while\\|in\\|case\\|function\\|select\\|do\\|done\\|until\\|echo\\|exit\\|return\\|set\\|declare\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                                  },
                                                  "operator": /&&\\?\\|\\\\\\|\\\\\\|\\?\\|==\\?\\|!=\\?\\|<<<\\?\\|>>\\|<=\\?\\|>=\\?\\|=~/,
                                                  "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\]/,
                                                  "string": [Circular],
                                                  "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                                },
                                                "pattern": /\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                              },
                                              /\\\\\\$\\(\\?:\\[\\\\w#\\?\\*!@\\]\\+\\|\\\\\\{\\[\\^\\}\\]\\+\\\\\\}\\)/i,
                                            ],
                                          },
                                          "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1/,
                                        },
                                      ],
                                      "variable": Array [
                                        Object {
                                          "inside": Object {
                                            "number": /\\\\b0x\\[\\\\dA-Fa-f\\]\\+\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]-\\?\\\\d\\+\\)\\?/,
                                            "operator": /--\\?\\|-=\\|\\\\\\+\\\\\\+\\?\\|\\\\\\+=\\|!=\\?\\|~\\|\\\\\\*\\\\\\*\\?\\|\\\\\\*=\\|\\\\/=\\?\\|%=\\?\\|<<=\\?\\|>>=\\?\\|<=\\?\\|>=\\?\\|==\\?\\|&&\\?\\|&=\\|\\\\\\^=\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\|=\\|\\\\\\?\\|:/,
                                            "punctuation": /\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|,\\|;/,
                                            "variable": Array [
                                              Object {
                                                "lookbehind": true,
                                                "pattern": /\\(\\^\\\\\\$\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\)\\\\\\)\\\\\\)/,
                                              },
                                              /\\^\\\\\\$\\\\\\(\\\\\\(/,
                                            ],
                                          },
                                          "pattern": /\\\\\\$\\?\\\\\\(\\\\\\(\\[\\\\s\\\\S\\]\\+\\?\\\\\\)\\\\\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "inside": Object {
                                            "boolean": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:true\\|false\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                            },
                                            "function": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:alias\\|apropos\\|apt-get\\|aptitude\\|aspell\\|awk\\|basename\\|bash\\|bc\\|bg\\|builtin\\|bzip2\\|cal\\|cat\\|cd\\|cfdisk\\|chgrp\\|chmod\\|chown\\|chroot\\|chkconfig\\|cksum\\|clear\\|cmp\\|comm\\|command\\|cp\\|cron\\|crontab\\|csplit\\|curl\\|cut\\|date\\|dc\\|dd\\|ddrescue\\|df\\|diff\\|diff3\\|dig\\|dir\\|dircolors\\|dirname\\|dirs\\|dmesg\\|du\\|egrep\\|eject\\|enable\\|env\\|ethtool\\|eval\\|exec\\|expand\\|expect\\|export\\|expr\\|fdformat\\|fdisk\\|fg\\|fgrep\\|file\\|find\\|fmt\\|fold\\|format\\|free\\|fsck\\|ftp\\|fuser\\|gawk\\|getopts\\|git\\|grep\\|groupadd\\|groupdel\\|groupmod\\|groups\\|gzip\\|hash\\|head\\|help\\|hg\\|history\\|hostname\\|htop\\|iconv\\|id\\|ifconfig\\|ifdown\\|ifup\\|import\\|install\\|jobs\\|join\\|kill\\|killall\\|less\\|link\\|ln\\|locate\\|logname\\|logout\\|look\\|lpc\\|lpr\\|lprint\\|lprintd\\|lprintq\\|lprm\\|ls\\|lsof\\|make\\|man\\|mkdir\\|mkfifo\\|mkisofs\\|mknod\\|more\\|most\\|mount\\|mtools\\|mtr\\|mv\\|mmv\\|nano\\|netstat\\|nice\\|nl\\|nohup\\|notify-send\\|npm\\|nslookup\\|open\\|op\\|passwd\\|paste\\|pathchk\\|ping\\|pkill\\|popd\\|pr\\|printcap\\|printenv\\|printf\\|ps\\|pushd\\|pv\\|pwd\\|quota\\|quotacheck\\|quotactl\\|ram\\|rar\\|rcp\\|read\\|readarray\\|readonly\\|reboot\\|rename\\|renice\\|remsync\\|rev\\|rm\\|rmdir\\|rsync\\|screen\\|scp\\|sdiff\\|sed\\|seq\\|service\\|sftp\\|shift\\|shopt\\|shutdown\\|sleep\\|slocate\\|sort\\|source\\|split\\|ssh\\|stat\\|strace\\|su\\|sudo\\|sum\\|suspend\\|sync\\|tail\\|tar\\|tee\\|test\\|time\\|timeout\\|times\\|touch\\|top\\|traceroute\\|trap\\|tr\\|tsort\\|tty\\|type\\|ulimit\\|umask\\|umount\\|unalias\\|uname\\|unexpand\\|uniq\\|units\\|unrar\\|unshar\\|uptime\\|useradd\\|userdel\\|usermod\\|users\\|uuencode\\|uudecode\\|v\\|vdir\\|vi\\|vmstat\\|wait\\|watch\\|wc\\|wget\\|whereis\\|which\\|who\\|whoami\\|write\\|xargs\\|xdg-open\\|yes\\|zip\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                            },
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\\\s;\\|&\\]\\)\\(\\?:let\\|:\\|\\\\\\.\\|if\\|then\\|else\\|elif\\|fi\\|for\\|break\\|continue\\|while\\|in\\|case\\|function\\|select\\|do\\|done\\|until\\|echo\\|exit\\|return\\|set\\|declare\\)\\(\\?=\\$\\|\\[\\\\s;\\|&\\]\\)/,
                                            },
                                            "operator": /&&\\?\\|\\\\\\|\\\\\\|\\?\\|==\\?\\|!=\\?\\|<<<\\?\\|>>\\|<=\\?\\|>=\\?\\|=~/,
                                            "punctuation": /\\\\\\$\\?\\\\\\(\\\\\\(\\?\\|\\\\\\)\\\\\\)\\?\\|\\\\\\.\\\\\\.\\|\\[\\{\\}\\[\\\\\\];\\]/,
                                            "string": Array [
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "variable": [Circular],
                                                },
                                                "lookbehind": true,
                                                "pattern": /\\(\\(\\?:\\^\\|\\[\\^<\\]\\)<<\\\\s\\*\\)\\["'\\]\\?\\(\\\\w\\+\\?\\)\\["'\\]\\?\\\\s\\*\\\\r\\?\\\\n\\(\\?:\\[\\\\s\\\\S\\]\\)\\*\\?\\\\r\\?\\\\n\\\\2/,
                                              },
                                              Object {
                                                "greedy": true,
                                                "inside": Object {
                                                  "variable": [Circular],
                                                },
                                                "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1/,
                                              },
                                            ],
                                            "variable": /\\^\\\\\\$\\\\\\(\\|\\^\`\\|\\\\\\)\\$\\|\`\\$/,
                                          },
                                          "pattern": /\\\\\\$\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\|\`\\[\\^\`\\]\\+\`/,
                                        },
                                        /\\\\\\$\\(\\?:\\[\\\\w#\\?\\*!@\\]\\+\\|\\\\\\{\\[\\^\\}\\]\\+\\\\\\}\\)/i,
                                      ],
                                    },
                                    "sql": Object {
                                      "boolean": /\\\\b\\(\\?:TRUE\\|FALSE\\|NULL\\)\\\\b/i,
                                      "comment": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\?:\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\(\\?:--\\|\\\\/\\\\/\\|#\\)\\.\\*\\)/,
                                      },
                                      "function": /\\\\b\\(\\?:AVG\\|COUNT\\|FIRST\\|FORMAT\\|LAST\\|LCASE\\|LEN\\|MAX\\|MID\\|MIN\\|MOD\\|NOW\\|ROUND\\|SUM\\|UCASE\\)\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                      "keyword": /\\\\b\\(\\?:ACTION\\|ADD\\|AFTER\\|ALGORITHM\\|ALL\\|ALTER\\|ANALYZE\\|ANY\\|APPLY\\|AS\\|ASC\\|AUTHORIZATION\\|AUTO_INCREMENT\\|BACKUP\\|BDB\\|BEGIN\\|BERKELEYDB\\|BIGINT\\|BINARY\\|BIT\\|BLOB\\|BOOL\\|BOOLEAN\\|BREAK\\|BROWSE\\|BTREE\\|BULK\\|BY\\|CALL\\|CASCADED\\?\\|CASE\\|CHAIN\\|CHAR\\(\\?:ACTER\\|SET\\)\\?\\|CHECK\\(\\?:POINT\\)\\?\\|CLOSE\\|CLUSTERED\\|COALESCE\\|COLLATE\\|COLUMNS\\?\\|COMMENT\\|COMMIT\\(\\?:TED\\)\\?\\|COMPUTE\\|CONNECT\\|CONSISTENT\\|CONSTRAINT\\|CONTAINS\\(\\?:TABLE\\)\\?\\|CONTINUE\\|CONVERT\\|CREATE\\|CROSS\\|CURRENT\\(\\?:_DATE\\|_TIME\\|_TIMESTAMP\\|_USER\\)\\?\\|CURSOR\\|CYCLE\\|DATA\\(\\?:BASES\\?\\)\\?\\|DATE\\(\\?:TIME\\)\\?\\|DAY\\|DBCC\\|DEALLOCATE\\|DEC\\|DECIMAL\\|DECLARE\\|DEFAULT\\|DEFINER\\|DELAYED\\|DELETE\\|DELIMITERS\\?\\|DENY\\|DESC\\|DESCRIBE\\|DETERMINISTIC\\|DISABLE\\|DISCARD\\|DISK\\|DISTINCT\\|DISTINCTROW\\|DISTRIBUTED\\|DO\\|DOUBLE\\|DROP\\|DUMMY\\|DUMP\\(\\?:FILE\\)\\?\\|DUPLICATE\\|ELSE\\(\\?:IF\\)\\?\\|ENABLE\\|ENCLOSED\\|END\\|ENGINE\\|ENUM\\|ERRLVL\\|ERRORS\\|ESCAPED\\?\\|EXCEPT\\|EXEC\\(\\?:UTE\\)\\?\\|EXISTS\\|EXIT\\|EXPLAIN\\|EXTENDED\\|FETCH\\|FIELDS\\|FILE\\|FILLFACTOR\\|FIRST\\|FIXED\\|FLOAT\\|FOLLOWING\\|FOR\\(\\?: EACH ROW\\)\\?\\|FORCE\\|FOREIGN\\|FREETEXT\\(\\?:TABLE\\)\\?\\|FROM\\|FULL\\|FUNCTION\\|GEOMETRY\\(\\?:COLLECTION\\)\\?\\|GLOBAL\\|GOTO\\|GRANT\\|GROUP\\|HANDLER\\|HASH\\|HAVING\\|HOLDLOCK\\|HOUR\\|IDENTITY\\(\\?:_INSERT\\|COL\\)\\?\\|IF\\|IGNORE\\|IMPORT\\|INDEX\\|INFILE\\|INNER\\|INNODB\\|INOUT\\|INSERT\\|INT\\|INTEGER\\|INTERSECT\\|INTERVAL\\|INTO\\|INVOKER\\|ISOLATION\\|ITERATE\\|JOIN\\|KEYS\\?\\|KILL\\|LANGUAGE\\|LAST\\|LEAVE\\|LEFT\\|LEVEL\\|LIMIT\\|LINENO\\|LINES\\|LINESTRING\\|LOAD\\|LOCAL\\|LOCK\\|LONG\\(\\?:BLOB\\|TEXT\\)\\|LOOP\\|MATCH\\(\\?:ED\\)\\?\\|MEDIUM\\(\\?:BLOB\\|INT\\|TEXT\\)\\|MERGE\\|MIDDLEINT\\|MINUTE\\|MODE\\|MODIFIES\\|MODIFY\\|MONTH\\|MULTI\\(\\?:LINESTRING\\|POINT\\|POLYGON\\)\\|NATIONAL\\|NATURAL\\|NCHAR\\|NEXT\\|NO\\|NONCLUSTERED\\|NULLIF\\|NUMERIC\\|OFF\\?\\|OFFSETS\\?\\|ON\\|OPEN\\(\\?:DATASOURCE\\|QUERY\\|ROWSET\\)\\?\\|OPTIMIZE\\|OPTION\\(\\?:ALLY\\)\\?\\|ORDER\\|OUT\\(\\?:ER\\|FILE\\)\\?\\|OVER\\|PARTIAL\\|PARTITION\\|PERCENT\\|PIVOT\\|PLAN\\|POINT\\|POLYGON\\|PRECEDING\\|PRECISION\\|PREPARE\\|PREV\\|PRIMARY\\|PRINT\\|PRIVILEGES\\|PROC\\(\\?:EDURE\\)\\?\\|PUBLIC\\|PURGE\\|QUICK\\|RAISERROR\\|READS\\?\\|REAL\\|RECONFIGURE\\|REFERENCES\\|RELEASE\\|RENAME\\|REPEAT\\(\\?:ABLE\\)\\?\\|REPLACE\\|REPLICATION\\|REQUIRE\\|RESIGNAL\\|RESTORE\\|RESTRICT\\|RETURNS\\?\\|REVOKE\\|RIGHT\\|ROLLBACK\\|ROUTINE\\|ROW\\(\\?:COUNT\\|GUIDCOL\\|S\\)\\?\\|RTREE\\|RULE\\|SAVE\\(\\?:POINT\\)\\?\\|SCHEMA\\|SECOND\\|SELECT\\|SERIAL\\(\\?:IZABLE\\)\\?\\|SESSION\\(\\?:_USER\\)\\?\\|SET\\(\\?:USER\\)\\?\\|SHARE\\|SHOW\\|SHUTDOWN\\|SIMPLE\\|SMALLINT\\|SNAPSHOT\\|SOME\\|SONAME\\|SQL\\|START\\(\\?:ING\\)\\?\\|STATISTICS\\|STATUS\\|STRIPED\\|SYSTEM_USER\\|TABLES\\?\\|TABLESPACE\\|TEMP\\(\\?:ORARY\\|TABLE\\)\\?\\|TERMINATED\\|TEXT\\(\\?:SIZE\\)\\?\\|THEN\\|TIME\\(\\?:STAMP\\)\\?\\|TINY\\(\\?:BLOB\\|INT\\|TEXT\\)\\|TOP\\?\\|TRAN\\(\\?:SACTIONS\\?\\)\\?\\|TRIGGER\\|TRUNCATE\\|TSEQUAL\\|TYPES\\?\\|UNBOUNDED\\|UNCOMMITTED\\|UNDEFINED\\|UNION\\|UNIQUE\\|UNLOCK\\|UNPIVOT\\|UNSIGNED\\|UPDATE\\(\\?:TEXT\\)\\?\\|USAGE\\|USE\\|USER\\|USING\\|VALUES\\?\\|VAR\\(\\?:BINARY\\|CHAR\\|CHARACTER\\|YING\\)\\|VIEW\\|WAITFOR\\|WARNINGS\\|WHEN\\|WHERE\\|WHILE\\|WITH\\(\\?: ROLLUP\\|IN\\)\\?\\|WORK\\|WRITE\\(\\?:TEXT\\)\\?\\|YEAR\\)\\\\b/i,
                                      "number": /\\\\b0x\\[\\\\da-f\\]\\+\\\\b\\|\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\\\b/i,
                                      "operator": /\\[-\\+\\*\\\\/=%\\^~\\]\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|!=\\?\\|<\\(\\?:=>\\?\\|<\\|>\\)\\?\\|>\\[>=\\]\\?\\|\\\\b\\(\\?:AND\\|BETWEEN\\|IN\\|LIKE\\|NOT\\|OR\\|IS\\|DIV\\|REGEXP\\|RLIKE\\|SOUNDS LIKE\\|XOR\\)\\\\b/i,
                                      "punctuation": /\\[;\\[\\\\\\]\\(\\)\`,\\.\\]/,
                                      "string": Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^@\\\\\\\\\\]\\)\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\2/,
                                      },
                                      "variable": /@\\[\\\\w\\.\\$\\]\\+\\|@\\(\\["'\`\\]\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\+\\\\1/,
                                    },
                                    "stylus": Object {
                                      "atrule-declaration": Object {
                                        "inside": Object {
                                          "atrule": /\\^@\\[\\\\w-\\]\\+/,
                                          "rest": Object {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "func": Object {
                                              "inside": Object {
                                                "function": /\\^\\[\\^\\(\\]\\+/,
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                            },
                                            "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                            "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                            "interpolation": Object {
                                              "alias": "variable",
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^\\{\\|\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                            },
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                            },
                                            "number": /\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?%\\?/,
                                            "operator": Array [
                                              /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\+\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                            ],
                                            "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                            },
                                            "url": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\\\s\\*\\)@\\.\\+/m,
                                      },
                                      "comment": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\(\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\/\\|\\\\/\\\\/\\.\\*\\)/,
                                      },
                                      "func": Object {
                                        "inside": Object {
                                          "function": /\\^\\[\\^\\(\\]\\+/,
                                          "rest": Object {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "func": [Circular],
                                            "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                            "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                            "interpolation": Object {
                                              "alias": "variable",
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^\\{\\|\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                            },
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                            },
                                            "number": /\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?%\\?/,
                                            "operator": Array [
                                              /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\+\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                            ],
                                            "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                            },
                                            "url": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                          },
                                        },
                                        "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                      },
                                      "interpolation": Object {
                                        "alias": "variable",
                                        "inside": Object {
                                          "delimiter": Object {
                                            "alias": "punctuation",
                                            "pattern": /\\^\\{\\|\\}\\$/,
                                          },
                                          "rest": Object {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "func": Object {
                                              "inside": Object {
                                                "function": /\\^\\[\\^\\(\\]\\+/,
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                            },
                                            "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                            "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                            "interpolation": [Circular],
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                            },
                                            "number": /\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?%\\?/,
                                            "operator": Array [
                                              /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\+\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                            ],
                                            "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                            },
                                            "url": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                          },
                                        },
                                        "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                      },
                                      "property-declaration": Object {
                                        "inside": Object {
                                          "property": Object {
                                            "inside": Object {
                                              "interpolation": Object {
                                                "alias": "variable",
                                                "inside": Object {
                                                  "delimiter": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\{\\|\\}\\$/,
                                                  },
                                                  "rest": Object {
                                                    "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                    "func": Object {
                                                      "inside": Object {
                                                        "function": /\\^\\[\\^\\(\\]\\+/,
                                                        "rest": [Circular],
                                                      },
                                                      "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                                    },
                                                    "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                                    "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                                    "interpolation": [Circular],
                                                    "keyword": Object {
                                                      "lookbehind": true,
                                                      "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                                    },
                                                    "number": /\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?%\\?/,
                                                    "operator": Array [
                                                      /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\+\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                                    ],
                                                    "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                                    "string": Object {
                                                      "greedy": true,
                                                      "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                                    },
                                                    "url": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                                  },
                                                },
                                                "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                              },
                                            },
                                            "pattern": /\\^\\[\\^\\\\s:\\]\\+/,
                                          },
                                          "rest": Object {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "func": Object {
                                              "inside": Object {
                                                "function": /\\^\\[\\^\\(\\]\\+/,
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                            },
                                            "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                            "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                            "interpolation": Object {
                                              "alias": "variable",
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^\\{\\|\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                            },
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                            },
                                            "number": /\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?%\\?/,
                                            "operator": Array [
                                              /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\+\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                            ],
                                            "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                            },
                                            "url": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\\\\\{\\)\\(\\[ \\\\t\\]\\*\\)\\)\\(\\?:\\[\\\\w-\\]\\|\\\\\\{\\[\\^\\}\\\\r\\\\n\\]\\+\\\\\\}\\)\\+\\(\\?:\\\\s\\*:\\\\s\\*\\|\\[ \\\\t\\]\\+\\)\\[\\^\\{\\\\r\\\\n\\]\\*\\(\\?:;\\|\\[\\^\\{\\\\r\\\\n,\\]\\(\\?=\\$\\)\\(\\?!\\(\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\\\\\{\\|\\\\2\\[ \\\\t\\]\\+\\)\\)\\)/m,
                                      },
                                      "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:\\.\\]/,
                                      "selector": Object {
                                        "inside": Object {
                                          "interpolation": Object {
                                            "alias": "variable",
                                            "inside": Object {
                                              "delimiter": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\{\\|\\}\\$/,
                                              },
                                              "rest": Object {
                                                "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                                "func": Object {
                                                  "inside": Object {
                                                    "function": /\\^\\[\\^\\(\\]\\+/,
                                                    "rest": [Circular],
                                                  },
                                                  "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                                },
                                                "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                                "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                                "interpolation": [Circular],
                                                "keyword": Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                                },
                                                "number": /\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?%\\?/,
                                                "operator": Array [
                                                  /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\+\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                                ],
                                                "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                                "string": Object {
                                                  "greedy": true,
                                                  "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                                },
                                                "url": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                              },
                                            },
                                            "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                          },
                                          "punctuation": /\\[\\{\\},\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)\\(\\?:\\(\\?=\\\\S\\)\\(\\?:\\[\\^\\{\\}\\\\r\\\\n:\\(\\)\\]\\|::\\?\\[\\\\w-\\]\\+\\(\\?:\\\\\\(\\[\\^\\)\\\\r\\\\n\\]\\*\\\\\\)\\)\\?\\|\\\\\\{\\[\\^\\}\\\\r\\\\n\\]\\+\\\\\\}\\)\\+\\)\\(\\?:\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\\\1\\(\\?:\\(\\?=\\\\S\\)\\(\\?:\\[\\^\\{\\}\\\\r\\\\n:\\(\\)\\]\\|::\\?\\[\\\\w-\\]\\+\\(\\?:\\\\\\(\\[\\^\\)\\\\r\\\\n\\]\\*\\\\\\)\\)\\?\\|\\\\\\{\\[\\^\\}\\\\r\\\\n\\]\\+\\\\\\}\\)\\+\\)\\)\\)\\*\\(\\?:,\\$\\|\\\\\\{\\|\\(\\?=\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\(\\?:\\\\\\{\\|\\\\1\\[ \\\\t\\]\\+\\)\\)\\)/m,
                                      },
                                      "statement": Object {
                                        "inside": Object {
                                          "keyword": /\\^\\\\S\\+/,
                                          "rest": Object {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "func": Object {
                                              "inside": Object {
                                                "function": /\\^\\[\\^\\(\\]\\+/,
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                            },
                                            "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                            "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                            "interpolation": Object {
                                              "alias": "variable",
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^\\{\\|\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                            },
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                            },
                                            "number": /\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?%\\?/,
                                            "operator": Array [
                                              /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\+\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                            ],
                                            "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                            },
                                            "url": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\[ \\\\t\\]\\+\\.\\+/m,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                      },
                                      "variable-declaration": Object {
                                        "inside": Object {
                                          "rest": Object {
                                            "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                            "func": Object {
                                              "inside": Object {
                                                "function": /\\^\\[\\^\\(\\]\\+/,
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\[\\\\w-\\]\\+\\\\\\(\\[\\^\\)\\]\\*\\\\\\)\\.\\*/,
                                            },
                                            "hexcode": /#\\[\\\\da-f\\]\\{3,6\\}/i,
                                            "important": /\\\\B!\\(\\?:important\\|optional\\)\\\\b/i,
                                            "interpolation": Object {
                                              "alias": "variable",
                                              "inside": Object {
                                                "delimiter": Object {
                                                  "alias": "punctuation",
                                                  "pattern": /\\^\\{\\|\\}\\$/,
                                                },
                                                "rest": [Circular],
                                              },
                                              "pattern": /\\\\\\{\\[\\^\\\\r\\\\n\\}:\\]\\+\\\\\\}/,
                                            },
                                            "keyword": Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\\\s\\+\\)\\(\\?:\\(\\?:if\\|else\\|for\\|return\\|unless\\)\\(\\?=\\\\s\\+\\|\\$\\)\\|@\\[\\\\w-\\]\\+\\)/,
                                            },
                                            "number": /\\\\b\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?%\\?/,
                                            "operator": Array [
                                              /~\\|\\[\\+!\\\\/%<>\\?=\\]=\\?\\|\\[-:\\]=\\|\\\\\\*\\[\\*=\\]\\?\\|\\\\\\.\\+\\|&&\\|\\\\\\|\\\\\\|\\|\\\\B-\\\\B\\|\\\\b\\(\\?:and\\|in\\|is\\(\\?: a\\| defined\\| not\\|nt\\)\\?\\|not\\|or\\)\\\\b/,
                                            ],
                                            "punctuation": /\\[\\{\\}\\(\\)\\\\\\[\\\\\\];:,\\]/,
                                            "string": Object {
                                              "greedy": true,
                                              "pattern": /\\("\\|'\\)\\(\\?:\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\)\\*\\\\1/,
                                            },
                                            "url": /url\\\\\\(\\(\\["'\\]\\?\\)\\.\\*\\?\\\\1\\\\\\)/i,
                                          },
                                          "variable": /\\^\\\\S\\+/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)\\[\\\\w\\$-\\]\\+\\\\s\\*\\.\\?=\\[ \\\\t\\]\\*\\(\\?:\\(\\?:\\\\\\{\\[\\^\\}\\]\\*\\\\\\}\\|\\.\\+\\)\\|\\$\\)/m,
                                      },
                                    },
                                    "svg": Object {
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": /<!DOCTYPE\\[\\\\s\\\\S\\]\\+\\?>/i,
                                      "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "script": Object {
                                        "alias": "language-javascript",
                                        "greedy": true,
                                        "inside": Object {
                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                          "class-name": Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                          },
                                          "comment": Array [
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                            },
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                            },
                                          ],
                                          "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                          "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                          "function-variable": Object {
                                            "alias": "function",
                                            "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                          },
                                          "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                          "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "template-string": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "style": Object {
                                        "alias": "language-css",
                                        "greedy": true,
                                        "inside": Object {
                                          "atrule": Object {
                                            "inside": Object {
                                              "rest": [Circular],
                                              "rule": /@\\[\\\\w-\\]\\+/,
                                            },
                                            "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                          },
                                          "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                          "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                          "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                          "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                          "important": /\\\\B!important\\\\b/i,
                                          "number": /\\[\\\\d%\\.\\]\\+/,
                                          "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                          "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                          "selector": Object {
                                            "inside": Object {
                                              "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                              "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                              "id": /#\\[-:\\.\\\\w\\]\\+/,
                                              "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            },
                                            "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "tag": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "attr-name": Object {
                                            "inside": Object {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": Object {
                                            "inside": Object {
                                              "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                              "punctuation": Array [
                                                /\\^=/,
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                },
                                              ],
                                            },
                                            "pattern": /=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)/i,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "style-attr": Object {
                                            "alias": "language-css",
                                            "inside": Object {
                                              "attr-name": Object {
                                                "inside": Object {
                                                  "attr-name": Object {
                                                    "inside": Object {
                                                      "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                    },
                                                    "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                                  },
                                                  "attr-value": Object {
                                                    "inside": Object {
                                                      "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                                      "punctuation": Array [
                                                        /\\^=/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                        },
                                                      ],
                                                    },
                                                    "pattern": /=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)/i,
                                                  },
                                                  "punctuation": /\\\\/\\?>/,
                                                  "tag": Object {
                                                    "inside": Object {
                                                      "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                      "punctuation": /\\^<\\\\/\\?/,
                                                    },
                                                    "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/i,
                                                  },
                                                },
                                                "pattern": /\\^\\\\s\\*style/i,
                                              },
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "atrule": Object {
                                                    "inside": Object {
                                                      "rest": [Circular],
                                                      "rule": /@\\[\\\\w-\\]\\+/,
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                                  },
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                                  "important": /\\\\B!important\\\\b/i,
                                                  "number": /\\[\\\\d%\\.\\]\\+/,
                                                  "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                                  "selector": Object {
                                                    "inside": Object {
                                                      "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                                      "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                                      "id": /#\\[-:\\.\\\\w\\]\\+/,
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    },
                                                    "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                                },
                                                "pattern": /\\.\\+/i,
                                              },
                                              "punctuation": /\\^\\\\s\\*=\\\\s\\*\\['"\\]\\|\\['"\\]\\\\s\\*\\$/,
                                            },
                                            "pattern": /\\\\s\\*style=\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1/i,
                                          },
                                          "tag": Object {
                                            "inside": Object {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/i,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\+\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)\\)\\?\\)\\*\\\\s\\*\\\\/\\?>/i,
                                      },
                                    },
                                    "swift": Object {
                                      "atrule": /@\\\\b\\(\\?:IB\\(\\?:Outlet\\|Designable\\|Action\\|Inspectable\\)\\|class_protocol\\|exported\\|noreturn\\|NS\\(\\?:Copying\\|Managed\\)\\|objc\\|UIApplicationMain\\|auto_closure\\)\\\\b/,
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "builtin": /\\\\b\\(\\?:\\[A-Z\\]\\\\S\\+\\|abs\\|advance\\|alignof\\(\\?:Value\\)\\?\\|assert\\|contains\\|count\\(\\?:Elements\\)\\?\\|debugPrint\\(\\?:ln\\)\\?\\|distance\\|drop\\(\\?:First\\|Last\\)\\|dump\\|enumerate\\|equal\\|filter\\|find\\|first\\|getVaList\\|indices\\|isEmpty\\|join\\|last\\|lexicographicalCompare\\|map\\|max\\(\\?:Element\\)\\?\\|min\\(\\?:Element\\)\\?\\|numericCast\\|overlaps\\|partition\\|print\\(\\?:ln\\)\\?\\|reduce\\|reflect\\|reverse\\|sizeof\\(\\?:Value\\)\\?\\|sort\\(\\?:ed\\)\\?\\|split\\|startsWith\\|stride\\(\\?:of\\(\\?:Value\\)\\?\\)\\?\\|suffix\\|swap\\|toDebugString\\|toString\\|transcode\\|underestimateCount\\|unsafeBitCast\\|with\\(\\?:ExtendedLifetime\\|Unsafe\\(\\?:MutablePointers\\?\\|Pointers\\?\\)\\|VaList\\)\\)\\\\b/,
                                      "class-name": Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                      },
                                      "comment": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "constant": /\\\\b\\(\\?:nil\\|\\[A-Z_\\]\\{2,\\}\\|k\\[A-Z\\]\\[A-Za-z_\\]\\+\\)\\\\b/,
                                      "function": /\\[a-z0-9_\\]\\+\\(\\?=\\\\\\(\\)/i,
                                      "keyword": /\\\\b\\(\\?:as\\|associativity\\|break\\|case\\|catch\\|class\\|continue\\|convenience\\|default\\|defer\\|deinit\\|didSet\\|do\\|dynamic\\(\\?:Type\\)\\?\\|else\\|enum\\|extension\\|fallthrough\\|final\\|for\\|func\\|get\\|guard\\|if\\|import\\|in\\|infix\\|init\\|inout\\|internal\\|is\\|lazy\\|left\\|let\\|mutating\\|new\\|none\\|nonmutating\\|operator\\|optional\\|override\\|postfix\\|precedence\\|prefix\\|private\\|protocol\\|public\\|repeat\\|required\\|rethrows\\|return\\|right\\|safe\\|self\\|Self\\|set\\|static\\|struct\\|subscript\\|super\\|switch\\|throws\\?\\|try\\|Type\\|typealias\\|unowned\\|unsafe\\|var\\|weak\\|where\\|while\\|willSet\\|__\\(\\?:COLUMN__\\|FILE__\\|FUNCTION__\\|LINE__\\)\\)\\\\b/,
                                      "number": /\\\\b\\(\\?:\\[\\\\d_\\]\\+\\(\\?:\\\\\\.\\[\\\\de_\\]\\+\\)\\?\\|0x\\[a-f0-9_\\]\\+\\(\\?:\\\\\\.\\[a-f0-9p_\\]\\+\\)\\?\\|0b\\[01_\\]\\+\\|0o\\[0-7_\\]\\+\\)\\\\b/i,
                                      "operator": /--\\?\\|\\\\\\+\\\\\\+\\?\\|!=\\?=\\?\\|<=\\?\\|>=\\?\\|==\\?=\\?\\|&&\\?\\|\\\\\\|\\\\\\|\\?\\|\\\\\\?\\|\\\\\\*\\|\\\\/\\|~\\|\\\\\\^\\|%/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "string": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "delimiter": Object {
                                                "alias": "variable",
                                                "pattern": /\\^\\\\\\\\\\\\\\(\\|\\\\\\)\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "pattern": /\\\\\\\\\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\)\\+\\\\\\)/,
                                          },
                                        },
                                        "pattern": /\\("\\|'\\)\\(\\\\\\\\\\(\\?:\\\\\\(\\(\\?:\\[\\^\\(\\)\\]\\|\\\\\\(\\[\\^\\)\\]\\+\\\\\\)\\)\\+\\\\\\)\\|\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                    },
                                    "ts": Object {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\)\\\\b/,
                                      "class-name": Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                      },
                                      "comment": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                      "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                      "function-variable": Object {
                                        "alias": "function",
                                        "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                      },
                                      "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\|module\\|declare\\|constructor\\|namespace\\|abstract\\|require\\|type\\)\\\\b/,
                                      "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                      "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "template-string": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    },
                                    "typescript": Object {
                                      "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                      "builtin": /\\\\b\\(\\?:string\\|Function\\|any\\|number\\|boolean\\|Array\\|symbol\\|console\\)\\\\b/,
                                      "class-name": Object {
                                        "inside": Object {
                                          "punctuation": /\\[\\.\\\\\\\\\\]/,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                      },
                                      "comment": Array [
                                        Object {
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                        },
                                        Object {
                                          "greedy": true,
                                          "lookbehind": true,
                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                        },
                                      ],
                                      "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                      "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                      "function-variable": Object {
                                        "alias": "function",
                                        "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                      },
                                      "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\|module\\|declare\\|constructor\\|namespace\\|abstract\\|require\\|type\\)\\\\b/,
                                      "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                      "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                      "regex": Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                      },
                                      "template-string": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "interpolation": Object {
                                            "inside": Object {
                                              "interpolation-punctuation": Object {
                                                "alias": "punctuation",
                                                "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                              },
                                              "rest": [Circular],
                                            },
                                            "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                          },
                                          "string": /\\[\\\\s\\\\S\\]\\+/,
                                        },
                                        "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                      },
                                    },
                                    "vim": Object {
                                      "builtin": /\\\\b\\(\\?:autocmd\\|acd\\|ai\\|akm\\|aleph\\|allowrevins\\|altkeymap\\|ambiwidth\\|ambw\\|anti\\|antialias\\|arab\\|arabic\\|arabicshape\\|ari\\|arshape\\|autochdir\\|autoindent\\|autoread\\|autowrite\\|autowriteall\\|aw\\|awa\\|background\\|backspace\\|backup\\|backupcopy\\|backupdir\\|backupext\\|backupskip\\|balloondelay\\|ballooneval\\|balloonexpr\\|bdir\\|bdlay\\|beval\\|bex\\|bexpr\\|bg\\|bh\\|bin\\|binary\\|biosk\\|bioskey\\|bk\\|bkc\\|bomb\\|breakat\\|brk\\|browsedir\\|bs\\|bsdir\\|bsk\\|bt\\|bufhidden\\|buflisted\\|buftype\\|casemap\\|ccv\\|cdpath\\|cedit\\|cfu\\|ch\\|charconvert\\|ci\\|cin\\|cindent\\|cink\\|cinkeys\\|cino\\|cinoptions\\|cinw\\|cinwords\\|clipboard\\|cmdheight\\|cmdwinheight\\|cmp\\|cms\\|columns\\|com\\|comments\\|commentstring\\|compatible\\|complete\\|completefunc\\|completeopt\\|consk\\|conskey\\|copyindent\\|cot\\|cpo\\|cpoptions\\|cpt\\|cscopepathcomp\\|cscopeprg\\|cscopequickfix\\|cscopetag\\|cscopetagorder\\|cscopeverbose\\|cspc\\|csprg\\|csqf\\|cst\\|csto\\|csverb\\|cuc\\|cul\\|cursorcolumn\\|cursorline\\|cwh\\|debug\\|deco\\|def\\|define\\|delcombine\\|dex\\|dg\\|dict\\|dictionary\\|diff\\|diffexpr\\|diffopt\\|digraph\\|dip\\|dir\\|directory\\|dy\\|ea\\|ead\\|eadirection\\|eb\\|ed\\|edcompatible\\|ef\\|efm\\|ei\\|ek\\|enc\\|encoding\\|endofline\\|eol\\|ep\\|equalalways\\|equalprg\\|errorbells\\|errorfile\\|errorformat\\|esckeys\\|et\\|eventignore\\|expandtab\\|exrc\\|fcl\\|fcs\\|fdc\\|fde\\|fdi\\|fdl\\|fdls\\|fdm\\|fdn\\|fdo\\|fdt\\|fen\\|fenc\\|fencs\\|fex\\|ff\\|ffs\\|fileencoding\\|fileencodings\\|fileformat\\|fileformats\\|fillchars\\|fk\\|fkmap\\|flp\\|fml\\|fmr\\|foldcolumn\\|foldenable\\|foldexpr\\|foldignore\\|foldlevel\\|foldlevelstart\\|foldmarker\\|foldmethod\\|foldminlines\\|foldnestmax\\|foldtext\\|formatexpr\\|formatlistpat\\|formatoptions\\|formatprg\\|fp\\|fs\\|fsync\\|ft\\|gcr\\|gd\\|gdefault\\|gfm\\|gfn\\|gfs\\|gfw\\|ghr\\|gp\\|grepformat\\|grepprg\\|gtl\\|gtt\\|guicursor\\|guifont\\|guifontset\\|guifontwide\\|guiheadroom\\|guioptions\\|guipty\\|guitablabel\\|guitabtooltip\\|helpfile\\|helpheight\\|helplang\\|hf\\|hh\\|hi\\|hidden\\|highlight\\|hk\\|hkmap\\|hkmapp\\|hkp\\|hl\\|hlg\\|hls\\|hlsearch\\|ic\\|icon\\|iconstring\\|ignorecase\\|im\\|imactivatekey\\|imak\\|imc\\|imcmdline\\|imd\\|imdisable\\|imi\\|iminsert\\|ims\\|imsearch\\|inc\\|include\\|includeexpr\\|incsearch\\|inde\\|indentexpr\\|indentkeys\\|indk\\|inex\\|inf\\|infercase\\|insertmode\\|isf\\|isfname\\|isi\\|isident\\|isk\\|iskeyword\\|isprint\\|joinspaces\\|js\\|key\\|keymap\\|keymodel\\|keywordprg\\|km\\|kmp\\|kp\\|langmap\\|langmenu\\|laststatus\\|lazyredraw\\|lbr\\|lcs\\|linebreak\\|lines\\|linespace\\|lisp\\|lispwords\\|listchars\\|loadplugins\\|lpl\\|lsp\\|lz\\|macatsui\\|magic\\|makeef\\|makeprg\\|matchpairs\\|matchtime\\|maxcombine\\|maxfuncdepth\\|maxmapdepth\\|maxmem\\|maxmempattern\\|maxmemtot\\|mco\\|mef\\|menuitems\\|mfd\\|mh\\|mis\\|mkspellmem\\|ml\\|mls\\|mm\\|mmd\\|mmp\\|mmt\\|modeline\\|modelines\\|modifiable\\|modified\\|more\\|mouse\\|mousef\\|mousefocus\\|mousehide\\|mousem\\|mousemodel\\|mouses\\|mouseshape\\|mouset\\|mousetime\\|mp\\|mps\\|msm\\|mzq\\|mzquantum\\|nf\\|nrformats\\|numberwidth\\|nuw\\|odev\\|oft\\|ofu\\|omnifunc\\|opendevice\\|operatorfunc\\|opfunc\\|osfiletype\\|pa\\|para\\|paragraphs\\|paste\\|pastetoggle\\|patchexpr\\|patchmode\\|path\\|pdev\\|penc\\|pex\\|pexpr\\|pfn\\|ph\\|pheader\\|pi\\|pm\\|pmbcs\\|pmbfn\\|popt\\|preserveindent\\|previewheight\\|previewwindow\\|printdevice\\|printencoding\\|printexpr\\|printfont\\|printheader\\|printmbcharset\\|printmbfont\\|printoptions\\|prompt\\|pt\\|pumheight\\|pvh\\|pvw\\|qe\\|quoteescape\\|readonly\\|remap\\|report\\|restorescreen\\|revins\\|rightleft\\|rightleftcmd\\|rl\\|rlc\\|ro\\|rs\\|rtp\\|ruf\\|ruler\\|rulerformat\\|runtimepath\\|sbo\\|sc\\|scb\\|scr\\|scroll\\|scrollbind\\|scrolljump\\|scrolloff\\|scrollopt\\|scs\\|sect\\|sections\\|secure\\|sel\\|selection\\|selectmode\\|sessionoptions\\|sft\\|shcf\\|shellcmdflag\\|shellpipe\\|shellquote\\|shellredir\\|shellslash\\|shelltemp\\|shelltype\\|shellxquote\\|shiftround\\|shiftwidth\\|shm\\|shortmess\\|shortname\\|showbreak\\|showcmd\\|showfulltag\\|showmatch\\|showmode\\|showtabline\\|shq\\|si\\|sidescroll\\|sidescrolloff\\|siso\\|sj\\|slm\\|smartcase\\|smartindent\\|smarttab\\|smc\\|smd\\|softtabstop\\|sol\\|spc\\|spell\\|spellcapcheck\\|spellfile\\|spelllang\\|spellsuggest\\|spf\\|spl\\|splitbelow\\|splitright\\|sps\\|sr\\|srr\\|ss\\|ssl\\|ssop\\|stal\\|startofline\\|statusline\\|stl\\|stmp\\|su\\|sua\\|suffixes\\|suffixesadd\\|sw\\|swapfile\\|swapsync\\|swb\\|swf\\|switchbuf\\|sws\\|sxq\\|syn\\|synmaxcol\\|syntax\\|tabline\\|tabpagemax\\|tabstop\\|tagbsearch\\|taglength\\|tagrelative\\|tagstack\\|tal\\|tb\\|tbi\\|tbidi\\|tbis\\|tbs\\|tenc\\|term\\|termbidi\\|termencoding\\|terse\\|textauto\\|textmode\\|textwidth\\|tgst\\|thesaurus\\|tildeop\\|timeout\\|timeoutlen\\|title\\|titlelen\\|titleold\\|titlestring\\|toolbar\\|toolbariconsize\\|top\\|tpm\\|tsl\\|tsr\\|ttimeout\\|ttimeoutlen\\|ttm\\|tty\\|ttybuiltin\\|ttyfast\\|ttym\\|ttymouse\\|ttyscroll\\|ttytype\\|tw\\|tx\\|uc\\|ul\\|undolevels\\|updatecount\\|updatetime\\|ut\\|vb\\|vbs\\|vdir\\|verbosefile\\|vfile\\|viewdir\\|viewoptions\\|viminfo\\|virtualedit\\|visualbell\\|vop\\|wak\\|warn\\|wb\\|wc\\|wcm\\|wd\\|weirdinvert\\|wfh\\|wfw\\|whichwrap\\|wi\\|wig\\|wildchar\\|wildcharm\\|wildignore\\|wildmenu\\|wildmode\\|wildoptions\\|wim\\|winaltkeys\\|window\\|winfixheight\\|winfixwidth\\|winheight\\|winminheight\\|winminwidth\\|winwidth\\|wiv\\|wiw\\|wm\\|wmh\\|wmnu\\|wmw\\|wop\\|wrap\\|wrapmargin\\|wrapscan\\|writeany\\|writebackup\\|writedelay\\|ww\\|noacd\\|noai\\|noakm\\|noallowrevins\\|noaltkeymap\\|noanti\\|noantialias\\|noar\\|noarab\\|noarabic\\|noarabicshape\\|noari\\|noarshape\\|noautochdir\\|noautoindent\\|noautoread\\|noautowrite\\|noautowriteall\\|noaw\\|noawa\\|nobackup\\|noballooneval\\|nobeval\\|nobin\\|nobinary\\|nobiosk\\|nobioskey\\|nobk\\|nobl\\|nobomb\\|nobuflisted\\|nocf\\|noci\\|nocin\\|nocindent\\|nocompatible\\|noconfirm\\|noconsk\\|noconskey\\|nocopyindent\\|nocp\\|nocscopetag\\|nocscopeverbose\\|nocst\\|nocsverb\\|nocuc\\|nocul\\|nocursorcolumn\\|nocursorline\\|nodeco\\|nodelcombine\\|nodg\\|nodiff\\|nodigraph\\|nodisable\\|noea\\|noeb\\|noed\\|noedcompatible\\|noek\\|noendofline\\|noeol\\|noequalalways\\|noerrorbells\\|noesckeys\\|noet\\|noex\\|noexpandtab\\|noexrc\\|nofen\\|nofk\\|nofkmap\\|nofoldenable\\|nogd\\|nogdefault\\|noguipty\\|nohid\\|nohidden\\|nohk\\|nohkmap\\|nohkmapp\\|nohkp\\|nohls\\|noic\\|noicon\\|noignorecase\\|noim\\|noimc\\|noimcmdline\\|noimd\\|noincsearch\\|noinf\\|noinfercase\\|noinsertmode\\|nois\\|nojoinspaces\\|nojs\\|nolazyredraw\\|nolbr\\|nolinebreak\\|nolisp\\|nolist\\|noloadplugins\\|nolpl\\|nolz\\|noma\\|nomacatsui\\|nomagic\\|nomh\\|noml\\|nomod\\|nomodeline\\|nomodifiable\\|nomodified\\|nomore\\|nomousef\\|nomousefocus\\|nomousehide\\|nonu\\|nonumber\\|noodev\\|noopendevice\\|nopaste\\|nopi\\|nopreserveindent\\|nopreviewwindow\\|noprompt\\|nopvw\\|noreadonly\\|noremap\\|norestorescreen\\|norevins\\|nori\\|norightleft\\|norightleftcmd\\|norl\\|norlc\\|noro\\|nors\\|noru\\|noruler\\|nosb\\|nosc\\|noscb\\|noscrollbind\\|noscs\\|nosecure\\|nosft\\|noshellslash\\|noshelltemp\\|noshiftround\\|noshortname\\|noshowcmd\\|noshowfulltag\\|noshowmatch\\|noshowmode\\|nosi\\|nosm\\|nosmartcase\\|nosmartindent\\|nosmarttab\\|nosmd\\|nosn\\|nosol\\|nospell\\|nosplitbelow\\|nosplitright\\|nospr\\|nosr\\|nossl\\|nosta\\|nostartofline\\|nostmp\\|noswapfile\\|noswf\\|nota\\|notagbsearch\\|notagrelative\\|notagstack\\|notbi\\|notbidi\\|notbs\\|notermbidi\\|noterse\\|notextauto\\|notextmode\\|notf\\|notgst\\|notildeop\\|notimeout\\|notitle\\|noto\\|notop\\|notr\\|nottimeout\\|nottybuiltin\\|nottyfast\\|notx\\|novb\\|novisualbell\\|nowa\\|nowarn\\|nowb\\|noweirdinvert\\|nowfh\\|nowfw\\|nowildmenu\\|nowinfixheight\\|nowinfixwidth\\|nowiv\\|nowmnu\\|nowrap\\|nowrapscan\\|nowrite\\|nowriteany\\|nowritebackup\\|nows\\|invacd\\|invai\\|invakm\\|invallowrevins\\|invaltkeymap\\|invanti\\|invantialias\\|invar\\|invarab\\|invarabic\\|invarabicshape\\|invari\\|invarshape\\|invautochdir\\|invautoindent\\|invautoread\\|invautowrite\\|invautowriteall\\|invaw\\|invawa\\|invbackup\\|invballooneval\\|invbeval\\|invbin\\|invbinary\\|invbiosk\\|invbioskey\\|invbk\\|invbl\\|invbomb\\|invbuflisted\\|invcf\\|invci\\|invcin\\|invcindent\\|invcompatible\\|invconfirm\\|invconsk\\|invconskey\\|invcopyindent\\|invcp\\|invcscopetag\\|invcscopeverbose\\|invcst\\|invcsverb\\|invcuc\\|invcul\\|invcursorcolumn\\|invcursorline\\|invdeco\\|invdelcombine\\|invdg\\|invdiff\\|invdigraph\\|invdisable\\|invea\\|inveb\\|inved\\|invedcompatible\\|invek\\|invendofline\\|inveol\\|invequalalways\\|inverrorbells\\|invesckeys\\|invet\\|invex\\|invexpandtab\\|invexrc\\|invfen\\|invfk\\|invfkmap\\|invfoldenable\\|invgd\\|invgdefault\\|invguipty\\|invhid\\|invhidden\\|invhk\\|invhkmap\\|invhkmapp\\|invhkp\\|invhls\\|invhlsearch\\|invic\\|invicon\\|invignorecase\\|invim\\|invimc\\|invimcmdline\\|invimd\\|invincsearch\\|invinf\\|invinfercase\\|invinsertmode\\|invis\\|invjoinspaces\\|invjs\\|invlazyredraw\\|invlbr\\|invlinebreak\\|invlisp\\|invlist\\|invloadplugins\\|invlpl\\|invlz\\|invma\\|invmacatsui\\|invmagic\\|invmh\\|invml\\|invmod\\|invmodeline\\|invmodifiable\\|invmodified\\|invmore\\|invmousef\\|invmousefocus\\|invmousehide\\|invnu\\|invnumber\\|invodev\\|invopendevice\\|invpaste\\|invpi\\|invpreserveindent\\|invpreviewwindow\\|invprompt\\|invpvw\\|invreadonly\\|invremap\\|invrestorescreen\\|invrevins\\|invri\\|invrightleft\\|invrightleftcmd\\|invrl\\|invrlc\\|invro\\|invrs\\|invru\\|invruler\\|invsb\\|invsc\\|invscb\\|invscrollbind\\|invscs\\|invsecure\\|invsft\\|invshellslash\\|invshelltemp\\|invshiftround\\|invshortname\\|invshowcmd\\|invshowfulltag\\|invshowmatch\\|invshowmode\\|invsi\\|invsm\\|invsmartcase\\|invsmartindent\\|invsmarttab\\|invsmd\\|invsn\\|invsol\\|invspell\\|invsplitbelow\\|invsplitright\\|invspr\\|invsr\\|invssl\\|invsta\\|invstartofline\\|invstmp\\|invswapfile\\|invswf\\|invta\\|invtagbsearch\\|invtagrelative\\|invtagstack\\|invtbi\\|invtbidi\\|invtbs\\|invtermbidi\\|invterse\\|invtextauto\\|invtextmode\\|invtf\\|invtgst\\|invtildeop\\|invtimeout\\|invtitle\\|invto\\|invtop\\|invtr\\|invttimeout\\|invttybuiltin\\|invttyfast\\|invtx\\|invvb\\|invvisualbell\\|invwa\\|invwarn\\|invwb\\|invweirdinvert\\|invwfh\\|invwfw\\|invwildmenu\\|invwinfixheight\\|invwinfixwidth\\|invwiv\\|invwmnu\\|invwrap\\|invwrapscan\\|invwrite\\|invwriteany\\|invwritebackup\\|invws\\|t_AB\\|t_AF\\|t_al\\|t_AL\\|t_bc\\|t_cd\\|t_ce\\|t_Ce\\|t_cl\\|t_cm\\|t_Co\\|t_cs\\|t_Cs\\|t_CS\\|t_CV\\|t_da\\|t_db\\|t_dl\\|t_DL\\|t_EI\\|t_F1\\|t_F2\\|t_F3\\|t_F4\\|t_F5\\|t_F6\\|t_F7\\|t_F8\\|t_F9\\|t_fs\\|t_IE\\|t_IS\\|t_k1\\|t_K1\\|t_k2\\|t_k3\\|t_K3\\|t_k4\\|t_K4\\|t_k5\\|t_K5\\|t_k6\\|t_K6\\|t_k7\\|t_K7\\|t_k8\\|t_K8\\|t_k9\\|t_K9\\|t_KA\\|t_kb\\|t_kB\\|t_KB\\|t_KC\\|t_kd\\|t_kD\\|t_KD\\|t_ke\\|t_KE\\|t_KF\\|t_KG\\|t_kh\\|t_KH\\|t_kI\\|t_KI\\|t_KJ\\|t_KK\\|t_kl\\|t_KL\\|t_kN\\|t_kP\\|t_kr\\|t_ks\\|t_ku\\|t_le\\|t_mb\\|t_md\\|t_me\\|t_mr\\|t_ms\\|t_nd\\|t_op\\|t_RI\\|t_RV\\|t_Sb\\|t_se\\|t_Sf\\|t_SI\\|t_so\\|t_sr\\|t_te\\|t_ti\\|t_ts\\|t_ue\\|t_us\\|t_ut\\|t_vb\\|t_ve\\|t_vi\\|t_vs\\|t_WP\\|t_WS\\|t_xs\\|t_ZH\\|t_ZR\\)\\\\b/,
                                      "comment": /"\\.\\*/,
                                      "function": /\\\\w\\+\\(\\?=\\\\\\(\\)/,
                                      "keyword": /\\\\b\\(\\?:ab\\|abbreviate\\|abc\\|abclear\\|abo\\|aboveleft\\|al\\|all\\|arga\\|argadd\\|argd\\|argdelete\\|argdo\\|arge\\|argedit\\|argg\\|argglobal\\|argl\\|arglocal\\|ar\\|args\\|argu\\|argument\\|as\\|ascii\\|bad\\|badd\\|ba\\|ball\\|bd\\|bdelete\\|be\\|bel\\|belowright\\|bf\\|bfirst\\|bl\\|blast\\|bm\\|bmodified\\|bn\\|bnext\\|bN\\|bNext\\|bo\\|botright\\|bp\\|bprevious\\|brea\\|break\\|breaka\\|breakadd\\|breakd\\|breakdel\\|breakl\\|breaklist\\|br\\|brewind\\|bro\\|browse\\|bufdo\\|b\\|buffer\\|buffers\\|bun\\|bunload\\|bw\\|bwipeout\\|ca\\|cabbrev\\|cabc\\|cabclear\\|caddb\\|caddbuffer\\|cad\\|caddexpr\\|caddf\\|caddfile\\|cal\\|call\\|cat\\|catch\\|cb\\|cbuffer\\|cc\\|ccl\\|cclose\\|cd\\|ce\\|center\\|cex\\|cexpr\\|cf\\|cfile\\|cfir\\|cfirst\\|cgetb\\|cgetbuffer\\|cgete\\|cgetexpr\\|cg\\|cgetfile\\|c\\|change\\|changes\\|chd\\|chdir\\|che\\|checkpath\\|checkt\\|checktime\\|cla\\|clast\\|cl\\|clist\\|clo\\|close\\|cmapc\\|cmapclear\\|cnew\\|cnewer\\|cn\\|cnext\\|cN\\|cNext\\|cnf\\|cnfile\\|cNfcNfile\\|cnorea\\|cnoreabbrev\\|col\\|colder\\|colo\\|colorscheme\\|comc\\|comclear\\|comp\\|compiler\\|conf\\|confirm\\|con\\|continue\\|cope\\|copen\\|co\\|copy\\|cpf\\|cpfile\\|cp\\|cprevious\\|cq\\|cquit\\|cr\\|crewind\\|cuna\\|cunabbrev\\|cu\\|cunmap\\|cw\\|cwindow\\|debugg\\|debuggreedy\\|delc\\|delcommand\\|d\\|delete\\|delf\\|delfunction\\|delm\\|delmarks\\|diffg\\|diffget\\|diffoff\\|diffpatch\\|diffpu\\|diffput\\|diffsplit\\|diffthis\\|diffu\\|diffupdate\\|dig\\|digraphs\\|di\\|display\\|dj\\|djump\\|dl\\|dlist\\|dr\\|drop\\|ds\\|dsearch\\|dsp\\|dsplit\\|earlier\\|echoe\\|echoerr\\|echom\\|echomsg\\|echon\\|e\\|edit\\|el\\|else\\|elsei\\|elseif\\|em\\|emenu\\|endfo\\|endfor\\|endf\\|endfunction\\|endfun\\|en\\|endif\\|endt\\|endtry\\|endw\\|endwhile\\|ene\\|enew\\|ex\\|exi\\|exit\\|exu\\|exusage\\|f\\|file\\|files\\|filetype\\|fina\\|finally\\|fin\\|find\\|fini\\|finish\\|fir\\|first\\|fix\\|fixdel\\|fo\\|fold\\|foldc\\|foldclose\\|folddoc\\|folddoclosed\\|foldd\\|folddoopen\\|foldo\\|foldopen\\|for\\|fu\\|fun\\|function\\|go\\|goto\\|gr\\|grep\\|grepa\\|grepadd\\|ha\\|hardcopy\\|h\\|help\\|helpf\\|helpfind\\|helpg\\|helpgrep\\|helpt\\|helptags\\|hid\\|hide\\|his\\|history\\|ia\\|iabbrev\\|iabc\\|iabclear\\|if\\|ij\\|ijump\\|il\\|ilist\\|imapc\\|imapclear\\|in\\|inorea\\|inoreabbrev\\|isearch\\|isp\\|isplit\\|iuna\\|iunabbrev\\|iu\\|iunmap\\|j\\|join\\|ju\\|jumps\\|k\\|keepalt\\|keepj\\|keepjumps\\|kee\\|keepmarks\\|laddb\\|laddbuffer\\|lad\\|laddexpr\\|laddf\\|laddfile\\|lan\\|language\\|la\\|last\\|later\\|lb\\|lbuffer\\|lc\\|lcd\\|lch\\|lchdir\\|lcl\\|lclose\\|let\\|left\\|lefta\\|leftabove\\|lex\\|lexpr\\|lf\\|lfile\\|lfir\\|lfirst\\|lgetb\\|lgetbuffer\\|lgete\\|lgetexpr\\|lg\\|lgetfile\\|lgr\\|lgrep\\|lgrepa\\|lgrepadd\\|lh\\|lhelpgrep\\|l\\|list\\|ll\\|lla\\|llast\\|lli\\|llist\\|lmak\\|lmake\\|lm\\|lmap\\|lmapc\\|lmapclear\\|lnew\\|lnewer\\|lne\\|lnext\\|lN\\|lNext\\|lnf\\|lnfile\\|lNf\\|lNfile\\|ln\\|lnoremap\\|lo\\|loadview\\|loc\\|lockmarks\\|lockv\\|lockvar\\|lol\\|lolder\\|lop\\|lopen\\|lpf\\|lpfile\\|lp\\|lprevious\\|lr\\|lrewind\\|ls\\|lt\\|ltag\\|lu\\|lunmap\\|lv\\|lvimgrep\\|lvimgrepa\\|lvimgrepadd\\|lw\\|lwindow\\|mak\\|make\\|ma\\|mark\\|marks\\|mat\\|match\\|menut\\|menutranslate\\|mk\\|mkexrc\\|mks\\|mksession\\|mksp\\|mkspell\\|mkvie\\|mkview\\|mkv\\|mkvimrc\\|mod\\|mode\\|m\\|move\\|mzf\\|mzfile\\|mz\\|mzscheme\\|nbkey\\|new\\|n\\|next\\|N\\|Next\\|nmapc\\|nmapclear\\|noh\\|nohlsearch\\|norea\\|noreabbrev\\|nu\\|number\\|nun\\|nunmap\\|omapc\\|omapclear\\|on\\|only\\|o\\|open\\|opt\\|options\\|ou\\|ounmap\\|pc\\|pclose\\|ped\\|pedit\\|pe\\|perl\\|perld\\|perldo\\|po\\|pop\\|popu\\|popup\\|pp\\|ppop\\|pre\\|preserve\\|prev\\|previous\\|p\\|print\\|P\\|Print\\|profd\\|profdel\\|prof\\|profile\\|promptf\\|promptfind\\|promptr\\|promptrepl\\|ps\\|psearch\\|pta\\|ptag\\|ptf\\|ptfirst\\|ptj\\|ptjump\\|ptl\\|ptlast\\|ptn\\|ptnext\\|ptN\\|ptNext\\|ptp\\|ptprevious\\|ptr\\|ptrewind\\|pts\\|ptselect\\|pu\\|put\\|pw\\|pwd\\|pyf\\|pyfile\\|py\\|python\\|qa\\|qall\\|q\\|quit\\|quita\\|quitall\\|r\\|read\\|rec\\|recover\\|redi\\|redir\\|red\\|redo\\|redr\\|redraw\\|redraws\\|redrawstatus\\|reg\\|registers\\|res\\|resize\\|ret\\|retab\\|retu\\|return\\|rew\\|rewind\\|ri\\|right\\|rightb\\|rightbelow\\|rub\\|ruby\\|rubyd\\|rubydo\\|rubyf\\|rubyfile\\|ru\\|runtime\\|rv\\|rviminfo\\|sal\\|sall\\|san\\|sandbox\\|sa\\|sargument\\|sav\\|saveas\\|sba\\|sball\\|sbf\\|sbfirst\\|sbl\\|sblast\\|sbm\\|sbmodified\\|sbn\\|sbnext\\|sbN\\|sbNext\\|sbp\\|sbprevious\\|sbr\\|sbrewind\\|sb\\|sbuffer\\|scripte\\|scriptencoding\\|scrip\\|scriptnames\\|se\\|set\\|setf\\|setfiletype\\|setg\\|setglobal\\|setl\\|setlocal\\|sf\\|sfind\\|sfir\\|sfirst\\|sh\\|shell\\|sign\\|sil\\|silent\\|sim\\|simalt\\|sla\\|slast\\|sl\\|sleep\\|sm\\|smagic\\|sm\\|smap\\|smapc\\|smapclear\\|sme\\|smenu\\|sn\\|snext\\|sN\\|sNext\\|sni\\|sniff\\|sno\\|snomagic\\|snor\\|snoremap\\|snoreme\\|snoremenu\\|sor\\|sort\\|so\\|source\\|spelld\\|spelldump\\|spe\\|spellgood\\|spelli\\|spellinfo\\|spellr\\|spellrepall\\|spellu\\|spellundo\\|spellw\\|spellwrong\\|sp\\|split\\|spr\\|sprevious\\|sre\\|srewind\\|sta\\|stag\\|startg\\|startgreplace\\|star\\|startinsert\\|startr\\|startreplace\\|stj\\|stjump\\|st\\|stop\\|stopi\\|stopinsert\\|sts\\|stselect\\|sun\\|sunhide\\|sunm\\|sunmap\\|sus\\|suspend\\|sv\\|sview\\|syncbind\\|t\\|tab\\|tabc\\|tabclose\\|tabd\\|tabdo\\|tabe\\|tabedit\\|tabf\\|tabfind\\|tabfir\\|tabfirst\\|tabl\\|tablast\\|tabm\\|tabmove\\|tabnew\\|tabn\\|tabnext\\|tabN\\|tabNext\\|tabo\\|tabonly\\|tabp\\|tabprevious\\|tabr\\|tabrewind\\|tabs\\|ta\\|tag\\|tags\\|tc\\|tcl\\|tcld\\|tcldo\\|tclf\\|tclfile\\|te\\|tearoff\\|tf\\|tfirst\\|th\\|throw\\|tj\\|tjump\\|tl\\|tlast\\|tm\\|tm\\|tmenu\\|tn\\|tnext\\|tN\\|tNext\\|to\\|topleft\\|tp\\|tprevious\\|tr\\|trewind\\|try\\|ts\\|tselect\\|tu\\|tu\\|tunmenu\\|una\\|unabbreviate\\|u\\|undo\\|undoj\\|undojoin\\|undol\\|undolist\\|unh\\|unhide\\|unlet\\|unlo\\|unlockvar\\|unm\\|unmap\\|up\\|update\\|verb\\|verbose\\|ve\\|version\\|vert\\|vertical\\|vie\\|view\\|vim\\|vimgrep\\|vimgrepa\\|vimgrepadd\\|vi\\|visual\\|viu\\|viusage\\|vmapc\\|vmapclear\\|vne\\|vnew\\|vs\\|vsplit\\|vu\\|vunmap\\|wa\\|wall\\|wh\\|while\\|winc\\|wincmd\\|windo\\|winp\\|winpos\\|win\\|winsize\\|wn\\|wnext\\|wN\\|wNext\\|wp\\|wprevious\\|wq\\|wqa\\|wqall\\|w\\|write\\|ws\\|wsverb\\|wv\\|wviminfo\\|X\\|xa\\|xall\\|x\\|xit\\|xm\\|xmap\\|xmapc\\|xmapclear\\|xme\\|xmenu\\|XMLent\\|XMLns\\|xn\\|xnoremap\\|xnoreme\\|xnoremenu\\|xu\\|xunmap\\|y\\|yank\\)\\\\b/,
                                      "number": /\\\\b\\(\\?:0x\\[\\\\da-f\\]\\+\\|\\\\d\\+\\(\\?:\\\\\\.\\\\d\\+\\)\\?\\)\\\\b/i,
                                      "operator": /\\\\\\|\\\\\\|\\|&&\\|\\[-\\+\\.\\]=\\?\\|\\[=!\\]\\(\\?:\\[=~\\]\\[#\\?\\]\\?\\)\\?\\|\\[<>\\]=\\?\\[#\\?\\]\\?\\|\\[\\*\\\\/%\\?\\]\\|\\\\b\\(\\?:is\\(\\?:not\\)\\?\\)\\\\b/,
                                      "punctuation": /\\[\\{\\}\\[\\\\\\]\\(\\),;:\\]/,
                                      "string": /"\\(\\?:\\[\\^"\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*"\\|'\\(\\?:\\[\\^'\\\\r\\\\n\\]\\|''\\)\\*'/,
                                    },
                                    "xml": Object {
                                      "cdata": /<!\\\\\\[CDATA\\\\\\[\\[\\\\s\\\\S\\]\\*\\?\\]\\]>/i,
                                      "comment": /<!--\\[\\\\s\\\\S\\]\\*\\?-->/,
                                      "doctype": /<!DOCTYPE\\[\\\\s\\\\S\\]\\+\\?>/i,
                                      "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                      "prolog": /<\\\\\\?\\[\\\\s\\\\S\\]\\+\\?\\\\\\?>/,
                                      "script": Object {
                                        "alias": "language-javascript",
                                        "greedy": true,
                                        "inside": Object {
                                          "boolean": /\\\\b\\(\\?:true\\|false\\)\\\\b/,
                                          "class-name": Object {
                                            "inside": Object {
                                              "punctuation": /\\[\\.\\\\\\\\\\]/,
                                            },
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\\\b\\(\\?:class\\|interface\\|extends\\|implements\\|trait\\|instanceof\\|new\\)\\\\s\\+\\)\\|\\(\\?:catch\\\\s\\+\\\\\\(\\)\\)\\[\\\\w\\.\\\\\\\\\\]\\+/i,
                                          },
                                          "comment": Array [
                                            Object {
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\(\\?:\\\\\\*\\\\/\\|\\$\\)/,
                                            },
                                            Object {
                                              "greedy": true,
                                              "lookbehind": true,
                                              "pattern": /\\(\\^\\|\\[\\^\\\\\\\\:\\]\\)\\\\/\\\\/\\.\\*/,
                                            },
                                          ],
                                          "constant": /\\\\b\\[A-Z\\]\\[A-Z\\\\d_\\]\\*\\\\b/,
                                          "function": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*\\\\\\(\\)/i,
                                          "function-variable": Object {
                                            "alias": "function",
                                            "pattern": /\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*=\\\\s\\*\\(\\?:function\\\\b\\|\\(\\?:\\\\\\(\\[\\^\\(\\)\\]\\*\\\\\\)\\|\\[_\\$a-z\\\\xA0-\\\\uFFFF\\]\\[\\$\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\)\\\\s\\*=>\\)\\)/i,
                                          },
                                          "keyword": /\\\\b\\(\\?:as\\|async\\|await\\|break\\|case\\|catch\\|class\\|const\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|enum\\|export\\|extends\\|finally\\|for\\|from\\|function\\|get\\|if\\|implements\\|import\\|in\\|instanceof\\|interface\\|let\\|new\\|null\\|of\\|package\\|private\\|protected\\|public\\|return\\|set\\|static\\|super\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\|yield\\)\\\\b/,
                                          "number": /\\\\b\\(\\?:0\\[xX\\]\\[\\\\dA-Fa-f\\]\\+\\|0\\[bB\\]\\[01\\]\\+\\|0\\[oO\\]\\[0-7\\]\\+\\|NaN\\|Infinity\\)\\\\b\\|\\(\\?:\\\\b\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\B\\\\\\.\\\\d\\+\\)\\(\\?:\\[Ee\\]\\[\\+-\\]\\?\\\\d\\+\\)\\?/,
                                          "operator": /-\\[-=\\]\\?\\|\\\\\\+\\[\\+=\\]\\?\\|!=\\?=\\?\\|<<\\?=\\?\\|>>\\?>\\?=\\?\\|=\\(\\?:==\\?\\|>\\)\\?\\|&\\[&=\\]\\?\\|\\\\\\|\\[\\|=\\]\\?\\|\\\\\\*\\\\\\*\\?=\\?\\|\\\\/=\\?\\|~\\|\\\\\\^=\\?\\|%=\\?\\|\\\\\\?\\|\\\\\\.\\{3\\}/,
                                          "punctuation": /\\[\\{\\}\\[\\\\\\];\\(\\),\\.:\\]/,
                                          "regex": Object {
                                            "greedy": true,
                                            "lookbehind": true,
                                            "pattern": /\\(\\(\\?:\\^\\|\\[\\^\\$\\\\w\\\\xA0-\\\\uFFFF\\."'\\\\\\]\\)\\\\s\\]\\)\\\\s\\*\\)\\\\/\\(\\\\\\[\\[\\^\\\\\\]\\\\r\\\\n\\]\\+\\]\\|\\\\\\\\\\.\\|\\[\\^\\\\/\\\\\\\\\\\\\\[\\\\r\\\\n\\]\\)\\+\\\\/\\[gimyu\\]\\{0,5\\}\\(\\?=\\\\s\\*\\(\\$\\|\\[\\\\r\\\\n,\\.;\\}\\)\\\\\\]\\]\\)\\)/,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "template-string": Object {
                                            "greedy": true,
                                            "inside": Object {
                                              "interpolation": Object {
                                                "inside": Object {
                                                  "interpolation-punctuation": Object {
                                                    "alias": "punctuation",
                                                    "pattern": /\\^\\\\\\$\\{\\|\\}\\$/,
                                                  },
                                                  "rest": [Circular],
                                                },
                                                "pattern": /\\\\\\$\\{\\[\\^\\}\\]\\+\\}/,
                                              },
                                              "string": /\\[\\\\s\\\\S\\]\\+/,
                                            },
                                            "pattern": /\`\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\\\\\$\\{\\[\\^\\}\\]\\+\\}\\|\\[\\^\\\\\\\\\`\\]\\)\\*\`/,
                                          },
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<script\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/script>\\)/i,
                                      },
                                      "style": Object {
                                        "alias": "language-css",
                                        "greedy": true,
                                        "inside": Object {
                                          "atrule": Object {
                                            "inside": Object {
                                              "rest": [Circular],
                                              "rule": /@\\[\\\\w-\\]\\+/,
                                            },
                                            "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                          },
                                          "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                          "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                          "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                          "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                          "important": /\\\\B!important\\\\b/i,
                                          "number": /\\[\\\\d%\\.\\]\\+/,
                                          "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                          "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                          "selector": Object {
                                            "inside": Object {
                                              "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                              "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                              "id": /#\\[-:\\.\\\\w\\]\\+/,
                                              "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                              "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                            },
                                            "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                          },
                                          "string": Object {
                                            "greedy": true,
                                            "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                          },
                                          "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                        },
                                        "lookbehind": true,
                                        "pattern": /\\(<style\\[\\\\s\\\\S\\]\\*\\?>\\)\\[\\\\s\\\\S\\]\\*\\?\\(\\?=<\\\\/style>\\)/i,
                                      },
                                      "tag": Object {
                                        "greedy": true,
                                        "inside": Object {
                                          "attr-name": Object {
                                            "inside": Object {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                            },
                                            "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                          },
                                          "attr-value": Object {
                                            "inside": Object {
                                              "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                              "punctuation": Array [
                                                /\\^=/,
                                                Object {
                                                  "lookbehind": true,
                                                  "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                },
                                              ],
                                            },
                                            "pattern": /=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)/i,
                                          },
                                          "punctuation": /\\\\/\\?>/,
                                          "style-attr": Object {
                                            "alias": "language-css",
                                            "inside": Object {
                                              "attr-name": Object {
                                                "inside": Object {
                                                  "attr-name": Object {
                                                    "inside": Object {
                                                      "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                    },
                                                    "pattern": /\\[\\^\\\\s>\\\\/\\]\\+/,
                                                  },
                                                  "attr-value": Object {
                                                    "inside": Object {
                                                      "entity": /&#\\?\\[\\\\da-z\\]\\{1,8\\};/i,
                                                      "punctuation": Array [
                                                        /\\^=/,
                                                        Object {
                                                          "lookbehind": true,
                                                          "pattern": /\\(\\^\\|\\[\\^\\\\\\\\\\]\\)\\["'\\]/,
                                                        },
                                                      ],
                                                    },
                                                    "pattern": /=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)/i,
                                                  },
                                                  "punctuation": /\\\\/\\?>/,
                                                  "tag": Object {
                                                    "inside": Object {
                                                      "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                                      "punctuation": /\\^<\\\\/\\?/,
                                                    },
                                                    "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/i,
                                                  },
                                                },
                                                "pattern": /\\^\\\\s\\*style/i,
                                              },
                                              "attr-value": Object {
                                                "inside": Object {
                                                  "atrule": Object {
                                                    "inside": Object {
                                                      "rest": [Circular],
                                                      "rule": /@\\[\\\\w-\\]\\+/,
                                                    },
                                                    "pattern": /@\\[\\\\w-\\]\\+\\?\\.\\*\\?\\(\\?:;\\|\\(\\?=\\\\s\\*\\\\\\{\\)\\)/i,
                                                  },
                                                  "comment": /\\\\/\\\\\\*\\[\\\\s\\\\S\\]\\*\\?\\\\\\*\\\\//,
                                                  "entity": /\\\\\\\\\\[\\\\da-f\\]\\{1,8\\}/i,
                                                  "function": /\\[-a-z0-9\\]\\+\\(\\?=\\\\\\(\\)/i,
                                                  "hexcode": /#\\[\\\\da-f\\]\\{3,8\\}/i,
                                                  "important": /\\\\B!important\\\\b/i,
                                                  "number": /\\[\\\\d%\\.\\]\\+/,
                                                  "property": /\\[-_a-z\\\\xA0-\\\\uFFFF\\]\\[-\\\\w\\\\xA0-\\\\uFFFF\\]\\*\\(\\?=\\\\s\\*:\\)/i,
                                                  "punctuation": /\\[\\(\\)\\{\\};:\\]/,
                                                  "selector": Object {
                                                    "inside": Object {
                                                      "attribute": /\\\\\\[\\[\\^\\\\\\]\\]\\+\\\\\\]/,
                                                      "class": /\\\\\\.\\[-:\\.\\\\w\\]\\+/,
                                                      "id": /#\\[-:\\.\\\\w\\]\\+/,
                                                      "pseudo-class": /:\\[-\\\\w\\]\\+\\(\\?:\\\\\\(\\.\\*\\\\\\)\\)\\?/,
                                                      "pseudo-element": /:\\(\\?:after\\|before\\|first-letter\\|first-line\\|selection\\)\\|::\\[-\\\\w\\]\\+/,
                                                    },
                                                    "pattern": /\\[\\^\\{\\}\\\\s\\]\\[\\^\\{\\}\\]\\*\\(\\?=\\\\s\\*\\\\\\{\\)/,
                                                  },
                                                  "string": Object {
                                                    "greedy": true,
                                                    "pattern": /\\("\\|'\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1/,
                                                  },
                                                  "url": /url\\\\\\(\\(\\?:\\(\\["'\\]\\)\\(\\?:\\\\\\\\\\(\\?:\\\\r\\\\n\\|\\[\\\\s\\\\S\\]\\)\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\)\\*\\\\1\\|\\.\\*\\?\\)\\\\\\)/i,
                                                },
                                                "pattern": /\\.\\+/i,
                                              },
                                              "punctuation": /\\^\\\\s\\*=\\\\s\\*\\['"\\]\\|\\['"\\]\\\\s\\*\\$/,
                                            },
                                            "pattern": /\\\\s\\*style=\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1/i,
                                          },
                                          "tag": Object {
                                            "inside": Object {
                                              "namespace": /\\^\\[\\^\\\\s>\\\\/:\\]\\+:/,
                                              "punctuation": /\\^<\\\\/\\?/,
                                            },
                                            "pattern": /\\^<\\\\/\\?\\[\\^\\\\s>\\\\/\\]\\+/i,
                                          },
                                        },
                                        "pattern": /<\\\\/\\?\\(\\?!\\\\d\\)\\[\\^\\\\s>\\\\/=\\$<%\\]\\+\\(\\?:\\\\s\\+\\[\\^\\\\s>\\\\/=\\]\\+\\(\\?:=\\(\\?:\\("\\|'\\)\\(\\?:\\\\\\\\\\[\\\\s\\\\S\\]\\|\\(\\?!\\\\1\\)\\[\\^\\\\\\\\\\]\\)\\*\\\\1\\|\\[\\^\\\\s'">=\\]\\+\\)\\)\\?\\)\\*\\\\s\\*\\\\/\\?>/i,
                                      },
                                    },
                                    "yaml": Object {
                                      "boolean": Object {
                                        "alias": "important",
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:!\\[\\^\\\\s\\]\\+\\)\\?\\[ \\\\t\\]\\*\\)\\(\\?:true\\|false\\)\\[ \\\\t\\]\\*\\(\\?=\\$\\|,\\|\\]\\|\\}\\)/im,
                                      },
                                      "comment": /#\\.\\*/,
                                      "datetime": Object {
                                        "alias": "number",
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:!\\[\\^\\\\s\\]\\+\\)\\?\\[ \\\\t\\]\\*\\)\\(\\?:\\\\d\\{4\\}-\\\\d\\\\d\\?-\\\\d\\\\d\\?\\(\\?:\\[tT\\]\\|\\[ \\\\t\\]\\+\\)\\\\d\\\\d\\?:\\\\d\\{2\\}:\\\\d\\{2\\}\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\[ \\\\t\\]\\*\\(\\?:Z\\|\\[-\\+\\]\\\\d\\\\d\\?\\(\\?::\\\\d\\{2\\}\\)\\?\\)\\?\\|\\\\d\\{4\\}-\\\\d\\{2\\}-\\\\d\\{2\\}\\|\\\\d\\\\d\\?:\\\\d\\{2\\}\\(\\?::\\\\d\\{2\\}\\(\\?:\\\\\\.\\\\d\\*\\)\\?\\)\\?\\)\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\]\\|\\}\\)\\)/m,
                                      },
                                      "directive": Object {
                                        "alias": "important",
                                        "lookbehind": true,
                                        "pattern": /\\(\\^\\[ \\\\t\\]\\*\\)%\\.\\+/m,
                                      },
                                      "important": /\\[&\\*\\]\\[\\\\w\\]\\+/,
                                      "key": Object {
                                        "alias": "atrule",
                                        "lookbehind": true,
                                        "pattern": /\\(\\\\s\\*\\(\\?:\\^\\|\\[:\\\\-,\\[\\{\\\\r\\\\n\\?\\]\\)\\[ \\\\t\\]\\*\\(\\?:!\\[\\^\\\\s\\]\\+\\)\\?\\[ \\\\t\\]\\*\\)\\[\\^\\\\r\\\\n\\{\\[\\\\\\]\\},#\\\\s\\]\\+\\?\\(\\?=\\\\s\\*:\\\\s\\)/,
                                      },
                                      "null": Object {
                                        "alias": "important",
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:!\\[\\^\\\\s\\]\\+\\)\\?\\[ \\\\t\\]\\*\\)\\(\\?:null\\|~\\)\\[ \\\\t\\]\\*\\(\\?=\\$\\|,\\|\\]\\|\\}\\)/im,
                                      },
                                      "number": Object {
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:!\\[\\^\\\\s\\]\\+\\)\\?\\[ \\\\t\\]\\*\\)\\[\\+-\\]\\?\\(\\?:0x\\[\\\\da-f\\]\\+\\|0o\\[0-7\\]\\+\\|\\(\\?:\\\\d\\+\\\\\\.\\?\\\\d\\*\\|\\\\\\.\\?\\\\d\\+\\)\\(\\?:e\\[\\+-\\]\\?\\\\d\\+\\)\\?\\|\\\\\\.inf\\|\\\\\\.nan\\)\\[ \\\\t\\]\\*\\(\\?=\\$\\|,\\|\\]\\|\\}\\)/im,
                                      },
                                      "punctuation": /---\\|\\[:\\[\\\\\\]\\{\\}\\\\-,\\|>\\?\\]\\|\\\\\\.\\\\\\.\\\\\\./,
                                      "scalar": Object {
                                        "alias": "string",
                                        "lookbehind": true,
                                        "pattern": /\\(\\[\\\\-:\\]\\\\s\\*\\(\\?:!\\[\\^\\\\s\\]\\+\\)\\?\\[ \\\\t\\]\\*\\[\\|>\\]\\)\\[ \\\\t\\]\\*\\(\\?:\\(\\(\\?:\\\\r\\?\\\\n\\|\\\\r\\)\\[ \\\\t\\]\\+\\)\\[\\^\\\\r\\\\n\\]\\+\\(\\?:\\\\2\\[\\^\\\\r\\\\n\\]\\+\\)\\*\\)/,
                                      },
                                      "string": Object {
                                        "greedy": true,
                                        "lookbehind": true,
                                        "pattern": /\\(\\[:\\\\-,\\[\\{\\]\\\\s\\*\\(\\?:!\\[\\^\\\\s\\]\\+\\)\\?\\[ \\\\t\\]\\*\\)\\("\\|'\\)\\(\\?:\\(\\?!\\\\2\\)\\[\\^\\\\\\\\\\\\r\\\\n\\]\\|\\\\\\\\\\.\\)\\*\\\\2\\(\\?=\\[ \\\\t\\]\\*\\(\\?:\\$\\|,\\|\\]\\|\\}\\)\\)/m,
                                      },
                                      "tag": /!\\[\\^\\\\s\\]\\+/,
                                    },
                                  },
                                  "matchGrammar": [Function],
                                  "plugins": Object {},
                                  "tokenize": [Function],
                                  "util": Object {
                                    "clone": [Function],
                                    "encode": [Function],
                                    "objId": [Function],
                                    "type": [Function],
                                  },
                                }
                              }
                              code=""
                              language="jsx"
                              theme={
                                Object {
                                  "plain": Object {
                                    "backgroundColor": "#1D1F21",
                                    "color": "#C5C8C6",
                                  },
                                  "styles": Array [
                                    Object {
                                      "style": Object {
                                        "color": "hsl(30, 20%, 50%)",
                                      },
                                      "types": Array [
                                        "prolog",
                                        "comment",
                                        "doctype",
                                        "cdata",
                                      ],
                                    },
                                    Object {
                                      "style": Object {
                                        "color": "hsl(350, 40%, 70%)",
                                      },
                                      "types": Array [
                                        "property",
                                        "tag",
                                        "boolean",
                                        "number",
                                        "constant",
                                        "symbol",
                                      ],
                                    },
                                    Object {
                                      "style": Object {
                                        "color": "hsl(75, 70%, 60%)",
                                      },
                                      "types": Array [
                                        "attr-name",
                                        "string",
                                        "char",
                                        "builtin",
                                        "insterted",
                                      ],
                                    },
                                    Object {
                                      "style": Object {
                                        "color": "hsl(40, 90%, 60%)",
                                      },
                                      "types": Array [
                                        "operator",
                                        "entity",
                                        "url",
                                        "string",
                                        "variable",
                                        "language-css",
                                      ],
                                    },
                                    Object {
                                      "style": Object {
                                        "color": "rgb(255, 85, 85)",
                                      },
                                      "types": Array [
                                        "deleted",
                                      ],
                                    },
                                    Object {
                                      "style": Object {
                                        "fontStyle": "italic",
                                      },
                                      "types": Array [
                                        "italic",
                                      ],
                                    },
                                    Object {
                                      "style": Object {
                                        "fontWeight": "bold",
                                      },
                                      "types": Array [
                                        "important",
                                        "bold",
                                      ],
                                    },
                                    Object {
                                      "style": Object {
                                        "color": "#e90",
                                      },
                                      "types": Array [
                                        "regex",
                                        "important",
                                      ],
                                    },
                                    Object {
                                      "style": Object {
                                        "color": "hsl(350, 40%, 70%)",
                                      },
                                      "types": Array [
                                        "atrule",
                                        "attr-value",
                                        "keyword",
                                      ],
                                    },
                                    Object {
                                      "style": Object {
                                        "opacity": "0.7",
                                      },
                                      "types": Array [
                                        "punctuation",
                                        "symbol",
                                      ],
                                    },
                                  ],
                                }
                              }
                            >
                              <div
                                className="token-line"
                                key="0"
                                style={
                                  Object {
                                    "backgroundColor": null,
                                    "color": "#C5C8C6",
                                  }
                                }
                              >
                                <span
                                  className="token plain"
                                  key="0"
                                  style={
                                    Object {
                                      "display": "inline-block",
                                    }
                                  }
                                />
                              </div>
                            </Highlight>
                          </pre>
                          <style
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
",
                              }
                            }
                            type="text/css"
                          />
                        </div>
                      </Editor>
                    </CodeEditor>
                  </LiveEditor>
                </StyledComponent>
              </Styled(LiveEditor)>
              <Styled(LivePreview)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bxivhb",
                        "isStatic": true,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  position: relative;
  padding: 0.5rem;
  background: white;
  color: black;
  height: auto;
  overflow: hidden;

  ",
                          "
  flex-basis: 50%;
  width: 50%;
  max-width: 50%;

  ",
                          "
  @media (max-width: ",
                          "40.625",
                          "em) {
    ",
                          "
    flex-basis: auto;
    width: 100%;
    max-width: 100%;
    height: auto;
  ",
                          ";
  }
",
                          ";
",
                          ";
",
                        ],
                      },
                      "displayName": "Styled(LivePreview)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bxivhb",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <LivePreview
                    Component="div"
                    className="c3"
                  >
                    <div
                      className="c3"
                    />
                  </LivePreview>
                </StyledComponent>
              </Styled(LivePreview)>
            </div>
          </StyledComponent>
        </styled.div>
        <Styled(LiveError)>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": true,
                  "lastClassName": "c4",
                  "rules": Array [
                    "
  display: block;
  width: 100%;
  padding: ",
                    "0.4444444444444444rem",
                    ";
  background: ",
                    "#ff5555",
                    ";
  color: white;
  font-size: 0.8rem;
  font-family: ",
                    "\\"Avenir Next\\", -apple-system, BlinkMacSystemFont, \\"Segoe UI\\", Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
                    ";
  white-space: pre;
",
                  ],
                },
                "displayName": "Styled(LiveError)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <LiveError
              className="c4"
            >
              <pre
                className="c4"
              >
                SyntaxError: Unexpected token (1:1)
1 : ()
     ^
              </pre>
            </LiveError>
          </StyledComponent>
        </Styled(LiveError)>
      </LiveProvider>
    </StyledComponent>
  </Styled(LiveProvider)>
</LiveEdit>
`;

exports[`StyledError renders correctly 1`] = `
.c0 {
  display: block;
  width: 100%;
  padding: 0.4444444444444444rem;
  background: #ff5555;
  color: white;
  font-size: 0.8rem;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  white-space: pre;
}

<Styled(LiveError)>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-ifAKCX",
          "isStatic": true,
          "lastClassName": "c0",
          "rules": Array [
            "
  display: block;
  width: 100%;
  padding: ",
            "0.4444444444444444rem",
            ";
  background: ",
            "#ff5555",
            ";
  color: white;
  font-size: 0.8rem;
  font-family: ",
            "\\"Avenir Next\\", -apple-system, BlinkMacSystemFont, \\"Segoe UI\\", Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
            ";
  white-space: pre;
",
          ],
        },
        "displayName": "Styled(LiveError)",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-ifAKCX",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <LiveError
      className="c0"
    />
  </StyledComponent>
</Styled(LiveError)>
`;
