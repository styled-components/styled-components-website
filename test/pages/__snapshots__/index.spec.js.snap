// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Index renders correctly 1`] = `
.c60 {
  box-shadow: 0.05555555555555555rem 0.05555555555555555rem 1.1111111111111112rem rgba(20,20,20,0.27);
  overflow: hidden;
  margin: 1.9444444444444444rem 0;
  text-align: left;
}

.c61 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: stretch;
  -webkit-justify-content: stretch;
  -ms-flex-pack: stretch;
  justify-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c62 {
  background: #1d1f27;
  font-size: 0.8rem;
  font-family: "Operator Mono SSm A","Operator Mono SSm B",monospace;
  font-weight: 300;
  height: 22.22222222222222rem;
  overflow-y: scroll;
  overflow-x: hidden;
  cursor: text;
  white-space: pre-wrap;
  -webkit-flex-basis: 50%;
  -ms-flex-basis: 50%;
  flex-basis: 50%;
  width: 50%;
  max-width: 50%;
}

.c63 {
  position: relative;
  padding: 0.5rem;
  background: white;
  color: black;
  height: auto;
  overflow: hidden;
  -webkit-flex-basis: 50%;
  -ms-flex-basis: 50%;
  flex-basis: 50%;
  width: 50%;
  max-width: 50%;
}

.c34 {
  display: block;
  width: 100%;
  padding: 0.4444444444444444rem;
  background: #ff5555;
  color: white;
  font-size: 0.8rem;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  white-space: pre;
}

.c31 {
  display: inline-block;
  text-decoration: none;
  color: inherit;
  cursor: pointer;
  padding: 0.1111111111111111rem 0.4444444444444444rem;
  margin: -0.1111111111111111rem -0.4444444444444444rem;
}

.c58 {
  color: rgb(219,112,147);
  text-decoration: underline;
  font-weight: 600;
  cursor: pointer;
}

.c68 {
  color: white;
  text-decoration: underline;
  font-weight: 600;
  cursor: pointer;
}

.c44 {
  width: 56.888888888888886rem;
  max-width: 100%;
  margin: 0 auto;
  padding: 5rem 2.2222222222222223rem 1.6666666666666667rem 2.2222222222222223rem;
  box-sizing: border-box;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  -webkit-transition: -webkit-transform 150ms ease-out;
  -webkit-transition: transform 150ms ease-out;
  transition: transform 150ms ease-out;
}

.c47 {
  display: block;
  text-align: left;
  width: 100%;
  color: rgb(243,182,97);
  font-size: 2.3333333333333335rem;
  font-weight: bold;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
}

.c49 {
  font-size: 1.7777777777777777rem;
  font-weight: 500;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
}

.c54 {
  display: inline-block;
  font-family: "Operator Mono SSm A","Operator Mono SSm B",monospace;
  font-size: 90%;
  font-weight: 300;
  padding: 0 0.05em 0.1em;
  vertical-align: bottom;
  line-height: 1.4;
}

.c57 {
  background: #1d1f27;
  font-size: 0.8rem;
  font-family: "Operator Mono SSm A","Operator Mono SSm B",monospace;
  font-weight: 300;
  white-space: pre-wrap;
  border-radius: 0.16666666666666666rem;
  box-shadow: 1px 1px 20px rgba(20,20,20,0.27);
  margin: 1.9444444444444444rem 0;
  overflow-x: hidden;
}

.c50 {
  position: relative;
  display: block;
  visibility: hidden;
  height: 0;
  top: -3.888888888888889rem;
}

.c52 {
  display: none;
  position: absolute;
  left: 0;
  color: inherit;
}

.c53 {
  width: 1.1111111111111112rem;
  opacity: 0.7;
  margin-top: -0.2777777777777778rem;
}

.c53:hover {
  opacity: 0.9;
}

.c48 {
  position: relative;
  margin-left: -1.6666666666666667rem;
  padding-left: 1.6666666666666667rem;
}

.c48:hover .c51 {
  display: inline-block;
}

.c45 {
  text-align: center;
}

.c46 {
  margin: 0 0.5em 3em;
  height: 1.5em;
}

.c55 {
  border-radius: 3px;
  padding: 0.25em 1em;
  margin: 0 1em;
  background: transparent;
  color: palevioletred;
  border: 2px solid palevioletred;
}

.c56 {
  border-radius: 3px;
  padding: 0.25em 1em;
  margin: 0 1em;
  background: transparent;
  color: palevioletred;
  border: 2px solid palevioletred;
  background: palevioletred;
  color: white;
}

.c59 {
  border-radius: 3px;
  padding: 0.25em 1em;
  background: transparent;
  color: palevioletred;
  border: 2px solid palevioletred;
}

.c7 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 0.2777777777777778rem;
  height: 0.2777777777777778rem;
  margin: 0 0.8333333333333334rem;
  border-radius: 50%;
  background: currentColor;
  opacity: 0.35;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c6 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  display: inline-block;
  line-height: 2.7777777777777777rem;
  -webkit-transition: opacity 0.2s,-webkit-transform 0.2s;
  -webkit-transition: opacity 0.2s,transform 0.2s;
  transition: opacity 0.2s,transform 0.2s;
  cursor: pointer;
  -webkit-letter-spacing: 0.022222222222222223rem;
  -moz-letter-spacing: 0.022222222222222223rem;
  -ms-letter-spacing: 0.022222222222222223rem;
  letter-spacing: 0.022222222222222223rem;
  color: currentColor;
}

.c6:hover,
.c6:focus {
  opacity: 0.8;
}

.c6:active {
  -webkit-transform: scale(0.95);
  -ms-transform: scale(0.95);
  transform: scale(0.95);
  opacity: 0.6;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c10 {
  display: inline-block;
  margin-right: 1.1111111111111112rem;
  line-height: 2.7777777777777777rem;
  -webkit-transition: opacity 0.2s,-webkit-transform 0.2s;
  -webkit-transition: opacity 0.2s,transform 0.2s;
  transition: opacity 0.2s,transform 0.2s;
  cursor: pointer;
}

.c10:last-child {
  margin-right: 0;
}

.c10:hover,
.c10:focus {
  opacity: 0.8;
}

.c10:active {
  -webkit-transform: scale(0.95);
  -ms-transform: scale(0.95);
  transform: scale(0.95);
  opacity: 0.6;
}

.c10 svg path {
  fill: currentColor;
}

.c11 {
  width: 0.7777777777777778rem;
  height: 0.7777777777777778rem;
}

.c12 {
  width: 0.9444444444444444rem;
  height: 0.9444444444444444rem;
}

.c13 {
  width: 0.9444444444444444rem;
  height: 0.7777777777777778rem;
}

.c4 {
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;
  background-position: center;
  background-size: contain;
  background-image: url(/static/nav-logo.png);
  width: 9.11111111111111rem;
  height: 2.2222222222222223rem;
}

.c16 {
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;
  background-position: center;
  background-size: contain;
  background-image: url(/static/icon.png);
  width: 5.555555555555555rem;
  height: 1.6666666666666667rem;
}

.c19 svg {
  display: inline-block;
}

.c19 svg path {
  fill: currentColor;
}

.c17 {
  background: none;
  outline: none;
  border: none;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  min-width: 2.7777777777777777rem;
  height: 2.7777777777777777rem;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
}

.c17:focus {
  border: 0.1111111111111111rem solid currentColor;
  border-radius: 0.1111111111111111rem;
}

.c14 {
  display: none;
}

.c20 {
  position: absolute;
  top: 2.7777777777777777rem;
  left: 0;
  right: 0;
  height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: space-between;
  -webkit-justify-content: space-between;
  -ms-flex-pack: space-between;
  justify-content: space-between;
  padding: 0 1.1111111111111112rem;
  -webkit-transition: height 0.1s;
  transition: height 0.1s;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-overflow-scrolling: touch;
  overflow-x: scroll;
  overflow-y: hidden;
  background: #efefef;
  color: #868686;
}

.c15 {
  display: inline-block;
  vertical-align: center;
}

.c18 {
  -webkit-transition: -webkit-transform 0.1s;
  -webkit-transition: transform 0.1s;
  transition: transform 0.1s;
}

.c21 {
  padding-right: 1.1111111111111112rem;
}

.c0 {
  position: fixed;
  left: 0;
  box-sizing: border-box;
  z-index: 3;
  width: 100%;
  height: 2.7777777777777777rem;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.8333333333333334rem;
  font-weight: 500;
  background: transparent;
  -webkit-transition: background 300ms ease-out;
  transition: background 300ms ease-out;
  color: white;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: space-between;
  -webkit-justify-content: space-between;
  -ms-flex-pack: space-between;
  justify-content: space-between;
  padding: 0 1.1111111111111112rem;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c3 {
  display: inline-block;
  vertical-align: center;
  margin-right: 1.9444444444444444rem;
}

.c26 {
  font-weight: 600;
  font-size: 1.3rem;
}

.c27 {
  font-size: 1.1rem;
  font-weight: 400;
}

.c25 {
  margin: 2rem 0;
}

.c25 h1,
.c25 h2 {
  margin: 0;
}

.c24 {
  width: 6.944444444444445rem;
  height: 6.944444444444445rem;
}

.c36 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5rem;
  margin-bottom: 2rem;
}

.c35 {
  text-transform: uppercase;
  color: #fff;
  font-size: 0.8rem;
  font-weight: 600;
  margin: 2.5rem 0 0.5rem;
  opacity: 0.8;
}

.c37 {
  position: relative;
  height: 1.75rem;
  margin: 0.5rem;
  bottom: -0.2rem;
  opacity: 0.8;
  filter: brightness(0) invert(1);
  -webkit-transition: opacity 125ms ease-in-out;
  transition: opacity 125ms ease-in-out;
}

.c37:hover {
  opacity: 1;
}

.c38 {
  position: relative;
  height: 1.75rem;
  margin: 0.5rem;
  bottom: 0;
  opacity: 0.8;
  filter: brightness(0) invert(1);
  -webkit-transition: opacity 125ms ease-in-out;
  transition: opacity 125ms ease-in-out;
}

.c38:hover {
  opacity: 1;
}

.c39 {
  position: relative;
  height: 2rem;
  margin: 0.5rem;
  bottom: 0;
  opacity: 0.8;
  filter: brightness(0) invert(1);
  -webkit-transition: opacity 125ms ease-in-out;
  transition: opacity 125ms ease-in-out;
}

.c39:hover {
  opacity: 1;
}

.c40 {
  position: relative;
  height: 3rem;
  margin: 0.5rem;
  bottom: 0.625rem;
  opacity: 0.8;
  filter: brightness(0) invert(1);
  -webkit-transition: opacity 125ms ease-in-out;
  transition: opacity 125ms ease-in-out;
}

.c40:hover {
  opacity: 1;
}

.c41 {
  position: relative;
  height: 2.25rem;
  margin: 0.5rem;
  bottom: 0.16rem;
  opacity: 0.8;
  filter: brightness(0) invert(1);
  -webkit-transition: opacity 125ms ease-in-out;
  transition: opacity 125ms ease-in-out;
}

.c41:hover {
  opacity: 1;
}

.c42 {
  position: relative;
  height: 1.5rem;
  margin: 0.5rem;
  bottom: -0.15rem;
  opacity: 0.8;
  filter: brightness(0) invert(1);
  -webkit-transition: opacity 125ms ease-in-out;
  transition: opacity 125ms ease-in-out;
}

.c42:hover {
  opacity: 1;
}

.c43 {
  position: relative;
  height: 2rem;
  margin: 0.5rem;
  bottom: 0.25rem;
  opacity: 0.8;
  filter: brightness(0) invert(1);
  -webkit-transition: opacity 125ms ease-in-out;
  transition: opacity 125ms ease-in-out;
}

.c43:hover {
  opacity: 1;
}

.c22 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  color: white;
  background: linear-gradient(20deg,rgb(219,112,147),#daa357);
  box-shadow: 0 2px 20px rgba(0,0,0,0.17);
  box-sizing: border-box;
  min-height: 100vh;
}

.c23 {
  width: 56.888888888888886rem;
  max-width: 100%;
  margin: 0 auto;
  padding: 5rem 2.2222222222222223rem 1.6666666666666667rem 2.2222222222222223rem;
  box-sizing: border-box;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  -webkit-transition: -webkit-transform 150ms ease-out;
  -webkit-transition: transform 150ms ease-out;
  transition: transform 150ms ease-out;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  width: 75rem;
}

.c32 {
  display: inline-block;
  box-shadow: 0.05555555555555555rem 0.05555555555555555rem 1.1111111111111112rem rgba(20,20,20,0.27);
  margin: 1.9444444444444444rem 0;
  text-align: left;
  width: 100%;
  max-width: 34rem;
}

.c33 {
  background: #1d1f27;
  font-size: 0.8rem;
  font-family: "Operator Mono SSm A","Operator Mono SSm B",monospace;
  font-weight: 300;
  height: 22.22222222222222rem;
  overflow-y: scroll;
  overflow-x: hidden;
  cursor: text;
  white-space: pre-wrap;
  height: 24rem;
  white-space: pre;
  width: 100%;
}

.c28 {
  margin: 2rem 0;
}

.c66 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  color: white;
  background: rgb(219,112,147);
  box-shadow: 0 -2px 20px rgba(0,0,0,0.17);
  box-sizing: border-box;
  margin-top: 2.7777777777777777rem;
}

.c67 {
  display: inline-block;
  width: 0.9444444444444444rem;
}

.c29 {
  display: inline-block;
  border-radius: 3px;
  padding: 0.5rem 0;
  margin: 0.5rem 1rem;
  width: 11rem;
  background: transparent;
  color: white;
  border: 2px solid white;
  background: white;
  color: palevioletred;
}

.c30 {
  display: inline-block;
  border-radius: 3px;
  padding: 0.5rem 0;
  margin: 0.5rem 1rem;
  width: 11rem;
  background: transparent;
  color: white;
  border: 2px solid white;
}

.c64 {
  border-radius: 3px;
  padding: 0.25em 1em;
  margin: 0 1em;
  background: transparent;
  color: palevioletred;
  border: 2px solid palevioletred;
}

.c65 {
  border-radius: 3px;
  padding: 0.25em 1em;
  margin: 0 1em;
  background: transparent;
  color: palevioletred;
  border: 2px solid palevioletred;
  background: palevioletred;
  color: white;
}

@media (max-width:40.625em) {
  .c61 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (max-width:40.625em) {
  .c62 {
    -webkit-flex-basis: auto;
    -ms-flex-basis: auto;
    flex-basis: auto;
    width: 100%;
    max-width: 100%;
    height: auto;
  }
}

@media (max-width:40.625em) {
  .c63 {
    -webkit-flex-basis: auto;
    -ms-flex-basis: auto;
    flex-basis: auto;
    width: 100%;
    max-width: 100%;
    height: auto;
  }
}

@media (min-width:62.5em) {
  .c31 {
    border-radius: 0.16666666666666666rem;
  }

  .c31:hover {
    background: rgba(20,20,20,0.1);
  }
}

@media (max-width:62.5em) {
  .c44 {
    padding: 3.888888888888889rem 1.1111111111111112rem 1.6666666666666667rem 1.1111111111111112rem;
  }
}

@media (max-width:62.5em) {
  .c50 {
    top: -5rem;
  }
}

@media (max-width:62.5em) {
  .c48 {
    margin-left: 0;
  }

  .c48 .c51 {
    display: inline-block;
  }
}

@media (max-width:62.5em) {
  .c14 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: space-between;
    -webkit-justify-content: space-between;
    -ms-flex-pack: space-between;
    justify-content: space-between;
    height: 2.7777777777777777rem;
  }
}

@media (max-width:62.5em) {
  .c1 {
    display: none;
  }
}

@media (max-width:62.5em) {
  .c23 {
    padding: 3.888888888888889rem 1.1111111111111112rem 1.6666666666666667rem 1.1111111111111112rem;
  }
}

<Index>
  <I18n
    ns={
      Array [
        "home",
        "translations",
      ]
    }
  >
    <div>
      <SeoHead
        title="styled-components"
      >
        <SideEffect(Head)>
          <Head />
        </SideEffect(Head)>
      </SeoHead>
      <WithIsScrolled>
        <Nav
          isMobileNavFolded={true}
          onMobileNavToggle={[Function]}
          onRouteChange={[Function]}
          showSideNav={false}
          transparent={true}
        >
          <div>
            <Navbar
              isMobileNavFolded={true}
              onMobileNavToggle={[Function]}
              showSideNav={false}
              transparent={true}
            >
              <styled.nav
                transparent={true}
              >
                <nav
                  className="c0"
                >
                  <styled.div>
                    <div
                      className="c1"
                    >
                      <styled.div>
                        <div
                          className="c2"
                        >
                          <Styled(Link)>
                            <Link
                              className="c3"
                              href="/"
                              unstyled={true}
                            >
                              <Link
                                href="/"
                              >
                                <a
                                  className="c3"
                                  href="/"
                                  onClick={[Function]}
                                >
                                  <styled.div>
                                    <div
                                      className="c4"
                                    />
                                  </styled.div>
                                </a>
                              </Link>
                            </Link>
                          </Styled(Link)>
                          <NavLinks>
                            <styled.nav>
                              <nav
                                className="c5"
                              >
                                <Styled(Link)
                                  href="/"
                                >
                                  <Link
                                    className="c6"
                                    href="/"
                                    unstyled={true}
                                  >
                                    <Link
                                      href="/"
                                    >
                                      <a
                                        className="c6"
                                        href="/"
                                        onClick={[Function]}
                                      >
                                        Homepage
                                      </a>
                                    </Link>
                                  </Link>
                                </Styled(Link)>
                                <styled.span>
                                  <span
                                    className="c7"
                                  />
                                </styled.span>
                                <Styled(Link)
                                  href="/docs"
                                >
                                  <Link
                                    className="c6"
                                    href="/docs"
                                    unstyled={true}
                                  >
                                    <Link
                                      href="/docs"
                                    >
                                      <a
                                        className="c6"
                                        href="/docs"
                                        onClick={[Function]}
                                      >
                                        Documentation
                                      </a>
                                    </Link>
                                  </Link>
                                </Styled(Link)>
                                <styled.span>
                                  <span
                                    className="c7"
                                  />
                                </styled.span>
                                <Styled(Link)
                                  href="/ecosystem"
                                >
                                  <Link
                                    className="c6"
                                    href="/ecosystem"
                                    unstyled={true}
                                  >
                                    <Link
                                      href="/ecosystem"
                                    >
                                      <a
                                        className="c6"
                                        href="/ecosystem"
                                        onClick={[Function]}
                                      >
                                        Ecosystem
                                      </a>
                                    </Link>
                                  </Link>
                                </Styled(Link)>
                              </nav>
                            </styled.nav>
                          </NavLinks>
                        </div>
                      </styled.div>
                      <styled.div>
                        <div
                          className="c8"
                        >
                          <Social>
                            <styled.nav>
                              <nav
                                className="c9"
                              >
                                <Styled(Link)
                                  href="https://spectrum.chat/styled-components/"
                                >
                                  <Link
                                    className="c10"
                                    href="https://spectrum.chat/styled-components/"
                                    unstyled={true}
                                  >
                                    <Link
                                      href="https://spectrum.chat/styled-components/"
                                    >
                                      <a
                                        className="c10"
                                        href="https://spectrum.chat/styled-components/"
                                        onClick={[Function]}
                                      >
                                        <Spectrum>
                                          <styled.svg
                                            height="14"
                                            viewBox="0 0 15 15"
                                            width="14"
                                            xmlns="http://www.w3.org/2000/svg"
                                            xmlnsXlink="http://www.w3.org/1999/xlink"
                                          >
                                            <svg
                                              className="c11"
                                              height="14"
                                              viewBox="0 0 15 15"
                                              width="14"
                                              xmlns="http://www.w3.org/2000/svg"
                                              xmlnsXlink="http://www.w3.org/1999/xlink"
                                            >
                                              <title>
                                                spectrum-logo
                                              </title>
                                              <use
                                                fill="#FFF"
                                                xlinkHref="#spectrum"
                                              />
                                              <defs>
                                                <path
                                                  d="M0 6.5V1c0-.6.4-1 1-1 9 .3 13.7 5 14 14 0 .6-.4 1-1 1H8.5c-.6 0-1-.4-1-1-.3-4.4-2-6.2-6.5-6.5-.6 0-1-.4-1-1z"
                                                  id="spectrum"
                                                />
                                              </defs>
                                            </svg>
                                          </styled.svg>
                                        </Spectrum>
                                      </a>
                                    </Link>
                                  </Link>
                                </Styled(Link)>
                                <Styled(Link)
                                  href="https://github.com/styled-components"
                                >
                                  <Link
                                    className="c10"
                                    href="https://github.com/styled-components"
                                    unstyled={true}
                                  >
                                    <Link
                                      href="https://github.com/styled-components"
                                    >
                                      <a
                                        className="c10"
                                        href="https://github.com/styled-components"
                                        onClick={[Function]}
                                      >
                                        <Github>
                                          <styled.svg
                                            height="17"
                                            viewBox="0 0 17 17"
                                            width="17"
                                            xmlns="http://www.w3.org/2000/svg"
                                            xmlnsXlink="http://www.w3.org/1999/xlink"
                                          >
                                            <svg
                                              className="c12"
                                              height="17"
                                              viewBox="0 0 17 17"
                                              width="17"
                                              xmlns="http://www.w3.org/2000/svg"
                                              xmlnsXlink="http://www.w3.org/1999/xlink"
                                            >
                                              <title>
                                                github-logo
                                              </title>
                                              <use
                                                fill="#FFF"
                                                xlinkHref="#a"
                                              />
                                              <defs>
                                                <path
                                                  d="M15.86 4.34c-.76-1.335-1.79-2.392-3.093-3.17C11.463.39 10.042 0 8.5 0 6.958 0 5.536.39 4.233 1.17 2.93 1.947 1.9 3.004 1.14 4.34.38 5.674 0 7.132 0 8.713c0 1.898.54 3.606 1.62 5.122 1.082 1.517 2.48 2.566 4.19 3.148.2.038.347.01.443-.08.096-.09.144-.203.144-.34l-.006-.612v-1l-.25.05c-.16.03-.36.05-.61.04-.24 0-.5-.03-.77-.08-.26-.05-.51-.16-.74-.34-.23-.18-.39-.41-.49-.7l-.11-.26c-.07-.17-.19-.36-.35-.58-.16-.21-.32-.35-.48-.43l-.08-.05c-.05-.04-.09-.08-.14-.132-.04-.053-.08-.106-.1-.16-.02-.053 0-.097.06-.13.06-.035.17-.052.32-.052l.22.036c.15.03.33.12.55.27.22.154.4.35.54.59.17.31.375.55.615.71.24.164.484.245.727.245s.456-.02.63-.056c.18-.037.346-.094.5-.17.067-.507.248-.896.54-1.17-.42-.043-.795-.112-1.13-.203-.34-.09-.685-.24-1.04-.44-.36-.2-.657-.455-.894-.76-.234-.3-.43-.7-.58-1.19-.15-.49-.225-1.06-.225-1.7 0-.917.29-1.695.875-2.34-.27-.69-.244-1.46.08-2.313.214-.07.53-.015.95.155.42.17.73.314.926.435.195.12.35.225.47.308.684-.2 1.394-.3 2.124-.3s1.44.1 2.124.297l.42-.27c.288-.184.628-.35 1.02-.5.39-.15.69-.195.895-.126.334.857.364 1.63.09 2.317.584.645.875 1.42.875 2.34 0 .64-.072 1.21-.223 1.707-.15.5-.343.897-.583 1.196-.24.298-.54.55-.896.754-.355.202-.702.35-1.04.44-.334.09-.712.16-1.132.205.38.34.57.875.57 1.61v2.39c0 .136.045.25.137.34.096.09.24.118.44.08 1.71-.582 3.11-1.632 4.19-3.15 1.06-1.525 1.6-3.235 1.6-5.13 0-1.58-.38-3.04-1.14-4.37z"
                                                  id="a"
                                                />
                                              </defs>
                                            </svg>
                                          </styled.svg>
                                        </Github>
                                      </a>
                                    </Link>
                                  </Link>
                                </Styled(Link)>
                                <Styled(Link)
                                  href="https://medium.com/styled-components"
                                >
                                  <Link
                                    className="c10"
                                    href="https://medium.com/styled-components"
                                    unstyled={true}
                                  >
                                    <Link
                                      href="https://medium.com/styled-components"
                                    >
                                      <a
                                        className="c10"
                                        href="https://medium.com/styled-components"
                                        onClick={[Function]}
                                      >
                                        <Medium>
                                          <styled.svg
                                            height="14"
                                            viewBox="0 0 17 14"
                                            width="17"
                                            xmlns="http://www.w3.org/2000/svg"
                                            xmlnsXlink="http://www.w3.org/1999/xlink"
                                          >
                                            <svg
                                              className="c13"
                                              height="14"
                                              viewBox="0 0 17 14"
                                              width="17"
                                              xmlns="http://www.w3.org/2000/svg"
                                              xmlnsXlink="http://www.w3.org/1999/xlink"
                                            >
                                              <title>
                                                medium
                                              </title>
                                              <path
                                                d="M5.3 0H.5l1.8 2.4v9L0 13.7h5.3l-2-2.3V3.7L7.8 14 12 3.7v8.7l-1.3 1.3H17l-1.5-1.3v-11L17 0h-4.5L9 8.2 5.2 0z"
                                                fill="#fff"
                                              />
                                            </svg>
                                          </styled.svg>
                                        </Medium>
                                      </a>
                                    </Link>
                                  </Link>
                                </Styled(Link)>
                              </nav>
                            </styled.nav>
                          </Social>
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                  <MobileNavbar
                    isMobileNavFolded={true}
                    onMobileNavToggle={[Function]}
                    showSideNav={false}
                  >
                    <styled.div>
                      <div
                        className="c14"
                      >
                        <Styled(Link)>
                          <Link
                            className="c15"
                            href="/"
                            unstyled={true}
                          >
                            <Link
                              href="/"
                            >
                              <a
                                className="c15"
                                href="/"
                                onClick={[Function]}
                              >
                                <styled.div
                                  compact={true}
                                >
                                  <div
                                    className="c16"
                                  />
                                </styled.div>
                              </a>
                            </Link>
                          </Link>
                        </Styled(Link)>
                        <styled.button
                          active={false}
                          onClick={[Function]}
                        >
                          <button
                            className="c17"
                            onClick={[Function]}
                          >
                            <styled.div
                              rotate={false}
                            >
                              <div
                                className="c18"
                                rotate={false}
                              >
                                <ArrowIcon>
                                  <styled.svg
                                    height="8"
                                    width="12"
                                    xmlns="http://www.w3.org/2000/svg"
                                    xmlnsXlink="http://www.w3.org/1999/xlink"
                                  >
                                    <svg
                                      className="c19"
                                      height="8"
                                      width="12"
                                      xmlns="http://www.w3.org/2000/svg"
                                      xmlnsXlink="http://www.w3.org/1999/xlink"
                                    >
                                      <title>
                                        arrow down
                                      </title>
                                      <use
                                        fill="#FFF"
                                        transform="translate(1 1)"
                                        xlinkHref="#menuArrow"
                                      />
                                      <defs>
                                        <path
                                          d="M5 5l-.7.7.7.7.7-.7L5 5zM9.3-.7l-5 5 1.4 1.4 5-5L9.3-.7zm-3.6 5l-5-5L-.7.7l5 5 1.4-1.4z"
                                          id="menuArrow"
                                        />
                                      </defs>
                                    </svg>
                                  </styled.svg>
                                </ArrowIcon>
                              </div>
                            </styled.div>
                          </button>
                        </styled.button>
                        <styled.div
                          open={false}
                        >
                          <div
                            className="c20"
                            open={false}
                          >
                            <NavLinks>
                              <styled.nav>
                                <nav
                                  className="c5"
                                >
                                  <Styled(Link)
                                    href="/"
                                  >
                                    <Link
                                      className="c6"
                                      href="/"
                                      unstyled={true}
                                    >
                                      <Link
                                        href="/"
                                      >
                                        <a
                                          className="c6"
                                          href="/"
                                          onClick={[Function]}
                                        >
                                          Homepage
                                        </a>
                                      </Link>
                                    </Link>
                                  </Styled(Link)>
                                  <styled.span>
                                    <span
                                      className="c7"
                                    />
                                  </styled.span>
                                  <Styled(Link)
                                    href="/docs"
                                  >
                                    <Link
                                      className="c6"
                                      href="/docs"
                                      unstyled={true}
                                    >
                                      <Link
                                        href="/docs"
                                      >
                                        <a
                                          className="c6"
                                          href="/docs"
                                          onClick={[Function]}
                                        >
                                          Documentation
                                        </a>
                                      </Link>
                                    </Link>
                                  </Styled(Link)>
                                  <styled.span>
                                    <span
                                      className="c7"
                                    />
                                  </styled.span>
                                  <Styled(Link)
                                    href="/ecosystem"
                                  >
                                    <Link
                                      className="c6"
                                      href="/ecosystem"
                                      unstyled={true}
                                    >
                                      <Link
                                        href="/ecosystem"
                                      >
                                        <a
                                          className="c6"
                                          href="/ecosystem"
                                          onClick={[Function]}
                                        >
                                          Ecosystem
                                        </a>
                                      </Link>
                                    </Link>
                                  </Styled(Link)>
                                </nav>
                              </styled.nav>
                            </NavLinks>
                            <styled.span>
                              <span
                                className="c7"
                              />
                            </styled.span>
                            <styled.div>
                              <div
                                className="c21"
                              >
                                <Social>
                                  <styled.nav>
                                    <nav
                                      className="c9"
                                    >
                                      <Styled(Link)
                                        href="https://spectrum.chat/styled-components/"
                                      >
                                        <Link
                                          className="c10"
                                          href="https://spectrum.chat/styled-components/"
                                          unstyled={true}
                                        >
                                          <Link
                                            href="https://spectrum.chat/styled-components/"
                                          >
                                            <a
                                              className="c10"
                                              href="https://spectrum.chat/styled-components/"
                                              onClick={[Function]}
                                            >
                                              <Spectrum>
                                                <styled.svg
                                                  height="14"
                                                  viewBox="0 0 15 15"
                                                  width="14"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                  xmlnsXlink="http://www.w3.org/1999/xlink"
                                                >
                                                  <svg
                                                    className="c11"
                                                    height="14"
                                                    viewBox="0 0 15 15"
                                                    width="14"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    xmlnsXlink="http://www.w3.org/1999/xlink"
                                                  >
                                                    <title>
                                                      spectrum-logo
                                                    </title>
                                                    <use
                                                      fill="#FFF"
                                                      xlinkHref="#spectrum"
                                                    />
                                                    <defs>
                                                      <path
                                                        d="M0 6.5V1c0-.6.4-1 1-1 9 .3 13.7 5 14 14 0 .6-.4 1-1 1H8.5c-.6 0-1-.4-1-1-.3-4.4-2-6.2-6.5-6.5-.6 0-1-.4-1-1z"
                                                        id="spectrum"
                                                      />
                                                    </defs>
                                                  </svg>
                                                </styled.svg>
                                              </Spectrum>
                                            </a>
                                          </Link>
                                        </Link>
                                      </Styled(Link)>
                                      <Styled(Link)
                                        href="https://github.com/styled-components"
                                      >
                                        <Link
                                          className="c10"
                                          href="https://github.com/styled-components"
                                          unstyled={true}
                                        >
                                          <Link
                                            href="https://github.com/styled-components"
                                          >
                                            <a
                                              className="c10"
                                              href="https://github.com/styled-components"
                                              onClick={[Function]}
                                            >
                                              <Github>
                                                <styled.svg
                                                  height="17"
                                                  viewBox="0 0 17 17"
                                                  width="17"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                  xmlnsXlink="http://www.w3.org/1999/xlink"
                                                >
                                                  <svg
                                                    className="c12"
                                                    height="17"
                                                    viewBox="0 0 17 17"
                                                    width="17"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    xmlnsXlink="http://www.w3.org/1999/xlink"
                                                  >
                                                    <title>
                                                      github-logo
                                                    </title>
                                                    <use
                                                      fill="#FFF"
                                                      xlinkHref="#a"
                                                    />
                                                    <defs>
                                                      <path
                                                        d="M15.86 4.34c-.76-1.335-1.79-2.392-3.093-3.17C11.463.39 10.042 0 8.5 0 6.958 0 5.536.39 4.233 1.17 2.93 1.947 1.9 3.004 1.14 4.34.38 5.674 0 7.132 0 8.713c0 1.898.54 3.606 1.62 5.122 1.082 1.517 2.48 2.566 4.19 3.148.2.038.347.01.443-.08.096-.09.144-.203.144-.34l-.006-.612v-1l-.25.05c-.16.03-.36.05-.61.04-.24 0-.5-.03-.77-.08-.26-.05-.51-.16-.74-.34-.23-.18-.39-.41-.49-.7l-.11-.26c-.07-.17-.19-.36-.35-.58-.16-.21-.32-.35-.48-.43l-.08-.05c-.05-.04-.09-.08-.14-.132-.04-.053-.08-.106-.1-.16-.02-.053 0-.097.06-.13.06-.035.17-.052.32-.052l.22.036c.15.03.33.12.55.27.22.154.4.35.54.59.17.31.375.55.615.71.24.164.484.245.727.245s.456-.02.63-.056c.18-.037.346-.094.5-.17.067-.507.248-.896.54-1.17-.42-.043-.795-.112-1.13-.203-.34-.09-.685-.24-1.04-.44-.36-.2-.657-.455-.894-.76-.234-.3-.43-.7-.58-1.19-.15-.49-.225-1.06-.225-1.7 0-.917.29-1.695.875-2.34-.27-.69-.244-1.46.08-2.313.214-.07.53-.015.95.155.42.17.73.314.926.435.195.12.35.225.47.308.684-.2 1.394-.3 2.124-.3s1.44.1 2.124.297l.42-.27c.288-.184.628-.35 1.02-.5.39-.15.69-.195.895-.126.334.857.364 1.63.09 2.317.584.645.875 1.42.875 2.34 0 .64-.072 1.21-.223 1.707-.15.5-.343.897-.583 1.196-.24.298-.54.55-.896.754-.355.202-.702.35-1.04.44-.334.09-.712.16-1.132.205.38.34.57.875.57 1.61v2.39c0 .136.045.25.137.34.096.09.24.118.44.08 1.71-.582 3.11-1.632 4.19-3.15 1.06-1.525 1.6-3.235 1.6-5.13 0-1.58-.38-3.04-1.14-4.37z"
                                                        id="a"
                                                      />
                                                    </defs>
                                                  </svg>
                                                </styled.svg>
                                              </Github>
                                            </a>
                                          </Link>
                                        </Link>
                                      </Styled(Link)>
                                      <Styled(Link)
                                        href="https://medium.com/styled-components"
                                      >
                                        <Link
                                          className="c10"
                                          href="https://medium.com/styled-components"
                                          unstyled={true}
                                        >
                                          <Link
                                            href="https://medium.com/styled-components"
                                          >
                                            <a
                                              className="c10"
                                              href="https://medium.com/styled-components"
                                              onClick={[Function]}
                                            >
                                              <Medium>
                                                <styled.svg
                                                  height="14"
                                                  viewBox="0 0 17 14"
                                                  width="17"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                  xmlnsXlink="http://www.w3.org/1999/xlink"
                                                >
                                                  <svg
                                                    className="c13"
                                                    height="14"
                                                    viewBox="0 0 17 14"
                                                    width="17"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    xmlnsXlink="http://www.w3.org/1999/xlink"
                                                  >
                                                    <title>
                                                      medium
                                                    </title>
                                                    <path
                                                      d="M5.3 0H.5l1.8 2.4v9L0 13.7h5.3l-2-2.3V3.7L7.8 14 12 3.7v8.7l-1.3 1.3H17l-1.5-1.3v-11L17 0h-4.5L9 8.2 5.2 0z"
                                                      fill="#fff"
                                                    />
                                                  </svg>
                                                </styled.svg>
                                              </Medium>
                                            </a>
                                          </Link>
                                        </Link>
                                      </Styled(Link)>
                                    </nav>
                                  </styled.nav>
                                </Social>
                              </div>
                            </styled.div>
                          </div>
                        </styled.div>
                      </div>
                    </styled.div>
                  </MobileNavbar>
                </nav>
              </styled.nav>
            </Navbar>
          </div>
        </Nav>
      </WithIsScrolled>
      <styled.div>
        <div
          className="c22"
        >
          <styled.div>
            <div
              className="c23"
            >
              <LiveProvider
                code="const Button = styled.a\`
                /* This renders the buttons above... Edit me! */
                display: inline-block;
                border-radius: 3px;
                padding: 0.5rem 0;
                margin: 0.5rem 1rem;
                width: 11rem;
                background: transparent;
                color: white;
                border: 2px solid white;
              
                /* The GitHub button is a primary button
                * edit this to target it specifically! */
              
                \${props => props.primary && css\`
                  background: white;
                  color: palevioletred;
                \`}
              \`"
                mountStylesheet={false}
                noInline={false}
                scope={
                  Object {
                    "Link": [Function],
                    "css": [Function],
                    "rem": [Function],
                    "styled": [Function],
                  }
                }
              >
                <div
                  className="react-live"
                  scope={
                    Object {
                      "Link": [Function],
                      "css": [Function],
                      "rem": [Function],
                      "styled": [Function],
                    }
                  }
                >
                  <styled.img>
                    <img
                      alt="styled-components Logo"
                      className="c24"
                      src="/static/logo.png"
                    />
                  </styled.img>
                  <styled.div>
                    <div
                      className="c25"
                    >
                      <styled.h1>
                        <h1
                          className="c26"
                        >
                          Visual primitives for the component age.
                        </h1>
                      </styled.h1>
                      <styled.h2>
                        <h2
                          className="c27"
                        >
                          Use the best bits of ES6 and CSS to style your apps without stress 💅
                        </h2>
                      </styled.h2>
                    </div>
                  </styled.div>
                  <styled.div>
                    <div
                      className="c28"
                    >
                      <HomepageLivePreview
                        translate={[Function]}
                      >
                        <div
                          className="react-live-preview undefined"
                        >
                          <styled.a
                            href="https://github.com/styled-components/styled-components"
                            primary={true}
                            rel="noopener"
                            target="_blank"
                          >
                            <a
                              className="c29"
                              href="https://github.com/styled-components/styled-components"
                              rel="noopener"
                              target="_blank"
                            >
                              GitHub
                            </a>
                          </styled.a>
                          <Styled(Link)
                            href="/docs"
                            prefetch={true}
                          >
                            <Link
                              className="c30"
                              href="/docs"
                              prefetch={true}
                            >
                              <Link
                                href="/docs"
                                prefetch={true}
                              >
                                <styled.a
                                  className="c30"
                                  href="/docs"
                                  onClick={[Function]}
                                >
                                  <a
                                    className="c30 c31"
                                    href="/docs"
                                    onClick={[Function]}
                                  >
                                    Documentation
                                  </a>
                                </styled.a>
                              </Link>
                            </Link>
                          </Styled(Link)>
                        </div>
                      </HomepageLivePreview>
                    </div>
                  </styled.div>
                  <styled.div>
                    <div
                      className="c32"
                    >
                      <Styled(LiveEditor)>
                        <Styled(LiveEditor)>
                          <LiveEditor
                            className="c33"
                          >
                            <Editor
                              className="c33"
                              code="const Button = styled.a\`
                              /* This renders the buttons above... Edit me! */
                              display: inline-block;
                              border-radius: 3px;
                              padding: 0.5rem 0;
                              margin: 0.5rem 1rem;
                              width: 11rem;
                              background: transparent;
                              color: white;
                              border: 2px solid white;
                            
                              /* The GitHub button is a primary button
                              * edit this to target it specifically! */
                            
                              \${props => props.primary && css\`
                                background: white;
                                color: palevioletred;
                              \`}
                            \`"
                              contentEditable={true}
                              onChange={[Function]}
                            >
                              <pre
                                className="prism-code c33"
                                contentEditable={true}
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "<span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>a<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`
                                  	<span class=\\"token comment\\" spellcheck=\\"true\\">/* This renders the buttons above... Edit me! */</span>
                                  	<span class=\\"token property\\">display</span><span class=\\"token punctuation\\">:</span> inline-block</span>;<span class=\\"token string language-css\\">
                                  	<span class=\\"token property\\">border-radius</span><span class=\\"token punctuation\\">:</span> 3px</span>;<span class=\\"token string language-css\\">
                                  	<span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> 0.5rem 0</span>;<span class=\\"token string language-css\\">
                                  	<span class=\\"token property\\">margin</span><span class=\\"token punctuation\\">:</span> 0.5rem 1rem</span>;<span class=\\"token string language-css\\">
                                  	<span class=\\"token property\\">width</span><span class=\\"token punctuation\\">:</span> 11rem</span>;<span class=\\"token string language-css\\">
                                  	<span class=\\"token property\\">background</span><span class=\\"token punctuation\\">:</span> transparent</span>;<span class=\\"token string language-css\\">
                                  	<span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> white</span>;<span class=\\"token string language-css\\">
                                  	<span class=\\"token property\\">border</span><span class=\\"token punctuation\\">:</span> 2px solid white</span>;<span class=\\"token string language-css\\">
                                  
                                  	<span class=\\"token comment\\" spellcheck=\\"true\\">/* The GitHub button is a primary button
                                  	* edit this to target it specifically! */</span>
                                  
                                  	</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>props <span class=\\"token operator\\">=</span><span class=\\"token operator\\">></span> props<span class=\\"token punctuation\\">.</span>primary <span class=\\"token operator\\">&amp;&amp;</span> css<span class=\\"token template-string\\"><span class=\\"token string\\">\`
                                  		background: white;
                                  		color: palevioletred;
                                  	\`</span></span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string language-css\\">
                                  \`</span></span>",
                                  }
                                }
                                onChange={[Function]}
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                              />
                            </Editor>
                          </LiveEditor>
                        </Styled(LiveEditor)>
                      </Styled(LiveEditor)>
                      <Styled(LiveError)>
                        <LiveError
                          className="c34"
                        />
                      </Styled(LiveError)>
                    </div>
                  </styled.div>
                </div>
              </LiveProvider>
              <styled.p>
                <p
                  className="c35"
                >
                  Used by folks at
                </p>
              </styled.p>
              <styled.section>
                <section
                  className="c36"
                >
                  <styled.img
                    bottom="-0.2rem"
                    height="1.75rem"
                    src="/static/bloomberg-logo.svg"
                  >
                    <img
                      className="c37"
                      height="1.75rem"
                      src="/static/bloomberg-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    height="1.75rem"
                    src="/static/atlassian-logo.svg"
                  >
                    <img
                      className="c38"
                      height="1.75rem"
                      src="/static/atlassian-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    src="/static/reddit-logo.svg"
                  >
                    <img
                      className="c39"
                      src="/static/reddit-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    src="/static/target-logo.svg"
                  >
                    <img
                      className="c39"
                      src="/static/target-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    bottom="0.625rem"
                    height="3rem"
                    src="/static/eurovision-logo.svg"
                  >
                    <img
                      className="c40"
                      height="3rem"
                      src="/static/eurovision-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    bottom="0.16rem"
                    height="2.25rem"
                    src="/static/artsy-logo.svg"
                  >
                    <img
                      className="c41"
                      height="2.25rem"
                      src="/static/artsy-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    bottom="-0.15rem"
                    height="1.5rem"
                    src="/static/ideo-logo.svg"
                  >
                    <img
                      className="c42"
                      height="1.5rem"
                      src="/static/ideo-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    src="/static/huffpost-logo.svg"
                  >
                    <img
                      className="c39"
                      src="/static/huffpost-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    bottom="0.25rem"
                    height="2rem"
                    src="/static/coinbase-logo.svg"
                  >
                    <img
                      className="c43"
                      height="2rem"
                      src="/static/coinbase-logo.svg"
                    />
                  </styled.img>
                </section>
              </styled.section>
            </div>
          </styled.div>
        </div>
      </styled.div>
      <HomepageGettingStarted>
        <I18n
          ns="home"
        >
          <styled.div>
            <div
              className="c44"
            >
              <styled.div>
                <div
                  className="c45"
                >
                  <a
                    href="https://github.com/styled-components/styled-components"
                  >
                    <styled.img
                      alt="Stars on GitHub"
                      src="https://img.shields.io/github/stars/styled-components/styled-components.svg?style=social&label=Star&maxAge=3600"
                    >
                      <img
                        alt="Stars on GitHub"
                        className="c46"
                        src="https://img.shields.io/github/stars/styled-components/styled-components.svg?style=social&label=Star&maxAge=3600"
                      />
                    </styled.img>
                  </a>
                  <a
                    href="https://www.npmjs.com/package/styled-components"
                  >
                    <styled.img
                      alt="Current Version"
                      src="https://img.shields.io/npm/v/styled-components.svg"
                    >
                      <img
                        alt="Current Version"
                        className="c46"
                        src="https://img.shields.io/npm/v/styled-components.svg"
                      />
                    </styled.img>
                  </a>
                  <styled.img
                    alt="Monthly downloads"
                    src="https://img.shields.io/npm/dm/styled-components.svg?maxAge=3600"
                  >
                    <img
                      alt="Monthly downloads"
                      className="c46"
                      src="https://img.shields.io/npm/dm/styled-components.svg?maxAge=3600"
                    />
                  </styled.img>
                  <styled.img
                    alt="Gzipped size"
                    src="http://img.badgesize.io/https://unpkg.com/styled-components/dist/styled-components.min.js?compression=gzip&label=gzip%20size"
                  >
                    <img
                      alt="Gzipped size"
                      className="c46"
                      src="http://img.badgesize.io/https://unpkg.com/styled-components/dist/styled-components.min.js?compression=gzip&label=gzip%20size"
                    />
                  </styled.img>
                  <a
                    href="https://spectrum.chat/styled-components"
                  >
                    <styled.img
                      alt="Join the community on Spectrum"
                      src="https://withspectrum.github.io/badge/badge.svg"
                    >
                      <img
                        alt="Join the community on Spectrum"
                        className="c46"
                        src="https://withspectrum.github.io/badge/badge.svg"
                      />
                    </styled.img>
                  </a>
                </div>
              </styled.div>
              <div>
                <Heading
                  level={1}
                  literal={null}
                  nodeKey="1:1-1:171"
                >
                  <styled.h1>
                    <h1
                      className="c47"
                    >
                      Getting started
                    </h1>
                  </styled.h1>
                </Heading>
                <Heading
                  level={2}
                  literal={null}
                  nodeKey="2:1-2:151"
                >
                  <Link
                    id="installation"
                    sub={false}
                  >
                    <Styled(styled.h2)>
                      <styled.h2
                        className="c48"
                      >
                        <h2
                          className="c48 c49"
                        >
                          <styled.div
                            id="installation"
                          >
                            <div
                              aria-hidden={true}
                              className="c50"
                              id="installation"
                            />
                          </styled.div>
                          <styled.a
                            href="#installation"
                          >
                            <a
                              className="c51 c52"
                              href="#installation"
                            >
                              <Styled(LinkIcon)>
                                <LinkIcon
                                  className="c53"
                                  height={null}
                                  width={null}
                                >
                                  <svg
                                    className="octicons octicons-link-icon c53"
                                    height={null}
                                    viewBox="0 0 16 16"
                                    width={null}
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"
                                      fillRule="evenodd"
                                    />
                                  </svg>
                                </LinkIcon>
                              </Styled(LinkIcon)>
                            </a>
                          </styled.a>
                          Installation
                        </h2>
                      </styled.h2>
                    </Styled(styled.h2)>
                  </Link>
                </Heading>
                <Paragraph
                  literal={null}
                  nodeKey="4:1-5:989"
                >
                  <p>
                    To download styled-components run 
                    <Code
                      inline={true}
                      literal="npm install --save styled-components"
                      nodeKey="4:1-5:981"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          npm install --save styled-components
                        </span>
                      </styled.span>
                    </Code>
                    .
                    That's all you need to do, you are now ready to use it in your app! (yep, no build step needed 👌)
                  </p>
                </Paragraph>
                <Heading
                  level={2}
                  literal={null}
                  nodeKey="7:1-7:301"
                >
                  <Link
                    id="your-first-styled-component"
                    sub={false}
                  >
                    <Styled(styled.h2)>
                      <styled.h2
                        className="c48"
                      >
                        <h2
                          className="c48 c49"
                        >
                          <styled.div
                            id="your-first-styled-component"
                          >
                            <div
                              aria-hidden={true}
                              className="c50"
                              id="your-first-styled-component"
                            />
                          </styled.div>
                          <styled.a
                            href="#your-first-styled-component"
                          >
                            <a
                              className="c51 c52"
                              href="#your-first-styled-component"
                            >
                              <Styled(LinkIcon)>
                                <LinkIcon
                                  className="c53"
                                  height={null}
                                  width={null}
                                >
                                  <svg
                                    className="octicons octicons-link-icon c53"
                                    height={null}
                                    viewBox="0 0 16 16"
                                    width={null}
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"
                                      fillRule="evenodd"
                                    />
                                  </svg>
                                </LinkIcon>
                              </Styled(LinkIcon)>
                            </a>
                          </styled.a>
                          Your first styled component
                        </h2>
                      </styled.h2>
                    </Styled(styled.h2)>
                  </Link>
                </Heading>
                <Paragraph
                  literal={null}
                  nodeKey="9:1-11:8813"
                >
                  <p>
                    Let's say you want to create a simple and reusable 
                    <Code
                      inline={true}
                      literal="<Button />"
                      nodeKey="9:1-11:883"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          &lt;Button /&gt;
                        </span>
                      </styled.span>
                    </Code>
                     component that you can use throughout your application.
                    There should be a normal version and a big and 
                    <Code
                      inline={true}
                      literal="primary"
                      nodeKey="9:1-11:887"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          primary
                        </span>
                      </styled.span>
                    </Code>
                     version for the important buttons.
                    This is what it should look like when rendered: (this is a live example, click on them!)
                  </p>
                </Paragraph>
              </div>
              <styled.div>
                <div
                  className="c45"
                >
                  <styled.button
                    onClick={[Function]}
                  >
                    <button
                      className="c55"
                      onClick={[Function]}
                    >
                      Normal button
                    </button>
                  </styled.button>
                  <styled.button
                    onClick={[Function]}
                    primary={true}
                  >
                    <button
                      className="c56"
                      onClick={[Function]}
                    >
                      Primary button
                    </button>
                  </styled.button>
                </div>
              </styled.div>
              <div>
                <Paragraph
                  literal={null}
                  nodeKey="1:1-1:675"
                >
                  <p>
                    First, let's import styled-components and create a 
                    <Code
                      inline={true}
                      literal="styled.button"
                      nodeKey="1:1-1:673"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          styled.button
                        </span>
                      </styled.span>
                    </Code>
                    :
                  </p>
                </Paragraph>
                <CodeBlock
                  codeinfo={
                    Array [
                      "jsx",
                    ]
                  }
                  language="jsx"
                  literal="import styled from 'styled-components';
                
                const Button = styled.button\`\`;
                "
                  nodeKey="3:1-7:31"
                >
                  <CodeBlock
                    code="import styled from 'styled-components';
                  
                  const Button = styled.button\`\`;
                  "
                    language="jsx"
                  >
                    <styled.pre
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "<span class=\\"token keyword\\">import</span> styled <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'styled-components'</span><span class=\\"token punctuation\\">;</span>
                        
                        <span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>button<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`\`</span></span><span class=\\"token punctuation\\">;</span>
                        ",
                        }
                      }
                    >
                      <pre
                        className="prism-code c57"
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "<span class=\\"token keyword\\">import</span> styled <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'styled-components'</span><span class=\\"token punctuation\\">;</span>
                          
                          <span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>button<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`\`</span></span><span class=\\"token punctuation\\">;</span>
                          ",
                          }
                        }
                      />
                    </styled.pre>
                  </CodeBlock>
                </CodeBlock>
                <Paragraph
                  literal={null}
                  nodeKey="9:1-12:9216"
                >
                  <p>
                    This 
                    <Code
                      inline={true}
                      literal="Button"
                      nodeKey="9:1-12:921"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          Button
                        </span>
                      </styled.span>
                    </Code>
                     variable here is now a React component that you can use like any other React component!
                    This unusual backtick syntax is a new JavaScript feature called a tagged template literal.
                    You know how you can call functions with parenthesis? (
                    <Code
                      inline={true}
                      literal="myFunc()"
                      nodeKey="9:1-12:928"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          myFunc()
                        </span>
                      </styled.span>
                    </Code>
                    ) Well, now you can also call functions with backticks!
                    
                    <Link
                      href="/docs/advanced#tagged-template-literals"
                      literal={null}
                      nodeKey="9:1-12:9214"
                    >
                      <Link
                        href="/docs/advanced#tagged-template-literals"
                        inline={true}
                      >
                        <Link
                          href="/docs/advanced#tagged-template-literals"
                        >
                          <styled.a
                            href="/docs/advanced#tagged-template-literals"
                            onClick={[Function]}
                          >
                            <a
                              className="c58"
                              href="/docs/advanced#tagged-template-literals"
                              onClick={[Function]}
                              rel="noopener"
                              target="_blank"
                            >
                              here is an explanation
                            </a>
                          </styled.a>
                        </Link>
                      </Link>
                    </Link>
                     of how that works exactly.
                  </p>
                </Paragraph>
                <Paragraph
                  literal={null}
                  nodeKey="14:1-14:1063"
                >
                  <p>
                    If you render our lovely component now (just like any other component: 
                    <Code
                      inline={true}
                      literal="<Button />"
                      nodeKey="14:1-14:1061"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          &lt;Button /&gt;
                        </span>
                      </styled.span>
                    </Code>
                    ) this is what you get:
                  </p>
                </Paragraph>
              </div>
              <styled.div>
                <div
                  className="c45"
                >
                  <button>
                    I'm a &lt;Button /&gt;!
                  </button>
                </div>
              </styled.div>
              <div>
                <Paragraph
                  literal={null}
                  nodeKey="1:1-2:7110"
                >
                  <p>
                    It renders a button! That's not a very nice button though 😕 we can do better than this,
                    let's give it a bit of styling and tickle out the hidden beauty within!
                  </p>
                </Paragraph>
                <CodeBlock
                  codeinfo={
                    Array [
                      "jsx",
                    ]
                  }
                  language="jsx"
                  literal="const Button = styled.button\`
                  border-radius: 3px;
                  padding: 0.25em 1em;
                  margin: 0 1em;
                  background: transparent;
                  color: palevioletred;
                  border: 2px solid palevioletred;
                \`;
                "
                  nodeKey="4:1-13:2"
                >
                  <CodeBlock
                    code="const Button = styled.button\`
                    border-radius: 3px;
                    padding: 0.25em 1em;
                    margin: 0 1em;
                    background: transparent;
                    color: palevioletred;
                    border: 2px solid palevioletred;
                  \`;
                  "
                    language="jsx"
                  >
                    <styled.pre
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "<span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>button<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`
                          <span class=\\"token property\\">border-radius</span><span class=\\"token punctuation\\">:</span> 3px</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> 0.25em 1em</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">margin</span><span class=\\"token punctuation\\">:</span> 0 1em</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">background</span><span class=\\"token punctuation\\">:</span> transparent</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> palevioletred</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">border</span><span class=\\"token punctuation\\">:</span> 2px solid palevioletred</span>;<span class=\\"token string language-css\\">
                        \`</span></span><span class=\\"token punctuation\\">;</span>
                        ",
                        }
                      }
                    >
                      <pre
                        className="prism-code c57"
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "<span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>button<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`
                            <span class=\\"token property\\">border-radius</span><span class=\\"token punctuation\\">:</span> 3px</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> 0.25em 1em</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">margin</span><span class=\\"token punctuation\\">:</span> 0 1em</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">background</span><span class=\\"token punctuation\\">:</span> transparent</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> palevioletred</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">border</span><span class=\\"token punctuation\\">:</span> 2px solid palevioletred</span>;<span class=\\"token string language-css\\">
                          \`</span></span><span class=\\"token punctuation\\">;</span>
                          ",
                          }
                        }
                      />
                    </styled.pre>
                  </CodeBlock>
                </CodeBlock>
              </div>
              <styled.div>
                <div
                  className="c45"
                >
                  <styled.button>
                    <button
                      className="c59"
                    >
                      I'm a styled &lt;Button /&gt;
                    </button>
                  </styled.button>
                </div>
              </styled.div>
              <div>
                <Paragraph
                  literal={null}
                  nodeKey="1:1-4:8511"
                >
                  <p>
                    As you can see, styled-components lets you write actual CSS in your JavaScript. This means you can use all
                    the features of CSS you use and love, including (but by far not limited to) media queries, all
                    pseudo-selectors, nesting, etc. It also binds styles to components, which has some interesting properties.
                    (learn more about 
                    <Link
                      href="/docs/basics#motivation"
                      literal={null}
                      nodeKey="1:1-4:859"
                    >
                      <Link
                        href="/docs/basics#motivation"
                        inline={true}
                      >
                        <Link
                          href="/docs/basics#motivation"
                        >
                          <styled.a
                            href="/docs/basics#motivation"
                            onClick={[Function]}
                          >
                            <a
                              className="c58"
                              href="/docs/basics#motivation"
                              onClick={[Function]}
                              rel="noopener"
                              target="_blank"
                            >
                              the ideas behind styled-components here
                            </a>
                          </styled.a>
                        </Link>
                      </Link>
                    </Link>
                    )
                  </p>
                </Paragraph>
                <Paragraph
                  literal={null}
                  nodeKey="6:1-7:1607"
                >
                  <p>
                    The last step is that we need to define what a primary button looks like.
                    To do that we also import 
                    <Code
                      inline={true}
                      literal="{ css }"
                      nodeKey="6:1-7:1603"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          { css }
                        </span>
                      </styled.span>
                    </Code>
                     from 
                    <Code
                      inline={true}
                      literal="styled-components"
                      nodeKey="6:1-7:1605"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          styled-components
                        </span>
                      </styled.span>
                    </Code>
                     and interpolate a function into our template literal, which gets passed the props of our component:
                  </p>
                </Paragraph>
                <CodeBlock
                  codeinfo={
                    Array [
                      "jsx",
                    ]
                  }
                  language="jsx"
                  literal="import styled, { css } from styled-components
                
                const Button = styled.button\`
                  border-radius: 3px;
                  padding: 0.25em 1em;
                  margin: 0 1em;
                  background: transparent;
                  color: palevioletred;
                  border: 2px solid palevioletred;
                
                  \${props => props.primary && css\`
                    background: palevioletred;
                    color: white;
                  \`}
                \`;
                "
                  nodeKey="9:1-25:2"
                >
                  <CodeBlock
                    code="import styled, { css } from styled-components
                  
                  const Button = styled.button\`
                    border-radius: 3px;
                    padding: 0.25em 1em;
                    margin: 0 1em;
                    background: transparent;
                    color: palevioletred;
                    border: 2px solid palevioletred;
                  
                    \${props => props.primary && css\`
                      background: palevioletred;
                      color: white;
                    \`}
                  \`;
                  "
                    language="jsx"
                  >
                    <styled.pre
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "<span class=\\"token keyword\\">import</span> styled<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span> css <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> styled<span class=\\"token operator\\">-</span>components
                        
                        <span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>button<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`
                          <span class=\\"token property\\">border-radius</span><span class=\\"token punctuation\\">:</span> 3px</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> 0.25em 1em</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">margin</span><span class=\\"token punctuation\\">:</span> 0 1em</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">background</span><span class=\\"token punctuation\\">:</span> transparent</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> palevioletred</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">border</span><span class=\\"token punctuation\\">:</span> 2px solid palevioletred</span>;<span class=\\"token string language-css\\">
                        
                          </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>props <span class=\\"token operator\\">=</span><span class=\\"token operator\\">></span> props<span class=\\"token punctuation\\">.</span>primary <span class=\\"token operator\\">&amp;&amp;</span> css<span class=\\"token template-string\\"><span class=\\"token string\\">\`
                            background: palevioletred;
                            color: white;
                          \`</span></span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string language-css\\">
                        \`</span></span><span class=\\"token punctuation\\">;</span>
                        ",
                        }
                      }
                    >
                      <pre
                        className="prism-code c57"
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "<span class=\\"token keyword\\">import</span> styled<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span> css <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> styled<span class=\\"token operator\\">-</span>components
                          
                          <span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>button<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`
                            <span class=\\"token property\\">border-radius</span><span class=\\"token punctuation\\">:</span> 3px</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> 0.25em 1em</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">margin</span><span class=\\"token punctuation\\">:</span> 0 1em</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">background</span><span class=\\"token punctuation\\">:</span> transparent</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> palevioletred</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">border</span><span class=\\"token punctuation\\">:</span> 2px solid palevioletred</span>;<span class=\\"token string language-css\\">
                          
                            </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>props <span class=\\"token operator\\">=</span><span class=\\"token operator\\">></span> props<span class=\\"token punctuation\\">.</span>primary <span class=\\"token operator\\">&amp;&amp;</span> css<span class=\\"token template-string\\"><span class=\\"token string\\">\`
                              background: palevioletred;
                              color: white;
                            \`</span></span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string language-css\\">
                          \`</span></span><span class=\\"token punctuation\\">;</span>
                          ",
                          }
                        }
                      />
                    </styled.pre>
                  </CodeBlock>
                </CodeBlock>
                <Paragraph
                  literal={null}
                  nodeKey="27:1-28:459"
                >
                  <p>
                    All we're saying here is that when the 
                    <Code
                      inline={true}
                      literal="primary"
                      nodeKey="27:1-28:453"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          primary
                        </span>
                      </styled.span>
                    </Code>
                     property is set we want to add some more 
                    <Code
                      inline={true}
                      literal="css"
                      nodeKey="27:1-28:455"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          css
                        </span>
                      </styled.span>
                    </Code>
                     to our component,
                    in this case change the background and color.
                  </p>
                </Paragraph>
                <Paragraph
                  literal={null}
                  nodeKey="30:1-30:627"
                >
                  <p>
                    That's all, we're done! Take a look at our finished component:
                  </p>
                </Paragraph>
                <CodeBlock
                  codeinfo={
                    Array [
                      "react",
                    ]
                  }
                  language="react"
                  literal="const Button = styled.button\`
                  border-radius: 3px;
                  padding: 0.25em 1em;
                  margin: 0 1em;
                  background: transparent;
                  color: palevioletred;
                  border: 2px solid palevioletred;
                
                  \${props => props.primary && css\`
                    background: palevioletred;
                    color: white;
                  \`}
                \`;
                
                render(
                  <div>
                    <Button>Normal Button</Button>
                    <Button primary>Primary Button</Button>
                  </div>
                );
                "
                  nodeKey="32:1-53:2"
                >
                  <LiveEdit
                    code="const Button = styled.button\`
                    border-radius: 3px;
                    padding: 0.25em 1em;
                    margin: 0 1em;
                    background: transparent;
                    color: palevioletred;
                    border: 2px solid palevioletred;
                  
                    \${props => props.primary && css\`
                      background: palevioletred;
                      color: white;
                    \`}
                  \`;
                  
                  render(
                    <div>
                      <Button>Normal Button</Button>
                      <Button primary>Primary Button</Button>
                    </div>
                  );
                  "
                    noInline={true}
                  >
                    <Styled(LiveProvider)
                      code="const Button = styled.button\`
                      border-radius: 3px;
                      padding: 0.25em 1em;
                      margin: 0 1em;
                      background: transparent;
                      color: palevioletred;
                      border: 2px solid palevioletred;
                    
                      \${props => props.primary && css\`
                        background: palevioletred;
                        color: white;
                      \`}
                    \`;
                    
                    render(
                      <div>
                        <Button>Normal Button</Button>
                        <Button primary>Primary Button</Button>
                      </div>
                    );
                    "
                      mountStylesheet={false}
                      noInline={true}
                      scope={
                        Object {
                          "ThemeProvider": [Function],
                          "css": [Function],
                          "keyframes": [Function],
                          "styled": [Function],
                          "withTheme": [Function],
                        }
                      }
                    >
                      <LiveProvider
                        className="c60"
                        code="const Button = styled.button\`
                        border-radius: 3px;
                        padding: 0.25em 1em;
                        margin: 0 1em;
                        background: transparent;
                        color: palevioletred;
                        border: 2px solid palevioletred;
                      
                        \${props => props.primary && css\`
                          background: palevioletred;
                          color: white;
                        \`}
                      \`;
                      
                      render(
                        <div>
                          <Button>Normal Button</Button>
                          <Button primary>Primary Button</Button>
                        </div>
                      );
                      "
                        mountStylesheet={false}
                        noInline={true}
                        scope={
                          Object {
                            "ThemeProvider": [Function],
                            "css": [Function],
                            "keyframes": [Function],
                            "styled": [Function],
                            "withTheme": [Function],
                          }
                        }
                      >
                        <div
                          className="react-live c60"
                          scope={
                            Object {
                              "ThemeProvider": [Function],
                              "css": [Function],
                              "keyframes": [Function],
                              "styled": [Function],
                              "withTheme": [Function],
                            }
                          }
                        >
                          <styled.div>
                            <div
                              className="c61"
                            >
                              <Styled(LiveEditor)>
                                <Styled(LiveEditor)>
                                  <LiveEditor
                                    className="c62"
                                  >
                                    <Editor
                                      className="c62"
                                      code="const Button = styled.button\`
                                      border-radius: 3px;
                                      padding: 0.25em 1em;
                                      margin: 0 1em;
                                      background: transparent;
                                      color: palevioletred;
                                      border: 2px solid palevioletred;
                                    
                                      \${props => props.primary && css\`
                                        background: palevioletred;
                                        color: white;
                                      \`}
                                    \`;
                                    
                                    render(
                                      <div>
                                        <Button>Normal Button</Button>
                                        <Button primary>Primary Button</Button>
                                      </div>
                                    );
                                    "
                                      contentEditable={true}
                                      onChange={[Function]}
                                    >
                                      <pre
                                        className="prism-code c62"
                                        contentEditable={true}
                                        dangerouslySetInnerHTML={
                                          Object {
                                            "__html": "<span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>button<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`
                                          	<span class=\\"token property\\">border-radius</span><span class=\\"token punctuation\\">:</span> 3px</span>;<span class=\\"token string language-css\\">
                                          	<span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> 0.25em 1em</span>;<span class=\\"token string language-css\\">
                                          	<span class=\\"token property\\">margin</span><span class=\\"token punctuation\\">:</span> 0 1em</span>;<span class=\\"token string language-css\\">
                                          	<span class=\\"token property\\">background</span><span class=\\"token punctuation\\">:</span> transparent</span>;<span class=\\"token string language-css\\">
                                          	<span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> palevioletred</span>;<span class=\\"token string language-css\\">
                                          	<span class=\\"token property\\">border</span><span class=\\"token punctuation\\">:</span> 2px solid palevioletred</span>;<span class=\\"token string language-css\\">
                                          
                                          	</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>props <span class=\\"token operator\\">=</span><span class=\\"token operator\\">></span> props<span class=\\"token punctuation\\">.</span>primary <span class=\\"token operator\\">&amp;&amp;</span> css<span class=\\"token template-string\\"><span class=\\"token string\\">\`
                                          		background: palevioletred;
                                          		color: white;
                                          	\`</span></span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string language-css\\">
                                          \`</span></span><span class=\\"token punctuation\\">;</span>
                                          
                                          <span class=\\"token function\\">render</span><span class=\\"token punctuation\\">(</span>
                                          	<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span><span class=\\"token punctuation\\">></span></span>
                                          		<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Button</span><span class=\\"token punctuation\\">></span></span>Normal Button<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>Button</span><span class=\\"token punctuation\\">></span></span>
                                          		<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Button</span> <span class=\\"token attr-name\\">primary</span><span class=\\"token punctuation\\">></span></span>Primary Button<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>Button</span><span class=\\"token punctuation\\">></span></span>
                                          	<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">></span></span>
                                          <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>
                                          ",
                                          }
                                        }
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                      />
                                    </Editor>
                                  </LiveEditor>
                                </Styled(LiveEditor)>
                              </Styled(LiveEditor)>
                              <Styled(LivePreview)>
                                <LivePreview
                                  className="c63"
                                >
                                  <div
                                    className="react-live-preview c63"
                                  >
                                    <div>
                                      <styled.button>
                                        <button
                                          className="c64"
                                        >
                                          Normal Button
                                        </button>
                                      </styled.button>
                                      <styled.button
                                        primary={true}
                                      >
                                        <button
                                          className="c65"
                                        >
                                          Primary Button
                                        </button>
                                      </styled.button>
                                    </div>
                                  </div>
                                </LivePreview>
                              </Styled(LivePreview)>
                            </div>
                          </styled.div>
                          <Styled(LiveError)>
                            <LiveError
                              className="c34"
                            />
                          </Styled(LiveError)>
                        </div>
                      </LiveProvider>
                    </Styled(LiveProvider)>
                  </LiveEdit>
                </CodeBlock>
                <Paragraph
                  literal={null}
                  nodeKey="55:1-55:1366"
                >
                  <p>
                    Nice 😍 That's a live updating editor too, so play around with it a bit to get a feel for what it's like to work with styled-components!
                  </p>
                </Paragraph>
                <Paragraph
                  literal={null}
                  nodeKey="57:1-57:14113"
                >
                  <p>
                    Once you're done take a look at the 
                    <Link
                      href="/docs"
                      literal={null}
                      nodeKey="57:1-57:1415"
                    >
                      <Link
                        href="/docs"
                        inline={true}
                      >
                        <Link
                          href="/docs"
                        >
                          <styled.a
                            href="/docs"
                            onClick={[Function]}
                          >
                            <a
                              className="c58"
                              href="/docs"
                              onClick={[Function]}
                              rel="noopener"
                              target="_blank"
                            >
                              documentation
                            </a>
                          </styled.a>
                        </Link>
                      </Link>
                    </Link>
                    , specifically the 
                    <Link
                      href="/docs/basics#getting-started"
                      literal={null}
                      nodeKey="57:1-57:1419"
                    >
                      <Link
                        href="/docs/basics#getting-started"
                        inline={true}
                      >
                        <Link
                          href="/docs/basics#getting-started"
                        >
                          <styled.a
                            href="/docs/basics#getting-started"
                            onClick={[Function]}
                          >
                            <a
                              className="c58"
                              href="/docs/basics#getting-started"
                              onClick={[Function]}
                              rel="noopener"
                              target="_blank"
                            >
                              Getting started
                            </a>
                          </styled.a>
                        </Link>
                      </Link>
                    </Link>
                     section! Enjoy ✨
                  </p>
                </Paragraph>
              </div>
            </div>
          </styled.div>
        </I18n>
      </HomepageGettingStarted>
      <styled.footer>
        <footer
          className="c66"
        >
          <styled.div>
            <div
              className="c23"
            >
              <Trans
                i18nKey="madeWithLove"
                parent="div"
              >
                <div>
                  Made with 
                  <Styled(HeartIcon)>
                    <HeartIcon
                      className="c67"
                      height={null}
                      width={null}
                    >
                      <svg
                        className="octicons octicons-heart-icon c67"
                        height={null}
                        viewBox="0 0 12 16"
                        width={null}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M11.2 3c-.52-.63-1.25-.95-2.2-1-.97 0-1.69.42-2.2 1-.51.58-.78.92-.8 1-.02-.08-.28-.42-.8-1-.52-.58-1.17-1-2.2-1-.95.05-1.69.38-2.2 1-.52.61-.78 1.28-.8 2 0 .52.09 1.52.67 2.67C1.25 8.82 3.01 10.61 6 13c2.98-2.39 4.77-4.17 5.34-5.33C11.91 6.51 12 5.5 12 5c-.02-.72-.28-1.39-.8-2.02V3z"
                          fillRule="evenodd"
                        />
                      </svg>
                    </HeartIcon>
                  </Styled(HeartIcon)>
                   by 
                  <Link
                    href="https://twitter.com/glenmaddern"
                    inline={true}
                    white={true}
                  >
                    <Link
                      href="https://twitter.com/glenmaddern"
                    >
                      <styled.a
                        data-white={true}
                        href="https://twitter.com/glenmaddern"
                        onClick={[Function]}
                      >
                        <a
                          className="c68"
                          data-white={true}
                          href="https://twitter.com/glenmaddern"
                          onClick={[Function]}
                          rel="noopener"
                          target="_blank"
                        >
                          @glenmaddern
                        </a>
                      </styled.a>
                    </Link>
                  </Link>
                  , 
                  <Link
                    href="https://twitter.com/mxstbr"
                    inline={true}
                    white={true}
                  >
                    <Link
                      href="https://twitter.com/mxstbr"
                    >
                      <styled.a
                        data-white={true}
                        href="https://twitter.com/mxstbr"
                        onClick={[Function]}
                      >
                        <a
                          className="c68"
                          data-white={true}
                          href="https://twitter.com/mxstbr"
                          onClick={[Function]}
                          rel="noopener"
                          target="_blank"
                        >
                          @mxstbr
                        </a>
                      </styled.a>
                    </Link>
                  </Link>
                   & 
                  <Link
                    href="https://twitter.com/_philpl"
                    inline={true}
                    white={true}
                  >
                    <Link
                      href="https://twitter.com/_philpl"
                    >
                      <styled.a
                        data-white={true}
                        href="https://twitter.com/_philpl"
                        onClick={[Function]}
                      >
                        <a
                          className="c68"
                          data-white={true}
                          href="https://twitter.com/_philpl"
                          onClick={[Function]}
                          rel="noopener"
                          target="_blank"
                        >
                          @_philpl‬
                        </a>
                      </styled.a>
                    </Link>
                  </Link>
                </div>
              </Trans>
            </div>
          </styled.div>
        </footer>
      </styled.footer>
    </div>
  </I18n>
</Index>
`;

exports[`Index renders in spanish 1`] = `
.c60 {
  box-shadow: 0.05555555555555555rem 0.05555555555555555rem 1.1111111111111112rem rgba(20,20,20,0.27);
  overflow: hidden;
  margin: 1.9444444444444444rem 0;
  text-align: left;
}

.c61 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: stretch;
  -webkit-justify-content: stretch;
  -ms-flex-pack: stretch;
  justify-content: stretch;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c62 {
  background: #1d1f27;
  font-size: 0.8rem;
  font-family: "Operator Mono SSm A","Operator Mono SSm B",monospace;
  font-weight: 300;
  height: 22.22222222222222rem;
  overflow-y: scroll;
  overflow-x: hidden;
  cursor: text;
  white-space: pre-wrap;
  -webkit-flex-basis: 50%;
  -ms-flex-basis: 50%;
  flex-basis: 50%;
  width: 50%;
  max-width: 50%;
}

.c63 {
  position: relative;
  padding: 0.5rem;
  background: white;
  color: black;
  height: auto;
  overflow: hidden;
  -webkit-flex-basis: 50%;
  -ms-flex-basis: 50%;
  flex-basis: 50%;
  width: 50%;
  max-width: 50%;
}

.c34 {
  display: block;
  width: 100%;
  padding: 0.4444444444444444rem;
  background: #ff5555;
  color: white;
  font-size: 0.8rem;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  white-space: pre;
}

.c31 {
  display: inline-block;
  text-decoration: none;
  color: inherit;
  cursor: pointer;
  padding: 0.1111111111111111rem 0.4444444444444444rem;
  margin: -0.1111111111111111rem -0.4444444444444444rem;
}

.c58 {
  color: rgb(219,112,147);
  text-decoration: underline;
  font-weight: 600;
  cursor: pointer;
}

.c68 {
  color: white;
  text-decoration: underline;
  font-weight: 600;
  cursor: pointer;
}

.c44 {
  width: 56.888888888888886rem;
  max-width: 100%;
  margin: 0 auto;
  padding: 5rem 2.2222222222222223rem 1.6666666666666667rem 2.2222222222222223rem;
  box-sizing: border-box;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  -webkit-transition: -webkit-transform 150ms ease-out;
  -webkit-transition: transform 150ms ease-out;
  transition: transform 150ms ease-out;
}

.c47 {
  display: block;
  text-align: left;
  width: 100%;
  color: rgb(243,182,97);
  font-size: 2.3333333333333335rem;
  font-weight: bold;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
}

.c49 {
  font-size: 1.7777777777777777rem;
  font-weight: 500;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
}

.c54 {
  display: inline-block;
  font-family: "Operator Mono SSm A","Operator Mono SSm B",monospace;
  font-size: 90%;
  font-weight: 300;
  padding: 0 0.05em 0.1em;
  vertical-align: bottom;
  line-height: 1.4;
}

.c57 {
  background: #1d1f27;
  font-size: 0.8rem;
  font-family: "Operator Mono SSm A","Operator Mono SSm B",monospace;
  font-weight: 300;
  white-space: pre-wrap;
  border-radius: 0.16666666666666666rem;
  box-shadow: 1px 1px 20px rgba(20,20,20,0.27);
  margin: 1.9444444444444444rem 0;
  overflow-x: hidden;
}

.c50 {
  position: relative;
  display: block;
  visibility: hidden;
  height: 0;
  top: -3.888888888888889rem;
}

.c52 {
  display: none;
  position: absolute;
  left: 0;
  color: inherit;
}

.c53 {
  width: 1.1111111111111112rem;
  opacity: 0.7;
  margin-top: -0.2777777777777778rem;
}

.c53:hover {
  opacity: 0.9;
}

.c48 {
  position: relative;
  margin-left: -1.6666666666666667rem;
  padding-left: 1.6666666666666667rem;
}

.c48:hover .c51 {
  display: inline-block;
}

.c45 {
  text-align: center;
}

.c46 {
  margin: 0 0.5em 3em;
  height: 1.5em;
}

.c55 {
  border-radius: 3px;
  padding: 0.25em 1em;
  margin: 0 1em;
  background: transparent;
  color: palevioletred;
  border: 2px solid palevioletred;
}

.c56 {
  border-radius: 3px;
  padding: 0.25em 1em;
  margin: 0 1em;
  background: transparent;
  color: palevioletred;
  border: 2px solid palevioletred;
  background: palevioletred;
  color: white;
}

.c59 {
  border-radius: 3px;
  padding: 0.25em 1em;
  background: transparent;
  color: palevioletred;
  border: 2px solid palevioletred;
}

.c7 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 0.2777777777777778rem;
  height: 0.2777777777777778rem;
  margin: 0 0.8333333333333334rem;
  border-radius: 50%;
  background: currentColor;
  opacity: 0.35;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c6 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  display: inline-block;
  line-height: 2.7777777777777777rem;
  -webkit-transition: opacity 0.2s,-webkit-transform 0.2s;
  -webkit-transition: opacity 0.2s,transform 0.2s;
  transition: opacity 0.2s,transform 0.2s;
  cursor: pointer;
  -webkit-letter-spacing: 0.022222222222222223rem;
  -moz-letter-spacing: 0.022222222222222223rem;
  -ms-letter-spacing: 0.022222222222222223rem;
  letter-spacing: 0.022222222222222223rem;
  color: currentColor;
}

.c6:hover,
.c6:focus {
  opacity: 0.8;
}

.c6:active {
  -webkit-transform: scale(0.95);
  -ms-transform: scale(0.95);
  transform: scale(0.95);
  opacity: 0.6;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c10 {
  display: inline-block;
  margin-right: 1.1111111111111112rem;
  line-height: 2.7777777777777777rem;
  -webkit-transition: opacity 0.2s,-webkit-transform 0.2s;
  -webkit-transition: opacity 0.2s,transform 0.2s;
  transition: opacity 0.2s,transform 0.2s;
  cursor: pointer;
}

.c10:last-child {
  margin-right: 0;
}

.c10:hover,
.c10:focus {
  opacity: 0.8;
}

.c10:active {
  -webkit-transform: scale(0.95);
  -ms-transform: scale(0.95);
  transform: scale(0.95);
  opacity: 0.6;
}

.c10 svg path {
  fill: currentColor;
}

.c11 {
  width: 0.7777777777777778rem;
  height: 0.7777777777777778rem;
}

.c12 {
  width: 0.9444444444444444rem;
  height: 0.9444444444444444rem;
}

.c13 {
  width: 0.9444444444444444rem;
  height: 0.7777777777777778rem;
}

.c4 {
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;
  background-position: center;
  background-size: contain;
  background-image: url(/static/nav-logo.png);
  width: 9.11111111111111rem;
  height: 2.2222222222222223rem;
}

.c16 {
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;
  background-position: center;
  background-size: contain;
  background-image: url(/static/icon.png);
  width: 5.555555555555555rem;
  height: 1.6666666666666667rem;
}

.c19 svg {
  display: inline-block;
}

.c19 svg path {
  fill: currentColor;
}

.c17 {
  background: none;
  outline: none;
  border: none;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  min-width: 2.7777777777777777rem;
  height: 2.7777777777777777rem;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
}

.c17:focus {
  border: 0.1111111111111111rem solid currentColor;
  border-radius: 0.1111111111111111rem;
}

.c14 {
  display: none;
}

.c20 {
  position: absolute;
  top: 2.7777777777777777rem;
  left: 0;
  right: 0;
  height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: space-between;
  -webkit-justify-content: space-between;
  -ms-flex-pack: space-between;
  justify-content: space-between;
  padding: 0 1.1111111111111112rem;
  -webkit-transition: height 0.1s;
  transition: height 0.1s;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-overflow-scrolling: touch;
  overflow-x: scroll;
  overflow-y: hidden;
  background: #efefef;
  color: #868686;
}

.c15 {
  display: inline-block;
  vertical-align: center;
}

.c18 {
  -webkit-transition: -webkit-transform 0.1s;
  -webkit-transition: transform 0.1s;
  transition: transform 0.1s;
}

.c21 {
  padding-right: 1.1111111111111112rem;
}

.c0 {
  position: fixed;
  left: 0;
  box-sizing: border-box;
  z-index: 3;
  width: 100%;
  height: 2.7777777777777777rem;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.8333333333333334rem;
  font-weight: 500;
  background: transparent;
  -webkit-transition: background 300ms ease-out;
  transition: background 300ms ease-out;
  color: white;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: space-between;
  -webkit-justify-content: space-between;
  -ms-flex-pack: space-between;
  justify-content: space-between;
  padding: 0 1.1111111111111112rem;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c3 {
  display: inline-block;
  vertical-align: center;
  margin-right: 1.9444444444444444rem;
}

.c26 {
  font-weight: 600;
  font-size: 1.3rem;
}

.c27 {
  font-size: 1.1rem;
  font-weight: 400;
}

.c25 {
  margin: 2rem 0;
}

.c25 h1,
.c25 h2 {
  margin: 0;
}

.c24 {
  width: 6.944444444444445rem;
  height: 6.944444444444445rem;
}

.c36 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5rem;
  margin-bottom: 2rem;
}

.c35 {
  text-transform: uppercase;
  color: #fff;
  font-size: 0.8rem;
  font-weight: 600;
  margin: 2.5rem 0 0.5rem;
  opacity: 0.8;
}

.c37 {
  position: relative;
  height: 1.75rem;
  margin: 0.5rem;
  bottom: -0.2rem;
  opacity: 0.8;
  filter: brightness(0) invert(1);
  -webkit-transition: opacity 125ms ease-in-out;
  transition: opacity 125ms ease-in-out;
}

.c37:hover {
  opacity: 1;
}

.c38 {
  position: relative;
  height: 1.75rem;
  margin: 0.5rem;
  bottom: 0;
  opacity: 0.8;
  filter: brightness(0) invert(1);
  -webkit-transition: opacity 125ms ease-in-out;
  transition: opacity 125ms ease-in-out;
}

.c38:hover {
  opacity: 1;
}

.c39 {
  position: relative;
  height: 2rem;
  margin: 0.5rem;
  bottom: 0;
  opacity: 0.8;
  filter: brightness(0) invert(1);
  -webkit-transition: opacity 125ms ease-in-out;
  transition: opacity 125ms ease-in-out;
}

.c39:hover {
  opacity: 1;
}

.c40 {
  position: relative;
  height: 3rem;
  margin: 0.5rem;
  bottom: 0.625rem;
  opacity: 0.8;
  filter: brightness(0) invert(1);
  -webkit-transition: opacity 125ms ease-in-out;
  transition: opacity 125ms ease-in-out;
}

.c40:hover {
  opacity: 1;
}

.c41 {
  position: relative;
  height: 2.25rem;
  margin: 0.5rem;
  bottom: 0.16rem;
  opacity: 0.8;
  filter: brightness(0) invert(1);
  -webkit-transition: opacity 125ms ease-in-out;
  transition: opacity 125ms ease-in-out;
}

.c41:hover {
  opacity: 1;
}

.c42 {
  position: relative;
  height: 1.5rem;
  margin: 0.5rem;
  bottom: -0.15rem;
  opacity: 0.8;
  filter: brightness(0) invert(1);
  -webkit-transition: opacity 125ms ease-in-out;
  transition: opacity 125ms ease-in-out;
}

.c42:hover {
  opacity: 1;
}

.c43 {
  position: relative;
  height: 2rem;
  margin: 0.5rem;
  bottom: 0.25rem;
  opacity: 0.8;
  filter: brightness(0) invert(1);
  -webkit-transition: opacity 125ms ease-in-out;
  transition: opacity 125ms ease-in-out;
}

.c43:hover {
  opacity: 1;
}

.c22 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  color: white;
  background: linear-gradient(20deg,rgb(219,112,147),#daa357);
  box-shadow: 0 2px 20px rgba(0,0,0,0.17);
  box-sizing: border-box;
  min-height: 100vh;
}

.c23 {
  width: 56.888888888888886rem;
  max-width: 100%;
  margin: 0 auto;
  padding: 5rem 2.2222222222222223rem 1.6666666666666667rem 2.2222222222222223rem;
  box-sizing: border-box;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  -webkit-transition: -webkit-transform 150ms ease-out;
  -webkit-transition: transform 150ms ease-out;
  transition: transform 150ms ease-out;
  font-family: "Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  width: 75rem;
}

.c32 {
  display: inline-block;
  box-shadow: 0.05555555555555555rem 0.05555555555555555rem 1.1111111111111112rem rgba(20,20,20,0.27);
  margin: 1.9444444444444444rem 0;
  text-align: left;
  width: 100%;
  max-width: 34rem;
}

.c33 {
  background: #1d1f27;
  font-size: 0.8rem;
  font-family: "Operator Mono SSm A","Operator Mono SSm B",monospace;
  font-weight: 300;
  height: 22.22222222222222rem;
  overflow-y: scroll;
  overflow-x: hidden;
  cursor: text;
  white-space: pre-wrap;
  height: 24rem;
  white-space: pre;
  width: 100%;
}

.c28 {
  margin: 2rem 0;
}

.c66 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  color: white;
  background: rgb(219,112,147);
  box-shadow: 0 -2px 20px rgba(0,0,0,0.17);
  box-sizing: border-box;
  margin-top: 2.7777777777777777rem;
}

.c67 {
  display: inline-block;
  width: 0.9444444444444444rem;
}

.c29 {
  display: inline-block;
  border-radius: 3px;
  padding: 0.5rem 0;
  margin: 0.5rem 1rem;
  width: 11rem;
  background: transparent;
  color: white;
  border: 2px solid white;
  background: white;
  color: palevioletred;
}

.c30 {
  display: inline-block;
  border-radius: 3px;
  padding: 0.5rem 0;
  margin: 0.5rem 1rem;
  width: 11rem;
  background: transparent;
  color: white;
  border: 2px solid white;
}

.c64 {
  border-radius: 3px;
  padding: 0.25em 1em;
  margin: 0 1em;
  background: transparent;
  color: palevioletred;
  border: 2px solid palevioletred;
}

.c65 {
  border-radius: 3px;
  padding: 0.25em 1em;
  margin: 0 1em;
  background: transparent;
  color: palevioletred;
  border: 2px solid palevioletred;
  background: palevioletred;
  color: white;
}

@media (max-width:40.625em) {
  .c61 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (max-width:40.625em) {
  .c62 {
    -webkit-flex-basis: auto;
    -ms-flex-basis: auto;
    flex-basis: auto;
    width: 100%;
    max-width: 100%;
    height: auto;
  }
}

@media (max-width:40.625em) {
  .c63 {
    -webkit-flex-basis: auto;
    -ms-flex-basis: auto;
    flex-basis: auto;
    width: 100%;
    max-width: 100%;
    height: auto;
  }
}

@media (min-width:62.5em) {
  .c31 {
    border-radius: 0.16666666666666666rem;
  }

  .c31:hover {
    background: rgba(20,20,20,0.1);
  }
}

@media (max-width:62.5em) {
  .c44 {
    padding: 3.888888888888889rem 1.1111111111111112rem 1.6666666666666667rem 1.1111111111111112rem;
  }
}

@media (max-width:62.5em) {
  .c50 {
    top: -5rem;
  }
}

@media (max-width:62.5em) {
  .c48 {
    margin-left: 0;
  }

  .c48 .c51 {
    display: inline-block;
  }
}

@media (max-width:62.5em) {
  .c14 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: space-between;
    -webkit-justify-content: space-between;
    -ms-flex-pack: space-between;
    justify-content: space-between;
    height: 2.7777777777777777rem;
  }
}

@media (max-width:62.5em) {
  .c1 {
    display: none;
  }
}

@media (max-width:62.5em) {
  .c23 {
    padding: 3.888888888888889rem 1.1111111111111112rem 1.6666666666666667rem 1.1111111111111112rem;
  }
}

<Index>
  <I18n
    ns={
      Array [
        "home",
        "translations",
      ]
    }
  >
    <div>
      <SeoHead
        title="styled-components"
      >
        <SideEffect(Head)>
          <Head />
        </SideEffect(Head)>
      </SeoHead>
      <WithIsScrolled>
        <Nav
          isMobileNavFolded={true}
          onMobileNavToggle={[Function]}
          onRouteChange={[Function]}
          showSideNav={false}
          transparent={true}
        >
          <div>
            <Navbar
              isMobileNavFolded={true}
              onMobileNavToggle={[Function]}
              showSideNav={false}
              transparent={true}
            >
              <styled.nav
                transparent={true}
              >
                <nav
                  className="c0"
                >
                  <styled.div>
                    <div
                      className="c1"
                    >
                      <styled.div>
                        <div
                          className="c2"
                        >
                          <Styled(Link)>
                            <Link
                              className="c3"
                              href="/"
                              unstyled={true}
                            >
                              <Link
                                href="/"
                              >
                                <a
                                  className="c3"
                                  href="/"
                                  onClick={[Function]}
                                >
                                  <styled.div>
                                    <div
                                      className="c4"
                                    />
                                  </styled.div>
                                </a>
                              </Link>
                            </Link>
                          </Styled(Link)>
                          <NavLinks>
                            <styled.nav>
                              <nav
                                className="c5"
                              >
                                <Styled(Link)
                                  href="/"
                                >
                                  <Link
                                    className="c6"
                                    href="/"
                                    unstyled={true}
                                  >
                                    <Link
                                      href="/"
                                    >
                                      <a
                                        className="c6"
                                        href="/"
                                        onClick={[Function]}
                                      >
                                        Homepage
                                      </a>
                                    </Link>
                                  </Link>
                                </Styled(Link)>
                                <styled.span>
                                  <span
                                    className="c7"
                                  />
                                </styled.span>
                                <Styled(Link)
                                  href="/docs"
                                >
                                  <Link
                                    className="c6"
                                    href="/docs"
                                    unstyled={true}
                                  >
                                    <Link
                                      href="/docs"
                                    >
                                      <a
                                        className="c6"
                                        href="/docs"
                                        onClick={[Function]}
                                      >
                                        Documentation
                                      </a>
                                    </Link>
                                  </Link>
                                </Styled(Link)>
                                <styled.span>
                                  <span
                                    className="c7"
                                  />
                                </styled.span>
                                <Styled(Link)
                                  href="/ecosystem"
                                >
                                  <Link
                                    className="c6"
                                    href="/ecosystem"
                                    unstyled={true}
                                  >
                                    <Link
                                      href="/ecosystem"
                                    >
                                      <a
                                        className="c6"
                                        href="/ecosystem"
                                        onClick={[Function]}
                                      >
                                        Ecosystem
                                      </a>
                                    </Link>
                                  </Link>
                                </Styled(Link)>
                              </nav>
                            </styled.nav>
                          </NavLinks>
                        </div>
                      </styled.div>
                      <styled.div>
                        <div
                          className="c8"
                        >
                          <Social>
                            <styled.nav>
                              <nav
                                className="c9"
                              >
                                <Styled(Link)
                                  href="https://spectrum.chat/styled-components/"
                                >
                                  <Link
                                    className="c10"
                                    href="https://spectrum.chat/styled-components/"
                                    unstyled={true}
                                  >
                                    <Link
                                      href="https://spectrum.chat/styled-components/"
                                    >
                                      <a
                                        className="c10"
                                        href="https://spectrum.chat/styled-components/"
                                        onClick={[Function]}
                                      >
                                        <Spectrum>
                                          <styled.svg
                                            height="14"
                                            viewBox="0 0 15 15"
                                            width="14"
                                            xmlns="http://www.w3.org/2000/svg"
                                            xmlnsXlink="http://www.w3.org/1999/xlink"
                                          >
                                            <svg
                                              className="c11"
                                              height="14"
                                              viewBox="0 0 15 15"
                                              width="14"
                                              xmlns="http://www.w3.org/2000/svg"
                                              xmlnsXlink="http://www.w3.org/1999/xlink"
                                            >
                                              <title>
                                                spectrum-logo
                                              </title>
                                              <use
                                                fill="#FFF"
                                                xlinkHref="#spectrum"
                                              />
                                              <defs>
                                                <path
                                                  d="M0 6.5V1c0-.6.4-1 1-1 9 .3 13.7 5 14 14 0 .6-.4 1-1 1H8.5c-.6 0-1-.4-1-1-.3-4.4-2-6.2-6.5-6.5-.6 0-1-.4-1-1z"
                                                  id="spectrum"
                                                />
                                              </defs>
                                            </svg>
                                          </styled.svg>
                                        </Spectrum>
                                      </a>
                                    </Link>
                                  </Link>
                                </Styled(Link)>
                                <Styled(Link)
                                  href="https://github.com/styled-components"
                                >
                                  <Link
                                    className="c10"
                                    href="https://github.com/styled-components"
                                    unstyled={true}
                                  >
                                    <Link
                                      href="https://github.com/styled-components"
                                    >
                                      <a
                                        className="c10"
                                        href="https://github.com/styled-components"
                                        onClick={[Function]}
                                      >
                                        <Github>
                                          <styled.svg
                                            height="17"
                                            viewBox="0 0 17 17"
                                            width="17"
                                            xmlns="http://www.w3.org/2000/svg"
                                            xmlnsXlink="http://www.w3.org/1999/xlink"
                                          >
                                            <svg
                                              className="c12"
                                              height="17"
                                              viewBox="0 0 17 17"
                                              width="17"
                                              xmlns="http://www.w3.org/2000/svg"
                                              xmlnsXlink="http://www.w3.org/1999/xlink"
                                            >
                                              <title>
                                                github-logo
                                              </title>
                                              <use
                                                fill="#FFF"
                                                xlinkHref="#a"
                                              />
                                              <defs>
                                                <path
                                                  d="M15.86 4.34c-.76-1.335-1.79-2.392-3.093-3.17C11.463.39 10.042 0 8.5 0 6.958 0 5.536.39 4.233 1.17 2.93 1.947 1.9 3.004 1.14 4.34.38 5.674 0 7.132 0 8.713c0 1.898.54 3.606 1.62 5.122 1.082 1.517 2.48 2.566 4.19 3.148.2.038.347.01.443-.08.096-.09.144-.203.144-.34l-.006-.612v-1l-.25.05c-.16.03-.36.05-.61.04-.24 0-.5-.03-.77-.08-.26-.05-.51-.16-.74-.34-.23-.18-.39-.41-.49-.7l-.11-.26c-.07-.17-.19-.36-.35-.58-.16-.21-.32-.35-.48-.43l-.08-.05c-.05-.04-.09-.08-.14-.132-.04-.053-.08-.106-.1-.16-.02-.053 0-.097.06-.13.06-.035.17-.052.32-.052l.22.036c.15.03.33.12.55.27.22.154.4.35.54.59.17.31.375.55.615.71.24.164.484.245.727.245s.456-.02.63-.056c.18-.037.346-.094.5-.17.067-.507.248-.896.54-1.17-.42-.043-.795-.112-1.13-.203-.34-.09-.685-.24-1.04-.44-.36-.2-.657-.455-.894-.76-.234-.3-.43-.7-.58-1.19-.15-.49-.225-1.06-.225-1.7 0-.917.29-1.695.875-2.34-.27-.69-.244-1.46.08-2.313.214-.07.53-.015.95.155.42.17.73.314.926.435.195.12.35.225.47.308.684-.2 1.394-.3 2.124-.3s1.44.1 2.124.297l.42-.27c.288-.184.628-.35 1.02-.5.39-.15.69-.195.895-.126.334.857.364 1.63.09 2.317.584.645.875 1.42.875 2.34 0 .64-.072 1.21-.223 1.707-.15.5-.343.897-.583 1.196-.24.298-.54.55-.896.754-.355.202-.702.35-1.04.44-.334.09-.712.16-1.132.205.38.34.57.875.57 1.61v2.39c0 .136.045.25.137.34.096.09.24.118.44.08 1.71-.582 3.11-1.632 4.19-3.15 1.06-1.525 1.6-3.235 1.6-5.13 0-1.58-.38-3.04-1.14-4.37z"
                                                  id="a"
                                                />
                                              </defs>
                                            </svg>
                                          </styled.svg>
                                        </Github>
                                      </a>
                                    </Link>
                                  </Link>
                                </Styled(Link)>
                                <Styled(Link)
                                  href="https://medium.com/styled-components"
                                >
                                  <Link
                                    className="c10"
                                    href="https://medium.com/styled-components"
                                    unstyled={true}
                                  >
                                    <Link
                                      href="https://medium.com/styled-components"
                                    >
                                      <a
                                        className="c10"
                                        href="https://medium.com/styled-components"
                                        onClick={[Function]}
                                      >
                                        <Medium>
                                          <styled.svg
                                            height="14"
                                            viewBox="0 0 17 14"
                                            width="17"
                                            xmlns="http://www.w3.org/2000/svg"
                                            xmlnsXlink="http://www.w3.org/1999/xlink"
                                          >
                                            <svg
                                              className="c13"
                                              height="14"
                                              viewBox="0 0 17 14"
                                              width="17"
                                              xmlns="http://www.w3.org/2000/svg"
                                              xmlnsXlink="http://www.w3.org/1999/xlink"
                                            >
                                              <title>
                                                medium
                                              </title>
                                              <path
                                                d="M5.3 0H.5l1.8 2.4v9L0 13.7h5.3l-2-2.3V3.7L7.8 14 12 3.7v8.7l-1.3 1.3H17l-1.5-1.3v-11L17 0h-4.5L9 8.2 5.2 0z"
                                                fill="#fff"
                                              />
                                            </svg>
                                          </styled.svg>
                                        </Medium>
                                      </a>
                                    </Link>
                                  </Link>
                                </Styled(Link)>
                              </nav>
                            </styled.nav>
                          </Social>
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                  <MobileNavbar
                    isMobileNavFolded={true}
                    onMobileNavToggle={[Function]}
                    showSideNav={false}
                  >
                    <styled.div>
                      <div
                        className="c14"
                      >
                        <Styled(Link)>
                          <Link
                            className="c15"
                            href="/"
                            unstyled={true}
                          >
                            <Link
                              href="/"
                            >
                              <a
                                className="c15"
                                href="/"
                                onClick={[Function]}
                              >
                                <styled.div
                                  compact={true}
                                >
                                  <div
                                    className="c16"
                                  />
                                </styled.div>
                              </a>
                            </Link>
                          </Link>
                        </Styled(Link)>
                        <styled.button
                          active={false}
                          onClick={[Function]}
                        >
                          <button
                            className="c17"
                            onClick={[Function]}
                          >
                            <styled.div
                              rotate={false}
                            >
                              <div
                                className="c18"
                                rotate={false}
                              >
                                <ArrowIcon>
                                  <styled.svg
                                    height="8"
                                    width="12"
                                    xmlns="http://www.w3.org/2000/svg"
                                    xmlnsXlink="http://www.w3.org/1999/xlink"
                                  >
                                    <svg
                                      className="c19"
                                      height="8"
                                      width="12"
                                      xmlns="http://www.w3.org/2000/svg"
                                      xmlnsXlink="http://www.w3.org/1999/xlink"
                                    >
                                      <title>
                                        arrow down
                                      </title>
                                      <use
                                        fill="#FFF"
                                        transform="translate(1 1)"
                                        xlinkHref="#menuArrow"
                                      />
                                      <defs>
                                        <path
                                          d="M5 5l-.7.7.7.7.7-.7L5 5zM9.3-.7l-5 5 1.4 1.4 5-5L9.3-.7zm-3.6 5l-5-5L-.7.7l5 5 1.4-1.4z"
                                          id="menuArrow"
                                        />
                                      </defs>
                                    </svg>
                                  </styled.svg>
                                </ArrowIcon>
                              </div>
                            </styled.div>
                          </button>
                        </styled.button>
                        <styled.div
                          open={false}
                        >
                          <div
                            className="c20"
                            open={false}
                          >
                            <NavLinks>
                              <styled.nav>
                                <nav
                                  className="c5"
                                >
                                  <Styled(Link)
                                    href="/"
                                  >
                                    <Link
                                      className="c6"
                                      href="/"
                                      unstyled={true}
                                    >
                                      <Link
                                        href="/"
                                      >
                                        <a
                                          className="c6"
                                          href="/"
                                          onClick={[Function]}
                                        >
                                          Homepage
                                        </a>
                                      </Link>
                                    </Link>
                                  </Styled(Link)>
                                  <styled.span>
                                    <span
                                      className="c7"
                                    />
                                  </styled.span>
                                  <Styled(Link)
                                    href="/docs"
                                  >
                                    <Link
                                      className="c6"
                                      href="/docs"
                                      unstyled={true}
                                    >
                                      <Link
                                        href="/docs"
                                      >
                                        <a
                                          className="c6"
                                          href="/docs"
                                          onClick={[Function]}
                                        >
                                          Documentation
                                        </a>
                                      </Link>
                                    </Link>
                                  </Styled(Link)>
                                  <styled.span>
                                    <span
                                      className="c7"
                                    />
                                  </styled.span>
                                  <Styled(Link)
                                    href="/ecosystem"
                                  >
                                    <Link
                                      className="c6"
                                      href="/ecosystem"
                                      unstyled={true}
                                    >
                                      <Link
                                        href="/ecosystem"
                                      >
                                        <a
                                          className="c6"
                                          href="/ecosystem"
                                          onClick={[Function]}
                                        >
                                          Ecosystem
                                        </a>
                                      </Link>
                                    </Link>
                                  </Styled(Link)>
                                </nav>
                              </styled.nav>
                            </NavLinks>
                            <styled.span>
                              <span
                                className="c7"
                              />
                            </styled.span>
                            <styled.div>
                              <div
                                className="c21"
                              >
                                <Social>
                                  <styled.nav>
                                    <nav
                                      className="c9"
                                    >
                                      <Styled(Link)
                                        href="https://spectrum.chat/styled-components/"
                                      >
                                        <Link
                                          className="c10"
                                          href="https://spectrum.chat/styled-components/"
                                          unstyled={true}
                                        >
                                          <Link
                                            href="https://spectrum.chat/styled-components/"
                                          >
                                            <a
                                              className="c10"
                                              href="https://spectrum.chat/styled-components/"
                                              onClick={[Function]}
                                            >
                                              <Spectrum>
                                                <styled.svg
                                                  height="14"
                                                  viewBox="0 0 15 15"
                                                  width="14"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                  xmlnsXlink="http://www.w3.org/1999/xlink"
                                                >
                                                  <svg
                                                    className="c11"
                                                    height="14"
                                                    viewBox="0 0 15 15"
                                                    width="14"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    xmlnsXlink="http://www.w3.org/1999/xlink"
                                                  >
                                                    <title>
                                                      spectrum-logo
                                                    </title>
                                                    <use
                                                      fill="#FFF"
                                                      xlinkHref="#spectrum"
                                                    />
                                                    <defs>
                                                      <path
                                                        d="M0 6.5V1c0-.6.4-1 1-1 9 .3 13.7 5 14 14 0 .6-.4 1-1 1H8.5c-.6 0-1-.4-1-1-.3-4.4-2-6.2-6.5-6.5-.6 0-1-.4-1-1z"
                                                        id="spectrum"
                                                      />
                                                    </defs>
                                                  </svg>
                                                </styled.svg>
                                              </Spectrum>
                                            </a>
                                          </Link>
                                        </Link>
                                      </Styled(Link)>
                                      <Styled(Link)
                                        href="https://github.com/styled-components"
                                      >
                                        <Link
                                          className="c10"
                                          href="https://github.com/styled-components"
                                          unstyled={true}
                                        >
                                          <Link
                                            href="https://github.com/styled-components"
                                          >
                                            <a
                                              className="c10"
                                              href="https://github.com/styled-components"
                                              onClick={[Function]}
                                            >
                                              <Github>
                                                <styled.svg
                                                  height="17"
                                                  viewBox="0 0 17 17"
                                                  width="17"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                  xmlnsXlink="http://www.w3.org/1999/xlink"
                                                >
                                                  <svg
                                                    className="c12"
                                                    height="17"
                                                    viewBox="0 0 17 17"
                                                    width="17"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    xmlnsXlink="http://www.w3.org/1999/xlink"
                                                  >
                                                    <title>
                                                      github-logo
                                                    </title>
                                                    <use
                                                      fill="#FFF"
                                                      xlinkHref="#a"
                                                    />
                                                    <defs>
                                                      <path
                                                        d="M15.86 4.34c-.76-1.335-1.79-2.392-3.093-3.17C11.463.39 10.042 0 8.5 0 6.958 0 5.536.39 4.233 1.17 2.93 1.947 1.9 3.004 1.14 4.34.38 5.674 0 7.132 0 8.713c0 1.898.54 3.606 1.62 5.122 1.082 1.517 2.48 2.566 4.19 3.148.2.038.347.01.443-.08.096-.09.144-.203.144-.34l-.006-.612v-1l-.25.05c-.16.03-.36.05-.61.04-.24 0-.5-.03-.77-.08-.26-.05-.51-.16-.74-.34-.23-.18-.39-.41-.49-.7l-.11-.26c-.07-.17-.19-.36-.35-.58-.16-.21-.32-.35-.48-.43l-.08-.05c-.05-.04-.09-.08-.14-.132-.04-.053-.08-.106-.1-.16-.02-.053 0-.097.06-.13.06-.035.17-.052.32-.052l.22.036c.15.03.33.12.55.27.22.154.4.35.54.59.17.31.375.55.615.71.24.164.484.245.727.245s.456-.02.63-.056c.18-.037.346-.094.5-.17.067-.507.248-.896.54-1.17-.42-.043-.795-.112-1.13-.203-.34-.09-.685-.24-1.04-.44-.36-.2-.657-.455-.894-.76-.234-.3-.43-.7-.58-1.19-.15-.49-.225-1.06-.225-1.7 0-.917.29-1.695.875-2.34-.27-.69-.244-1.46.08-2.313.214-.07.53-.015.95.155.42.17.73.314.926.435.195.12.35.225.47.308.684-.2 1.394-.3 2.124-.3s1.44.1 2.124.297l.42-.27c.288-.184.628-.35 1.02-.5.39-.15.69-.195.895-.126.334.857.364 1.63.09 2.317.584.645.875 1.42.875 2.34 0 .64-.072 1.21-.223 1.707-.15.5-.343.897-.583 1.196-.24.298-.54.55-.896.754-.355.202-.702.35-1.04.44-.334.09-.712.16-1.132.205.38.34.57.875.57 1.61v2.39c0 .136.045.25.137.34.096.09.24.118.44.08 1.71-.582 3.11-1.632 4.19-3.15 1.06-1.525 1.6-3.235 1.6-5.13 0-1.58-.38-3.04-1.14-4.37z"
                                                        id="a"
                                                      />
                                                    </defs>
                                                  </svg>
                                                </styled.svg>
                                              </Github>
                                            </a>
                                          </Link>
                                        </Link>
                                      </Styled(Link)>
                                      <Styled(Link)
                                        href="https://medium.com/styled-components"
                                      >
                                        <Link
                                          className="c10"
                                          href="https://medium.com/styled-components"
                                          unstyled={true}
                                        >
                                          <Link
                                            href="https://medium.com/styled-components"
                                          >
                                            <a
                                              className="c10"
                                              href="https://medium.com/styled-components"
                                              onClick={[Function]}
                                            >
                                              <Medium>
                                                <styled.svg
                                                  height="14"
                                                  viewBox="0 0 17 14"
                                                  width="17"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                  xmlnsXlink="http://www.w3.org/1999/xlink"
                                                >
                                                  <svg
                                                    className="c13"
                                                    height="14"
                                                    viewBox="0 0 17 14"
                                                    width="17"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    xmlnsXlink="http://www.w3.org/1999/xlink"
                                                  >
                                                    <title>
                                                      medium
                                                    </title>
                                                    <path
                                                      d="M5.3 0H.5l1.8 2.4v9L0 13.7h5.3l-2-2.3V3.7L7.8 14 12 3.7v8.7l-1.3 1.3H17l-1.5-1.3v-11L17 0h-4.5L9 8.2 5.2 0z"
                                                      fill="#fff"
                                                    />
                                                  </svg>
                                                </styled.svg>
                                              </Medium>
                                            </a>
                                          </Link>
                                        </Link>
                                      </Styled(Link)>
                                    </nav>
                                  </styled.nav>
                                </Social>
                              </div>
                            </styled.div>
                          </div>
                        </styled.div>
                      </div>
                    </styled.div>
                  </MobileNavbar>
                </nav>
              </styled.nav>
            </Navbar>
          </div>
        </Nav>
      </WithIsScrolled>
      <styled.div>
        <div
          className="c22"
        >
          <styled.div>
            <div
              className="c23"
            >
              <LiveProvider
                code="const Button = styled.a\`
                /* Esto renderiza los botones de arriba... ¡Edítame! */
                display: inline-block;
                border-radius: 3px;
                padding: 0.5rem 0;
                margin: 0.5rem 1rem;
                width: 11rem;
                background: transparent;
                color: white;
                border: 2px solid white;
              
                /* El botón de GitHub es un botón primario
                * ¡Edita esto para elegirlo específicamente! */
              
                \${props => props.primary && css\`
                  background: white;
                  color: palevioletred;
                \`}
              \`"
                mountStylesheet={false}
                noInline={false}
                scope={
                  Object {
                    "Link": [Function],
                    "css": [Function],
                    "rem": [Function],
                    "styled": [Function],
                  }
                }
              >
                <div
                  className="react-live"
                  scope={
                    Object {
                      "Link": [Function],
                      "css": [Function],
                      "rem": [Function],
                      "styled": [Function],
                    }
                  }
                >
                  <styled.img>
                    <img
                      alt="styled-components Logo"
                      className="c24"
                      src="/static/logo.png"
                    />
                  </styled.img>
                  <styled.div>
                    <div
                      className="c25"
                    >
                      <styled.h1>
                        <h1
                          className="c26"
                        >
                          Primitivos visuales para la era de los componentes
                        </h1>
                      </styled.h1>
                      <styled.h2>
                        <h2
                          className="c27"
                        >
                          Usa los mejores bits de ES6 y CSS para estilizar tus apps sin estrés 💅
                        </h2>
                      </styled.h2>
                    </div>
                  </styled.div>
                  <styled.div>
                    <div
                      className="c28"
                    >
                      <HomepageLivePreview
                        translate={[Function]}
                      >
                        <div
                          className="react-live-preview undefined"
                        >
                          <styled.a
                            href="https://github.com/styled-components/styled-components"
                            primary={true}
                            rel="noopener"
                            target="_blank"
                          >
                            <a
                              className="c29"
                              href="https://github.com/styled-components/styled-components"
                              rel="noopener"
                              target="_blank"
                            >
                              GitHub
                            </a>
                          </styled.a>
                          <Styled(Link)
                            href="/docs"
                            prefetch={true}
                          >
                            <Link
                              className="c30"
                              href="/docs"
                              prefetch={true}
                            >
                              <Link
                                href="/docs"
                                prefetch={true}
                              >
                                <styled.a
                                  className="c30"
                                  href="/docs"
                                  onClick={[Function]}
                                >
                                  <a
                                    className="c30 c31"
                                    href="/docs"
                                    onClick={[Function]}
                                  >
                                    Documentación
                                  </a>
                                </styled.a>
                              </Link>
                            </Link>
                          </Styled(Link)>
                        </div>
                      </HomepageLivePreview>
                    </div>
                  </styled.div>
                  <styled.div>
                    <div
                      className="c32"
                    >
                      <Styled(LiveEditor)>
                        <Styled(LiveEditor)>
                          <LiveEditor
                            className="c33"
                          >
                            <Editor
                              className="c33"
                              code="const Button = styled.a\`
                              /* Esto renderiza los botones de arriba... ¡Edítame! */
                              display: inline-block;
                              border-radius: 3px;
                              padding: 0.5rem 0;
                              margin: 0.5rem 1rem;
                              width: 11rem;
                              background: transparent;
                              color: white;
                              border: 2px solid white;
                            
                              /* El botón de GitHub es un botón primario
                              * ¡Edita esto para elegirlo específicamente! */
                            
                              \${props => props.primary && css\`
                                background: white;
                                color: palevioletred;
                              \`}
                            \`"
                              contentEditable={true}
                              onChange={[Function]}
                            >
                              <pre
                                className="prism-code c33"
                                contentEditable={true}
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "<span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>a<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`
                                  	<span class=\\"token comment\\" spellcheck=\\"true\\">/* Esto renderiza los botones de arriba... ¡Edítame! */</span>
                                  	<span class=\\"token property\\">display</span><span class=\\"token punctuation\\">:</span> inline-block</span>;<span class=\\"token string language-css\\">
                                  	<span class=\\"token property\\">border-radius</span><span class=\\"token punctuation\\">:</span> 3px</span>;<span class=\\"token string language-css\\">
                                  	<span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> 0.5rem 0</span>;<span class=\\"token string language-css\\">
                                  	<span class=\\"token property\\">margin</span><span class=\\"token punctuation\\">:</span> 0.5rem 1rem</span>;<span class=\\"token string language-css\\">
                                  	<span class=\\"token property\\">width</span><span class=\\"token punctuation\\">:</span> 11rem</span>;<span class=\\"token string language-css\\">
                                  	<span class=\\"token property\\">background</span><span class=\\"token punctuation\\">:</span> transparent</span>;<span class=\\"token string language-css\\">
                                  	<span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> white</span>;<span class=\\"token string language-css\\">
                                  	<span class=\\"token property\\">border</span><span class=\\"token punctuation\\">:</span> 2px solid white</span>;<span class=\\"token string language-css\\">
                                  
                                  	<span class=\\"token comment\\" spellcheck=\\"true\\">/* El botón de GitHub es un botón primario
                                  	* ¡Edita esto para elegirlo específicamente! */</span>
                                  
                                  	</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>props <span class=\\"token operator\\">=</span><span class=\\"token operator\\">></span> props<span class=\\"token punctuation\\">.</span>primary <span class=\\"token operator\\">&amp;&amp;</span> css<span class=\\"token template-string\\"><span class=\\"token string\\">\`
                                  		background: white;
                                  		color: palevioletred;
                                  	\`</span></span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string language-css\\">
                                  \`</span></span>",
                                  }
                                }
                                onChange={[Function]}
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                              />
                            </Editor>
                          </LiveEditor>
                        </Styled(LiveEditor)>
                      </Styled(LiveEditor)>
                      <Styled(LiveError)>
                        <LiveError
                          className="c34"
                        />
                      </Styled(LiveError)>
                    </div>
                  </styled.div>
                </div>
              </LiveProvider>
              <styled.p>
                <p
                  className="c35"
                >
                  Usado por gente en
                </p>
              </styled.p>
              <styled.section>
                <section
                  className="c36"
                >
                  <styled.img
                    bottom="-0.2rem"
                    height="1.75rem"
                    src="/static/bloomberg-logo.svg"
                  >
                    <img
                      className="c37"
                      height="1.75rem"
                      src="/static/bloomberg-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    height="1.75rem"
                    src="/static/atlassian-logo.svg"
                  >
                    <img
                      className="c38"
                      height="1.75rem"
                      src="/static/atlassian-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    src="/static/reddit-logo.svg"
                  >
                    <img
                      className="c39"
                      src="/static/reddit-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    src="/static/target-logo.svg"
                  >
                    <img
                      className="c39"
                      src="/static/target-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    bottom="0.625rem"
                    height="3rem"
                    src="/static/eurovision-logo.svg"
                  >
                    <img
                      className="c40"
                      height="3rem"
                      src="/static/eurovision-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    bottom="0.16rem"
                    height="2.25rem"
                    src="/static/artsy-logo.svg"
                  >
                    <img
                      className="c41"
                      height="2.25rem"
                      src="/static/artsy-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    bottom="-0.15rem"
                    height="1.5rem"
                    src="/static/ideo-logo.svg"
                  >
                    <img
                      className="c42"
                      height="1.5rem"
                      src="/static/ideo-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    src="/static/huffpost-logo.svg"
                  >
                    <img
                      className="c39"
                      src="/static/huffpost-logo.svg"
                    />
                  </styled.img>
                  <styled.img
                    bottom="0.25rem"
                    height="2rem"
                    src="/static/coinbase-logo.svg"
                  >
                    <img
                      className="c43"
                      height="2rem"
                      src="/static/coinbase-logo.svg"
                    />
                  </styled.img>
                </section>
              </styled.section>
            </div>
          </styled.div>
        </div>
      </styled.div>
      <HomepageGettingStarted>
        <I18n
          ns="home"
        >
          <styled.div>
            <div
              className="c44"
            >
              <styled.div>
                <div
                  className="c45"
                >
                  <a
                    href="https://github.com/styled-components/styled-components"
                  >
                    <styled.img
                      alt="Estrellas en Github"
                      src="https://img.shields.io/github/stars/styled-components/styled-components.svg?style=social&label=Star&maxAge=3600"
                    >
                      <img
                        alt="Estrellas en Github"
                        className="c46"
                        src="https://img.shields.io/github/stars/styled-components/styled-components.svg?style=social&label=Star&maxAge=3600"
                      />
                    </styled.img>
                  </a>
                  <a
                    href="https://www.npmjs.com/package/styled-components"
                  >
                    <styled.img
                      alt="Versión actual"
                      src="https://img.shields.io/npm/v/styled-components.svg"
                    >
                      <img
                        alt="Versión actual"
                        className="c46"
                        src="https://img.shields.io/npm/v/styled-components.svg"
                      />
                    </styled.img>
                  </a>
                  <styled.img
                    alt="Descargas mensuales"
                    src="https://img.shields.io/npm/dm/styled-components.svg?maxAge=3600"
                  >
                    <img
                      alt="Descargas mensuales"
                      className="c46"
                      src="https://img.shields.io/npm/dm/styled-components.svg?maxAge=3600"
                    />
                  </styled.img>
                  <styled.img
                    alt="Tamaño en gzip"
                    src="http://img.badgesize.io/https://unpkg.com/styled-components/dist/styled-components.min.js?compression=gzip&label=gzip%20size"
                  >
                    <img
                      alt="Tamaño en gzip"
                      className="c46"
                      src="http://img.badgesize.io/https://unpkg.com/styled-components/dist/styled-components.min.js?compression=gzip&label=gzip%20size"
                    />
                  </styled.img>
                  <a
                    href="https://spectrum.chat/styled-components"
                  >
                    <styled.img
                      alt="Únete a la comunidad en Spectrum"
                      src="https://withspectrum.github.io/badge/badge.svg"
                    >
                      <img
                        alt="Únete a la comunidad en Spectrum"
                        className="c46"
                        src="https://withspectrum.github.io/badge/badge.svg"
                      />
                    </styled.img>
                  </a>
                </div>
              </styled.div>
              <div>
                <Heading
                  level={1}
                  literal={null}
                  nodeKey="1:1-1:111"
                >
                  <styled.h1>
                    <h1
                      className="c47"
                    >
                      Empezando
                    </h1>
                  </styled.h1>
                </Heading>
                <Heading
                  level={2}
                  literal={null}
                  nodeKey="2:1-2:141"
                >
                  <Link
                    id="instalacin"
                    sub={false}
                  >
                    <Styled(styled.h2)>
                      <styled.h2
                        className="c48"
                      >
                        <h2
                          className="c48 c49"
                        >
                          <styled.div
                            id="instalacin"
                          >
                            <div
                              aria-hidden={true}
                              className="c50"
                              id="instalacin"
                            />
                          </styled.div>
                          <styled.a
                            href="#instalacin"
                          >
                            <a
                              className="c51 c52"
                              href="#instalacin"
                            >
                              <Styled(LinkIcon)>
                                <LinkIcon
                                  className="c53"
                                  height={null}
                                  width={null}
                                >
                                  <svg
                                    className="octicons octicons-link-icon c53"
                                    height={null}
                                    viewBox="0 0 16 16"
                                    width={null}
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"
                                      fillRule="evenodd"
                                    />
                                  </svg>
                                </LinkIcon>
                              </Styled(LinkIcon)>
                            </a>
                          </styled.a>
                          Instalación
                        </h2>
                      </styled.h2>
                    </Styled(styled.h2)>
                  </Link>
                </Heading>
                <Paragraph
                  literal={null}
                  nodeKey="4:1-5:1147"
                >
                  <p>
                    Para descargar styled-components ejecuta 
                    <Code
                      inline={true}
                      literal="npm install --save styled-components"
                      nodeKey="4:1-5:1141"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          npm install --save styled-components
                        </span>
                      </styled.span>
                    </Code>
                    .
                    Eso es todo lo que necesitas hacer, ¡Ahora estás listo para usarlo en tu app! (sip, no es necesario compilarlo 👌)
                  </p>
                </Paragraph>
                <Heading
                  level={2}
                  literal={null}
                  nodeKey="7:1-7:341"
                >
                  <Link
                    id="tu-primer-componente-estilizado"
                    sub={false}
                  >
                    <Styled(styled.h2)>
                      <styled.h2
                        className="c48"
                      >
                        <h2
                          className="c48 c49"
                        >
                          <styled.div
                            id="tu-primer-componente-estilizado"
                          >
                            <div
                              aria-hidden={true}
                              className="c50"
                              id="tu-primer-componente-estilizado"
                            />
                          </styled.div>
                          <styled.a
                            href="#tu-primer-componente-estilizado"
                          >
                            <a
                              className="c51 c52"
                              href="#tu-primer-componente-estilizado"
                            >
                              <Styled(LinkIcon)>
                                <LinkIcon
                                  className="c53"
                                  height={null}
                                  width={null}
                                >
                                  <svg
                                    className="octicons octicons-link-icon c53"
                                    height={null}
                                    viewBox="0 0 16 16"
                                    width={null}
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"
                                      fillRule="evenodd"
                                    />
                                  </svg>
                                </LinkIcon>
                              </Styled(LinkIcon)>
                            </a>
                          </styled.a>
                          Tu primer componente estilizado
                        </h2>
                      </styled.h2>
                    </Styled(styled.h2)>
                  </Link>
                </Heading>
                <Paragraph
                  literal={null}
                  nodeKey="9:1-11:9711"
                >
                  <p>
                    Digamos que quieres crear un componente 
                    <Code
                      inline={true}
                      literal="<Button />"
                      nodeKey="9:1-11:971"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          &lt;Button /&gt;
                        </span>
                      </styled.span>
                    </Code>
                     simplre y reusable que puedas usar utilizar en toda tu aplicación.
                    Debe de haber una versión normal y una grande y una versión 
                    <Code
                      inline={true}
                      literal="primaria"
                      nodeKey="9:1-11:975"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          primaria
                        </span>
                      </styled.span>
                    </Code>
                     para los botones importantes.
                    Así es como debe de verse una vez renderizado: (Esto es un ejemplo en vivo, ¡Haz click en ellos!)
                  </p>
                </Paragraph>
              </div>
              <styled.div>
                <div
                  className="c45"
                >
                  <styled.button
                    onClick={[Function]}
                  >
                    <button
                      className="c55"
                      onClick={[Function]}
                    >
                      Botón normal
                    </button>
                  </styled.button>
                  <styled.button
                    onClick={[Function]}
                    primary={true}
                  >
                    <button
                      className="c56"
                      onClick={[Function]}
                    >
                      Botón primario
                    </button>
                  </styled.button>
                </div>
              </styled.div>
              <div>
                <Paragraph
                  literal={null}
                  nodeKey="1:1-1:713"
                >
                  <p>
                    Primero, hay que importar styled-components y crear un 
                    <Code
                      inline={true}
                      literal="styled.button"
                      nodeKey="1:1-1:711"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          styled.button
                        </span>
                      </styled.span>
                    </Code>
                    :
                  </p>
                </Paragraph>
                <CodeBlock
                  codeinfo={
                    Array [
                      "jsx",
                    ]
                  }
                  language="jsx"
                  literal="import styled from 'styled-components';
                
                const Button = styled.button\`\`;
                "
                  nodeKey="3:1-7:31"
                >
                  <CodeBlock
                    code="import styled from 'styled-components';
                  
                  const Button = styled.button\`\`;
                  "
                    language="jsx"
                  >
                    <styled.pre
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "<span class=\\"token keyword\\">import</span> styled <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'styled-components'</span><span class=\\"token punctuation\\">;</span>
                        
                        <span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>button<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`\`</span></span><span class=\\"token punctuation\\">;</span>
                        ",
                        }
                      }
                    >
                      <pre
                        className="prism-code c57"
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "<span class=\\"token keyword\\">import</span> styled <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'styled-components'</span><span class=\\"token punctuation\\">;</span>
                          
                          <span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>button<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`\`</span></span><span class=\\"token punctuation\\">;</span>
                          ",
                          }
                        }
                      />
                    </styled.pre>
                  </CodeBlock>
                </CodeBlock>
                <Paragraph
                  literal={null}
                  nodeKey="9:1-12:9727"
                >
                  <p>
                    ¡Esta variable 
                    <Code
                      inline={true}
                      literal="Button"
                      nodeKey="9:1-12:971"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          Button
                        </span>
                      </styled.span>
                    </Code>
                     aquí ahora es un componente de React que puedes usar como cualquier otro componente de React!
                    Este inusual sintaxis "backtick" es una característica nueva de JavaScript llamada una "tagged template literal".
                    Sabes como ejecutar funciones con paréntesis? (
                    <Code
                      inline={true}
                      literal="miFuncion()"
                      nodeKey="9:1-12:9716"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          miFuncion()
                        </span>
                      </styled.span>
                    </Code>
                    ) Bueno, ¡Ahora también puedes ejecutar funciones con "backticks"!
                    
                    <Link
                      href="/docs/advanced#tagged-template-literals"
                      literal={null}
                      nodeKey="9:1-12:9725"
                    >
                      <Link
                        href="/docs/advanced#tagged-template-literals"
                        inline={true}
                      >
                        <Link
                          href="/docs/advanced#tagged-template-literals"
                        >
                          <styled.a
                            href="/docs/advanced#tagged-template-literals"
                            onClick={[Function]}
                          >
                            <a
                              className="c58"
                              href="/docs/advanced#tagged-template-literals"
                              onClick={[Function]}
                              rel="noopener"
                              target="_blank"
                            >
                              Aquí hay una explicación
                            </a>
                          </styled.a>
                        </Link>
                      </Link>
                    </Link>
                     de como funciona exactamente.
                  </p>
                </Paragraph>
                <Paragraph
                  literal={null}
                  nodeKey="14:1-14:1273"
                >
                  <p>
                    Si renderizas nuestro encantador componente ahora (Justo como cualquier otro componente: 
                    <Code
                      inline={true}
                      literal="<Button />"
                      nodeKey="14:1-14:1271"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          &lt;Button /&gt;
                        </span>
                      </styled.span>
                    </Code>
                    ) esto es lo que obtienes:
                  </p>
                </Paragraph>
              </div>
              <styled.div>
                <div
                  className="c45"
                >
                  <button>
                    ¡Soy un &lt;Button /&gt;!
                  </button>
                </div>
              </styled.div>
              <div>
                <Paragraph
                  literal={null}
                  nodeKey="1:1-2:786"
                >
                  <p>
                    ¡Eso renderiza un botón! aunque no es muy bonito 😕 podemos hacerlo mejor,
                    démosle un poco de estilo y ¡Obtengamos la belleza escondida que lleva dentro!
                  </p>
                </Paragraph>
                <CodeBlock
                  codeinfo={
                    Array [
                      "jsx",
                    ]
                  }
                  language="jsx"
                  literal="const Button = styled.button\`
                  border-radius: 3px;
                  padding: 0.25em 1em;
                  margin: 0 1em;
                  background: transparent;
                  color: palevioletred;
                  border: 2px solid palevioletred;
                \`;
                "
                  nodeKey="4:1-13:2"
                >
                  <CodeBlock
                    code="const Button = styled.button\`
                    border-radius: 3px;
                    padding: 0.25em 1em;
                    margin: 0 1em;
                    background: transparent;
                    color: palevioletred;
                    border: 2px solid palevioletred;
                  \`;
                  "
                    language="jsx"
                  >
                    <styled.pre
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "<span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>button<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`
                          <span class=\\"token property\\">border-radius</span><span class=\\"token punctuation\\">:</span> 3px</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> 0.25em 1em</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">margin</span><span class=\\"token punctuation\\">:</span> 0 1em</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">background</span><span class=\\"token punctuation\\">:</span> transparent</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> palevioletred</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">border</span><span class=\\"token punctuation\\">:</span> 2px solid palevioletred</span>;<span class=\\"token string language-css\\">
                        \`</span></span><span class=\\"token punctuation\\">;</span>
                        ",
                        }
                      }
                    >
                      <pre
                        className="prism-code c57"
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "<span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>button<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`
                            <span class=\\"token property\\">border-radius</span><span class=\\"token punctuation\\">:</span> 3px</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> 0.25em 1em</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">margin</span><span class=\\"token punctuation\\">:</span> 0 1em</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">background</span><span class=\\"token punctuation\\">:</span> transparent</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> palevioletred</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">border</span><span class=\\"token punctuation\\">:</span> 2px solid palevioletred</span>;<span class=\\"token string language-css\\">
                          \`</span></span><span class=\\"token punctuation\\">;</span>
                          ",
                          }
                        }
                      />
                    </styled.pre>
                  </CodeBlock>
                </CodeBlock>
              </div>
              <styled.div>
                <div
                  className="c45"
                >
                  <styled.button>
                    <button
                      className="c59"
                    >
                      Soy un &lt;Button /&gt; estilizado
                    </button>
                  </styled.button>
                </div>
              </styled.div>
              <div>
                <Paragraph
                  literal={null}
                  nodeKey="1:1-4:9311"
                >
                  <p>
                    Como puedes ver, styled-components permite escribir CSS real en tu JavaScript. Esto significa que puedes usar todas
                    las características de CSS que usas y amas, incluyendo (pero de lejos no se limita a) media queries, todos
                    los pseudo-selectors, anidaciones, etc. También liga estilos a componentes, lo cual tiene propiedades interesantes.
                    (aprende más acerca 
                    <Link
                      href="/docs/basics#motivation"
                      literal={null}
                      nodeKey="1:1-4:939"
                    >
                      <Link
                        href="/docs/basics#motivation"
                        inline={true}
                      >
                        <Link
                          href="/docs/basics#motivation"
                        >
                          <styled.a
                            href="/docs/basics#motivation"
                            onClick={[Function]}
                          >
                            <a
                              className="c58"
                              href="/docs/basics#motivation"
                              onClick={[Function]}
                              rel="noopener"
                              target="_blank"
                            >
                              de las ideas detrás de styled-components aquí
                            </a>
                          </styled.a>
                        </Link>
                      </Link>
                    </Link>
                    )
                  </p>
                </Paragraph>
                <Paragraph
                  literal={null}
                  nodeKey="6:1-7:1867"
                >
                  <p>
                    El último paso es que tenemos que definir como se ve un botón primario.
                    Para hacer eso importamos 
                    <Code
                      inline={true}
                      literal="{ css }"
                      nodeKey="6:1-7:1863"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          { css }
                        </span>
                      </styled.span>
                    </Code>
                     de 
                    <Code
                      inline={true}
                      literal="styled-components"
                      nodeKey="6:1-7:1865"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          styled-components
                        </span>
                      </styled.span>
                    </Code>
                     e interpolamos una función dentro de nuestra plantilla (tagged template literal), la cual pasa los props de nuestro componente:
                  </p>
                </Paragraph>
                <CodeBlock
                  codeinfo={
                    Array [
                      "jsx",
                    ]
                  }
                  language="jsx"
                  literal="import styled, { css } from styled-components
                
                const Button = styled.button\`
                  border-radius: 3px;
                  padding: 0.25em 1em;
                  margin: 0 1em;
                  background: transparent;
                  color: palevioletred;
                  border: 2px solid palevioletred;
                
                  \${props => props.primary && css\`
                    background: palevioletred;
                    color: white;
                  \`}
                \`;
                "
                  nodeKey="9:1-25:2"
                >
                  <CodeBlock
                    code="import styled, { css } from styled-components
                  
                  const Button = styled.button\`
                    border-radius: 3px;
                    padding: 0.25em 1em;
                    margin: 0 1em;
                    background: transparent;
                    color: palevioletred;
                    border: 2px solid palevioletred;
                  
                    \${props => props.primary && css\`
                      background: palevioletred;
                      color: white;
                    \`}
                  \`;
                  "
                    language="jsx"
                  >
                    <styled.pre
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "<span class=\\"token keyword\\">import</span> styled<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span> css <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> styled<span class=\\"token operator\\">-</span>components
                        
                        <span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>button<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`
                          <span class=\\"token property\\">border-radius</span><span class=\\"token punctuation\\">:</span> 3px</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> 0.25em 1em</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">margin</span><span class=\\"token punctuation\\">:</span> 0 1em</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">background</span><span class=\\"token punctuation\\">:</span> transparent</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> palevioletred</span>;<span class=\\"token string language-css\\">
                          <span class=\\"token property\\">border</span><span class=\\"token punctuation\\">:</span> 2px solid palevioletred</span>;<span class=\\"token string language-css\\">
                        
                          </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>props <span class=\\"token operator\\">=</span><span class=\\"token operator\\">></span> props<span class=\\"token punctuation\\">.</span>primary <span class=\\"token operator\\">&amp;&amp;</span> css<span class=\\"token template-string\\"><span class=\\"token string\\">\`
                            background: palevioletred;
                            color: white;
                          \`</span></span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string language-css\\">
                        \`</span></span><span class=\\"token punctuation\\">;</span>
                        ",
                        }
                      }
                    >
                      <pre
                        className="prism-code c57"
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "<span class=\\"token keyword\\">import</span> styled<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span> css <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> styled<span class=\\"token operator\\">-</span>components
                          
                          <span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>button<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`
                            <span class=\\"token property\\">border-radius</span><span class=\\"token punctuation\\">:</span> 3px</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> 0.25em 1em</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">margin</span><span class=\\"token punctuation\\">:</span> 0 1em</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">background</span><span class=\\"token punctuation\\">:</span> transparent</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> palevioletred</span>;<span class=\\"token string language-css\\">
                            <span class=\\"token property\\">border</span><span class=\\"token punctuation\\">:</span> 2px solid palevioletred</span>;<span class=\\"token string language-css\\">
                          
                            </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>props <span class=\\"token operator\\">=</span><span class=\\"token operator\\">></span> props<span class=\\"token punctuation\\">.</span>primary <span class=\\"token operator\\">&amp;&amp;</span> css<span class=\\"token template-string\\"><span class=\\"token string\\">\`
                              background: palevioletred;
                              color: white;
                            \`</span></span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string language-css\\">
                          \`</span></span><span class=\\"token punctuation\\">;</span>
                          ",
                          }
                        }
                      />
                    </styled.pre>
                  </CodeBlock>
                </CodeBlock>
                <Paragraph
                  literal={null}
                  nodeKey="27:1-28:517"
                >
                  <p>
                    Todo lo que estamos diciendo aquí es que cuando la pripiedad 
                    <Code
                      inline={true}
                      literal="primary"
                      nodeKey="27:1-28:511"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          primary
                        </span>
                      </styled.span>
                    </Code>
                     esté puesta queremos que añada un poco más de 
                    <Code
                      inline={true}
                      literal="css"
                      nodeKey="27:1-28:513"
                    >
                      <styled.span>
                        <span
                          className="c54"
                        >
                          css
                        </span>
                      </styled.span>
                    </Code>
                     a nuestro componente,
                    en este caso, cambiar el color de fondo y el color.
                  </p>
                </Paragraph>
                <Paragraph
                  literal={null}
                  nodeKey="30:1-30:683"
                >
                  <p>
                    Eso es todo, ¡Hemos acabado! Echa un vistazo al componente terminado
                  </p>
                </Paragraph>
                <CodeBlock
                  codeinfo={
                    Array [
                      "react",
                    ]
                  }
                  language="react"
                  literal="const Button = styled.button\`
                  border-radius: 3px;
                  padding: 0.25em 1em;
                  margin: 0 1em;
                  background: transparent;
                  color: palevioletred;
                  border: 2px solid palevioletred;
                
                  \${props => props.primary && css\`
                    background: palevioletred;
                    color: white;
                  \`}
                \`;
                
                render(
                  <div>
                    <Button>Botón normal</Button>
                    <Button primary>Botón primario</Button>
                  </div>
                );
                "
                  nodeKey="32:1-53:2"
                >
                  <LiveEdit
                    code="const Button = styled.button\`
                    border-radius: 3px;
                    padding: 0.25em 1em;
                    margin: 0 1em;
                    background: transparent;
                    color: palevioletred;
                    border: 2px solid palevioletred;
                  
                    \${props => props.primary && css\`
                      background: palevioletred;
                      color: white;
                    \`}
                  \`;
                  
                  render(
                    <div>
                      <Button>Botón normal</Button>
                      <Button primary>Botón primario</Button>
                    </div>
                  );
                  "
                    noInline={true}
                  >
                    <Styled(LiveProvider)
                      code="const Button = styled.button\`
                      border-radius: 3px;
                      padding: 0.25em 1em;
                      margin: 0 1em;
                      background: transparent;
                      color: palevioletred;
                      border: 2px solid palevioletred;
                    
                      \${props => props.primary && css\`
                        background: palevioletred;
                        color: white;
                      \`}
                    \`;
                    
                    render(
                      <div>
                        <Button>Botón normal</Button>
                        <Button primary>Botón primario</Button>
                      </div>
                    );
                    "
                      mountStylesheet={false}
                      noInline={true}
                      scope={
                        Object {
                          "ThemeProvider": [Function],
                          "css": [Function],
                          "keyframes": [Function],
                          "styled": [Function],
                          "withTheme": [Function],
                        }
                      }
                    >
                      <LiveProvider
                        className="c60"
                        code="const Button = styled.button\`
                        border-radius: 3px;
                        padding: 0.25em 1em;
                        margin: 0 1em;
                        background: transparent;
                        color: palevioletred;
                        border: 2px solid palevioletred;
                      
                        \${props => props.primary && css\`
                          background: palevioletred;
                          color: white;
                        \`}
                      \`;
                      
                      render(
                        <div>
                          <Button>Botón normal</Button>
                          <Button primary>Botón primario</Button>
                        </div>
                      );
                      "
                        mountStylesheet={false}
                        noInline={true}
                        scope={
                          Object {
                            "ThemeProvider": [Function],
                            "css": [Function],
                            "keyframes": [Function],
                            "styled": [Function],
                            "withTheme": [Function],
                          }
                        }
                      >
                        <div
                          className="react-live c60"
                          scope={
                            Object {
                              "ThemeProvider": [Function],
                              "css": [Function],
                              "keyframes": [Function],
                              "styled": [Function],
                              "withTheme": [Function],
                            }
                          }
                        >
                          <styled.div>
                            <div
                              className="c61"
                            >
                              <Styled(LiveEditor)>
                                <Styled(LiveEditor)>
                                  <LiveEditor
                                    className="c62"
                                  >
                                    <Editor
                                      className="c62"
                                      code="const Button = styled.button\`
                                      border-radius: 3px;
                                      padding: 0.25em 1em;
                                      margin: 0 1em;
                                      background: transparent;
                                      color: palevioletred;
                                      border: 2px solid palevioletred;
                                    
                                      \${props => props.primary && css\`
                                        background: palevioletred;
                                        color: white;
                                      \`}
                                    \`;
                                    
                                    render(
                                      <div>
                                        <Button>Botón normal</Button>
                                        <Button primary>Botón primario</Button>
                                      </div>
                                    );
                                    "
                                      contentEditable={true}
                                      onChange={[Function]}
                                    >
                                      <pre
                                        className="prism-code c62"
                                        contentEditable={true}
                                        dangerouslySetInnerHTML={
                                          Object {
                                            "__html": "<span class=\\"token keyword\\">const</span> Button <span class=\\"token operator\\">=</span> styled<span class=\\"token punctuation\\">.</span>button<span class=\\"token styled-template-string\\"><span class=\\"token string language-css\\">\`
                                          	<span class=\\"token property\\">border-radius</span><span class=\\"token punctuation\\">:</span> 3px</span>;<span class=\\"token string language-css\\">
                                          	<span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> 0.25em 1em</span>;<span class=\\"token string language-css\\">
                                          	<span class=\\"token property\\">margin</span><span class=\\"token punctuation\\">:</span> 0 1em</span>;<span class=\\"token string language-css\\">
                                          	<span class=\\"token property\\">background</span><span class=\\"token punctuation\\">:</span> transparent</span>;<span class=\\"token string language-css\\">
                                          	<span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> palevioletred</span>;<span class=\\"token string language-css\\">
                                          	<span class=\\"token property\\">border</span><span class=\\"token punctuation\\">:</span> 2px solid palevioletred</span>;<span class=\\"token string language-css\\">
                                          
                                          	</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>props <span class=\\"token operator\\">=</span><span class=\\"token operator\\">></span> props<span class=\\"token punctuation\\">.</span>primary <span class=\\"token operator\\">&amp;&amp;</span> css<span class=\\"token template-string\\"><span class=\\"token string\\">\`
                                          		background: palevioletred;
                                          		color: white;
                                          	\`</span></span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string language-css\\">
                                          \`</span></span><span class=\\"token punctuation\\">;</span>
                                          
                                          <span class=\\"token function\\">render</span><span class=\\"token punctuation\\">(</span>
                                          	<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span><span class=\\"token punctuation\\">></span></span>
                                          		<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Button</span><span class=\\"token punctuation\\">></span></span>Botón normal<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>Button</span><span class=\\"token punctuation\\">></span></span>
                                          		<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Button</span> <span class=\\"token attr-name\\">primary</span><span class=\\"token punctuation\\">></span></span>Botón primario<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>Button</span><span class=\\"token punctuation\\">></span></span>
                                          	<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">></span></span>
                                          <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>
                                          ",
                                          }
                                        }
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                      />
                                    </Editor>
                                  </LiveEditor>
                                </Styled(LiveEditor)>
                              </Styled(LiveEditor)>
                              <Styled(LivePreview)>
                                <LivePreview
                                  className="c63"
                                >
                                  <div
                                    className="react-live-preview c63"
                                  >
                                    <div>
                                      <styled.button>
                                        <button
                                          className="c64"
                                        >
                                          Botón normal
                                        </button>
                                      </styled.button>
                                      <styled.button
                                        primary={true}
                                      >
                                        <button
                                          className="c65"
                                        >
                                          Botón primario
                                        </button>
                                      </styled.button>
                                    </div>
                                  </div>
                                </LivePreview>
                              </Styled(LivePreview)>
                            </div>
                          </styled.div>
                          <Styled(LiveError)>
                            <LiveError
                              className="c34"
                            />
                          </Styled(LiveError)>
                        </div>
                      </LiveProvider>
                    </Styled(LiveProvider)>
                  </LiveEdit>
                </CodeBlock>
                <Paragraph
                  literal={null}
                  nodeKey="55:1-55:1452"
                >
                  <p>
                    ¡Genial 😍 ese es un editor en vivo también, así que juega un poco con él para obtener una sensación de lo que es trabajar con styled-components!
                  </p>
                </Paragraph>
                <Paragraph
                  literal={null}
                  nodeKey="57:1-57:14710"
                >
                  <p>
                    Una vez que acabes, ¡Echa un vistazo a la 
                    <Link
                      href="/docs"
                      literal={null}
                      nodeKey="57:1-57:1473"
                    >
                      <Link
                        href="/docs"
                        inline={true}
                      >
                        <Link
                          href="/docs"
                        >
                          <styled.a
                            href="/docs"
                            onClick={[Function]}
                          >
                            <a
                              className="c58"
                              href="/docs"
                              onClick={[Function]}
                              rel="noopener"
                              target="_blank"
                            >
                              documentación
                            </a>
                          </styled.a>
                        </Link>
                      </Link>
                    </Link>
                    , especialmente la sección de 
                    <Link
                      href="/docs/basics#getting-started"
                      literal={null}
                      nodeKey="57:1-57:1477"
                    >
                      <Link
                        href="/docs/basics#getting-started"
                        inline={true}
                      >
                        <Link
                          href="/docs/basics#getting-started"
                        >
                          <styled.a
                            href="/docs/basics#getting-started"
                            onClick={[Function]}
                          >
                            <a
                              className="c58"
                              href="/docs/basics#getting-started"
                              onClick={[Function]}
                              rel="noopener"
                              target="_blank"
                            >
                              empezando
                            </a>
                          </styled.a>
                        </Link>
                      </Link>
                    </Link>
                    ! Disfruta ✨
                  </p>
                </Paragraph>
              </div>
            </div>
          </styled.div>
        </I18n>
      </HomepageGettingStarted>
      <styled.footer>
        <footer
          className="c66"
        >
          <styled.div>
            <div
              className="c23"
            >
              <Trans
                i18nKey="madeWithLove"
                parent="div"
              >
                <div>
                  Hecho con 
                  <Styled(HeartIcon)>
                    <HeartIcon
                      className="c67"
                      height={null}
                      width={null}
                    >
                      <svg
                        className="octicons octicons-heart-icon c67"
                        height={null}
                        viewBox="0 0 12 16"
                        width={null}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M11.2 3c-.52-.63-1.25-.95-2.2-1-.97 0-1.69.42-2.2 1-.51.58-.78.92-.8 1-.02-.08-.28-.42-.8-1-.52-.58-1.17-1-2.2-1-.95.05-1.69.38-2.2 1-.52.61-.78 1.28-.8 2 0 .52.09 1.52.67 2.67C1.25 8.82 3.01 10.61 6 13c2.98-2.39 4.77-4.17 5.34-5.33C11.91 6.51 12 5.5 12 5c-.02-.72-.28-1.39-.8-2.02V3z"
                          fillRule="evenodd"
                        />
                      </svg>
                    </HeartIcon>
                  </Styled(HeartIcon)>
                   por 
                  <Link
                    href="https://twitter.com/glenmaddern"
                    inline={true}
                    white={true}
                  >
                    <Link
                      href="https://twitter.com/glenmaddern"
                    >
                      <styled.a
                        data-white={true}
                        href="https://twitter.com/glenmaddern"
                        onClick={[Function]}
                      >
                        <a
                          className="c68"
                          data-white={true}
                          href="https://twitter.com/glenmaddern"
                          onClick={[Function]}
                          rel="noopener"
                          target="_blank"
                        >
                          @glenmaddern
                        </a>
                      </styled.a>
                    </Link>
                  </Link>
                  , 
                  <Link
                    href="https://twitter.com/mxstbr"
                    inline={true}
                    white={true}
                  >
                    <Link
                      href="https://twitter.com/mxstbr"
                    >
                      <styled.a
                        data-white={true}
                        href="https://twitter.com/mxstbr"
                        onClick={[Function]}
                      >
                        <a
                          className="c68"
                          data-white={true}
                          href="https://twitter.com/mxstbr"
                          onClick={[Function]}
                          rel="noopener"
                          target="_blank"
                        >
                          @mxstbr
                        </a>
                      </styled.a>
                    </Link>
                  </Link>
                   & 
                  <Link
                    href="https://twitter.com/_philpl"
                    inline={true}
                    white={true}
                  >
                    <Link
                      href="https://twitter.com/_philpl"
                    >
                      <styled.a
                        data-white={true}
                        href="https://twitter.com/_philpl"
                        onClick={[Function]}
                      >
                        <a
                          className="c68"
                          data-white={true}
                          href="https://twitter.com/_philpl"
                          onClick={[Function]}
                          rel="noopener"
                          target="_blank"
                        >
                          @_philpl‬
                        </a>
                      </styled.a>
                    </Link>
                  </Link>
                </div>
              </Trans>
            </div>
          </styled.div>
        </footer>
      </styled.footer>
    </div>
  </I18n>
</Index>
`;
